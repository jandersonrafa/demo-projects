server.port=8081
# actuator
spring.application.name=Service A
#indica que health deve mostrar detalhes sempre
management.endpoint.health.show-details=always
#alem do health e do info ele sempre vai export todos endpoints disponiveis
management.endpoints.web.exposure.include=*
info.app.name=@project.name@
info.app.version=@project.version@
info.app.encoding=@project.build.sourceEncoding@
info.app.java.version=@java.version@
management.info.env.enabled=true
management.endpoint.env.enabled=true
management.endpoint.env.show-values=ALWAYS
management.endpoint.logfile.external-file=./logfile.log
logging.file.name=./logfile.log
logging.level.root=
management.endpoint.env.post.enabled=true
management.endpoints.web.request-headers.enable=true
management.endpoint.metrics.enabled=true
management.endpoint.prometheus.enabled=true

# h2 e liquibase
spring.liquibase.change-log=classpath:db/changelog/db.changelog-master.xml
spring.liquibase.enabled=true

spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

spring.h2.console.enabled=true

# basic auth credentials
# credencias para logar e acessar os endpoints actuator do client
spring.security.user.name=servicealogin
spring.security.user.password=servicealogin

# configurando o Spring Boot Admin Server
spring.boot.admin.client.url=http://localhost:8080
spring.boot.admin.client.instance.service-base-url=http://localhost:8081
spring.boot.admin.client.username=admin
spring.boot.admin.client.password=admin

# Configurando para inserir metadados com as credenciais para server conseguir
# chamar endpoints protegidos do client
spring.boot.admin.client.instance.metadata.user.name=${spring.security.user.name}
spring.boot.admin.client.instance.name=${spring.application.name}
spring.boot.admin.client.instance.metadata.user.password=${spring.security.user.password}

#logging.level.org.springframework.security=TRACE
