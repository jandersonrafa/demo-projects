/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 2776.0, "series": [{"data": [[0.0, 41.0], [0.1, 54.0], [0.2, 58.0], [0.3, 63.0], [0.4, 67.0], [0.5, 72.0], [0.6, 75.0], [0.7, 79.0], [0.8, 83.0], [0.9, 87.0], [1.0, 91.0], [1.1, 95.0], [1.2, 98.0], [1.3, 101.0], [1.4, 104.0], [1.5, 107.0], [1.6, 109.0], [1.7, 111.0], [1.8, 114.0], [1.9, 118.0], [2.0, 121.0], [2.1, 126.0], [2.2, 130.0], [2.3, 134.0], [2.4, 137.0], [2.5, 142.0], [2.6, 147.0], [2.7, 154.0], [2.8, 163.0], [2.9, 174.0], [3.0, 184.0], [3.1, 199.0], [3.2, 206.0], [3.3, 217.0], [3.4, 224.0], [3.5, 234.0], [3.6, 241.0], [3.7, 251.0], [3.8, 259.0], [3.9, 269.0], [4.0, 278.0], [4.1, 288.0], [4.2, 298.0], [4.3, 307.0], [4.4, 316.0], [4.5, 322.0], [4.6, 331.0], [4.7, 340.0], [4.8, 349.0], [4.9, 359.0], [5.0, 367.0], [5.1, 374.0], [5.2, 381.0], [5.3, 387.0], [5.4, 395.0], [5.5, 402.0], [5.6, 408.0], [5.7, 413.0], [5.8, 419.0], [5.9, 426.0], [6.0, 432.0], [6.1, 437.0], [6.2, 442.0], [6.3, 449.0], [6.4, 455.0], [6.5, 460.0], [6.6, 467.0], [6.7, 471.0], [6.8, 475.0], [6.9, 480.0], [7.0, 486.0], [7.1, 492.0], [7.2, 498.0], [7.3, 504.0], [7.4, 510.0], [7.5, 516.0], [7.6, 523.0], [7.7, 532.0], [7.8, 539.0], [7.9, 547.0], [8.0, 556.0], [8.1, 564.0], [8.2, 572.0], [8.3, 579.0], [8.4, 585.0], [8.5, 591.0], [8.6, 600.0], [8.7, 609.0], [8.8, 617.0], [8.9, 627.0], [9.0, 634.0], [9.1, 640.0], [9.2, 647.0], [9.3, 652.0], [9.4, 658.0], [9.5, 664.0], [9.6, 669.0], [9.7, 674.0], [9.8, 680.0], [9.9, 686.0], [10.0, 690.0], [10.1, 696.0], [10.2, 702.0], [10.3, 706.0], [10.4, 710.0], [10.5, 714.0], [10.6, 718.0], [10.7, 721.0], [10.8, 725.0], [10.9, 729.0], [11.0, 732.0], [11.1, 735.0], [11.2, 737.0], [11.3, 740.0], [11.4, 742.0], [11.5, 745.0], [11.6, 747.0], [11.7, 750.0], [11.8, 753.0], [11.9, 756.0], [12.0, 758.0], [12.1, 760.0], [12.2, 763.0], [12.3, 764.0], [12.4, 766.0], [12.5, 768.0], [12.6, 770.0], [12.7, 772.0], [12.8, 774.0], [12.9, 776.0], [13.0, 778.0], [13.1, 780.0], [13.2, 782.0], [13.3, 784.0], [13.4, 786.0], [13.5, 788.0], [13.6, 789.0], [13.7, 792.0], [13.8, 793.0], [13.9, 794.0], [14.0, 796.0], [14.1, 798.0], [14.2, 800.0], [14.3, 801.0], [14.4, 803.0], [14.5, 804.0], [14.6, 805.0], [14.7, 807.0], [14.8, 809.0], [14.9, 810.0], [15.0, 811.0], [15.1, 813.0], [15.2, 814.0], [15.3, 815.0], [15.4, 817.0], [15.5, 818.0], [15.6, 819.0], [15.7, 820.0], [15.8, 822.0], [15.9, 823.0], [16.0, 824.0], [16.1, 826.0], [16.2, 827.0], [16.3, 829.0], [16.4, 830.0], [16.5, 831.0], [16.6, 832.0], [16.7, 834.0], [16.8, 835.0], [16.9, 836.0], [17.0, 837.0], [17.1, 838.0], [17.2, 839.0], [17.3, 840.0], [17.4, 841.0], [17.5, 842.0], [17.6, 842.0], [17.7, 843.0], [17.8, 844.0], [17.9, 845.0], [18.0, 846.0], [18.1, 847.0], [18.2, 848.0], [18.3, 849.0], [18.4, 850.0], [18.5, 851.0], [18.6, 852.0], [18.7, 853.0], [18.8, 854.0], [18.9, 854.0], [19.0, 855.0], [19.1, 856.0], [19.2, 857.0], [19.3, 857.0], [19.4, 858.0], [19.5, 859.0], [19.6, 860.0], [19.7, 861.0], [19.8, 861.0], [19.9, 862.0], [20.0, 863.0], [20.1, 863.0], [20.2, 864.0], [20.3, 864.0], [20.4, 865.0], [20.5, 866.0], [20.6, 867.0], [20.7, 867.0], [20.8, 868.0], [20.9, 869.0], [21.0, 869.0], [21.1, 870.0], [21.2, 871.0], [21.3, 871.0], [21.4, 872.0], [21.5, 872.0], [21.6, 873.0], [21.7, 874.0], [21.8, 874.0], [21.9, 875.0], [22.0, 876.0], [22.1, 876.0], [22.2, 877.0], [22.3, 878.0], [22.4, 878.0], [22.5, 879.0], [22.6, 879.0], [22.7, 880.0], [22.8, 880.0], [22.9, 881.0], [23.0, 882.0], [23.1, 882.0], [23.2, 883.0], [23.3, 883.0], [23.4, 884.0], [23.5, 884.0], [23.6, 885.0], [23.7, 885.0], [23.8, 886.0], [23.9, 887.0], [24.0, 887.0], [24.1, 888.0], [24.2, 888.0], [24.3, 888.0], [24.4, 889.0], [24.5, 889.0], [24.6, 890.0], [24.7, 890.0], [24.8, 891.0], [24.9, 891.0], [25.0, 892.0], [25.1, 892.0], [25.2, 893.0], [25.3, 893.0], [25.4, 894.0], [25.5, 894.0], [25.6, 895.0], [25.7, 895.0], [25.8, 896.0], [25.9, 896.0], [26.0, 896.0], [26.1, 897.0], [26.2, 897.0], [26.3, 898.0], [26.4, 898.0], [26.5, 899.0], [26.6, 899.0], [26.7, 900.0], [26.8, 900.0], [26.9, 901.0], [27.0, 901.0], [27.1, 902.0], [27.2, 902.0], [27.3, 902.0], [27.4, 903.0], [27.5, 903.0], [27.6, 904.0], [27.7, 904.0], [27.8, 905.0], [27.9, 905.0], [28.0, 905.0], [28.1, 906.0], [28.2, 906.0], [28.3, 907.0], [28.4, 907.0], [28.5, 907.0], [28.6, 908.0], [28.7, 908.0], [28.8, 909.0], [28.9, 909.0], [29.0, 910.0], [29.1, 910.0], [29.2, 910.0], [29.3, 911.0], [29.4, 911.0], [29.5, 912.0], [29.6, 912.0], [29.7, 912.0], [29.8, 913.0], [29.9, 913.0], [30.0, 914.0], [30.1, 914.0], [30.2, 914.0], [30.3, 915.0], [30.4, 915.0], [30.5, 916.0], [30.6, 916.0], [30.7, 917.0], [30.8, 917.0], [30.9, 917.0], [31.0, 918.0], [31.1, 918.0], [31.2, 919.0], [31.3, 919.0], [31.4, 919.0], [31.5, 920.0], [31.6, 920.0], [31.7, 921.0], [31.8, 921.0], [31.9, 921.0], [32.0, 922.0], [32.1, 922.0], [32.2, 922.0], [32.3, 923.0], [32.4, 923.0], [32.5, 923.0], [32.6, 924.0], [32.7, 924.0], [32.8, 925.0], [32.9, 925.0], [33.0, 925.0], [33.1, 926.0], [33.2, 926.0], [33.3, 926.0], [33.4, 927.0], [33.5, 927.0], [33.6, 927.0], [33.7, 928.0], [33.8, 928.0], [33.9, 928.0], [34.0, 929.0], [34.1, 929.0], [34.2, 930.0], [34.3, 930.0], [34.4, 930.0], [34.5, 931.0], [34.6, 931.0], [34.7, 932.0], [34.8, 932.0], [34.9, 932.0], [35.0, 933.0], [35.1, 933.0], [35.2, 933.0], [35.3, 934.0], [35.4, 934.0], [35.5, 934.0], [35.6, 935.0], [35.7, 935.0], [35.8, 935.0], [35.9, 936.0], [36.0, 936.0], [36.1, 936.0], [36.2, 937.0], [36.3, 937.0], [36.4, 938.0], [36.5, 938.0], [36.6, 938.0], [36.7, 939.0], [36.8, 939.0], [36.9, 939.0], [37.0, 940.0], [37.1, 940.0], [37.2, 940.0], [37.3, 941.0], [37.4, 941.0], [37.5, 941.0], [37.6, 942.0], [37.7, 942.0], [37.8, 942.0], [37.9, 943.0], [38.0, 943.0], [38.1, 944.0], [38.2, 944.0], [38.3, 944.0], [38.4, 945.0], [38.5, 945.0], [38.6, 945.0], [38.7, 946.0], [38.8, 946.0], [38.9, 946.0], [39.0, 947.0], [39.1, 947.0], [39.2, 947.0], [39.3, 948.0], [39.4, 948.0], [39.5, 948.0], [39.6, 949.0], [39.7, 949.0], [39.8, 949.0], [39.9, 950.0], [40.0, 950.0], [40.1, 950.0], [40.2, 951.0], [40.3, 951.0], [40.4, 952.0], [40.5, 952.0], [40.6, 952.0], [40.7, 953.0], [40.8, 953.0], [40.9, 953.0], [41.0, 954.0], [41.1, 954.0], [41.2, 954.0], [41.3, 955.0], [41.4, 955.0], [41.5, 955.0], [41.6, 956.0], [41.7, 956.0], [41.8, 957.0], [41.9, 957.0], [42.0, 957.0], [42.1, 957.0], [42.2, 958.0], [42.3, 958.0], [42.4, 958.0], [42.5, 959.0], [42.6, 959.0], [42.7, 960.0], [42.8, 960.0], [42.9, 960.0], [43.0, 961.0], [43.1, 961.0], [43.2, 961.0], [43.3, 961.0], [43.4, 962.0], [43.5, 962.0], [43.6, 963.0], [43.7, 963.0], [43.8, 963.0], [43.9, 963.0], [44.0, 964.0], [44.1, 964.0], [44.2, 964.0], [44.3, 965.0], [44.4, 965.0], [44.5, 965.0], [44.6, 966.0], [44.7, 966.0], [44.8, 966.0], [44.9, 967.0], [45.0, 967.0], [45.1, 967.0], [45.2, 968.0], [45.3, 968.0], [45.4, 968.0], [45.5, 969.0], [45.6, 969.0], [45.7, 969.0], [45.8, 969.0], [45.9, 970.0], [46.0, 970.0], [46.1, 970.0], [46.2, 971.0], [46.3, 971.0], [46.4, 971.0], [46.5, 972.0], [46.6, 972.0], [46.7, 972.0], [46.8, 973.0], [46.9, 973.0], [47.0, 973.0], [47.1, 973.0], [47.2, 974.0], [47.3, 974.0], [47.4, 974.0], [47.5, 975.0], [47.6, 975.0], [47.7, 975.0], [47.8, 976.0], [47.9, 976.0], [48.0, 976.0], [48.1, 977.0], [48.2, 977.0], [48.3, 977.0], [48.4, 977.0], [48.5, 978.0], [48.6, 978.0], [48.7, 978.0], [48.8, 979.0], [48.9, 979.0], [49.0, 979.0], [49.1, 980.0], [49.2, 980.0], [49.3, 980.0], [49.4, 981.0], [49.5, 981.0], [49.6, 981.0], [49.7, 982.0], [49.8, 982.0], [49.9, 982.0], [50.0, 983.0], [50.1, 983.0], [50.2, 983.0], [50.3, 984.0], [50.4, 984.0], [50.5, 984.0], [50.6, 984.0], [50.7, 985.0], [50.8, 985.0], [50.9, 986.0], [51.0, 986.0], [51.1, 986.0], [51.2, 987.0], [51.3, 987.0], [51.4, 987.0], [51.5, 988.0], [51.6, 988.0], [51.7, 988.0], [51.8, 988.0], [51.9, 989.0], [52.0, 989.0], [52.1, 989.0], [52.2, 990.0], [52.3, 990.0], [52.4, 991.0], [52.5, 991.0], [52.6, 991.0], [52.7, 992.0], [52.8, 992.0], [52.9, 992.0], [53.0, 992.0], [53.1, 993.0], [53.2, 993.0], [53.3, 993.0], [53.4, 994.0], [53.5, 994.0], [53.6, 994.0], [53.7, 995.0], [53.8, 995.0], [53.9, 995.0], [54.0, 996.0], [54.1, 996.0], [54.2, 996.0], [54.3, 996.0], [54.4, 997.0], [54.5, 997.0], [54.6, 997.0], [54.7, 998.0], [54.8, 998.0], [54.9, 998.0], [55.0, 999.0], [55.1, 999.0], [55.2, 999.0], [55.3, 1000.0], [55.4, 1000.0], [55.5, 1000.0], [55.6, 1001.0], [55.7, 1001.0], [55.8, 1001.0], [55.9, 1002.0], [56.0, 1002.0], [56.1, 1002.0], [56.2, 1003.0], [56.3, 1003.0], [56.4, 1003.0], [56.5, 1004.0], [56.6, 1004.0], [56.7, 1004.0], [56.8, 1005.0], [56.9, 1005.0], [57.0, 1005.0], [57.1, 1006.0], [57.2, 1006.0], [57.3, 1006.0], [57.4, 1006.0], [57.5, 1007.0], [57.6, 1007.0], [57.7, 1007.0], [57.8, 1008.0], [57.9, 1008.0], [58.0, 1008.0], [58.1, 1009.0], [58.2, 1009.0], [58.3, 1009.0], [58.4, 1010.0], [58.5, 1010.0], [58.6, 1011.0], [58.7, 1011.0], [58.8, 1011.0], [58.9, 1012.0], [59.0, 1012.0], [59.1, 1012.0], [59.2, 1013.0], [59.3, 1013.0], [59.4, 1013.0], [59.5, 1013.0], [59.6, 1014.0], [59.7, 1014.0], [59.8, 1015.0], [59.9, 1015.0], [60.0, 1015.0], [60.1, 1016.0], [60.2, 1016.0], [60.3, 1016.0], [60.4, 1017.0], [60.5, 1017.0], [60.6, 1017.0], [60.7, 1018.0], [60.8, 1018.0], [60.9, 1018.0], [61.0, 1018.0], [61.1, 1019.0], [61.2, 1019.0], [61.3, 1019.0], [61.4, 1020.0], [61.5, 1020.0], [61.6, 1020.0], [61.7, 1021.0], [61.8, 1021.0], [61.9, 1022.0], [62.0, 1022.0], [62.1, 1022.0], [62.2, 1023.0], [62.3, 1023.0], [62.4, 1023.0], [62.5, 1024.0], [62.6, 1024.0], [62.7, 1024.0], [62.8, 1025.0], [62.9, 1025.0], [63.0, 1025.0], [63.1, 1026.0], [63.2, 1026.0], [63.3, 1026.0], [63.4, 1027.0], [63.5, 1027.0], [63.6, 1027.0], [63.7, 1028.0], [63.8, 1028.0], [63.9, 1028.0], [64.0, 1029.0], [64.1, 1029.0], [64.2, 1029.0], [64.3, 1030.0], [64.4, 1030.0], [64.5, 1030.0], [64.6, 1031.0], [64.7, 1031.0], [64.8, 1032.0], [64.9, 1032.0], [65.0, 1032.0], [65.1, 1032.0], [65.2, 1033.0], [65.3, 1033.0], [65.4, 1033.0], [65.5, 1034.0], [65.6, 1034.0], [65.7, 1034.0], [65.8, 1035.0], [65.9, 1035.0], [66.0, 1035.0], [66.1, 1036.0], [66.2, 1036.0], [66.3, 1036.0], [66.4, 1037.0], [66.5, 1037.0], [66.6, 1037.0], [66.7, 1038.0], [66.8, 1038.0], [66.9, 1038.0], [67.0, 1039.0], [67.1, 1039.0], [67.2, 1040.0], [67.3, 1040.0], [67.4, 1040.0], [67.5, 1041.0], [67.6, 1041.0], [67.7, 1041.0], [67.8, 1042.0], [67.9, 1042.0], [68.0, 1043.0], [68.1, 1043.0], [68.2, 1043.0], [68.3, 1043.0], [68.4, 1044.0], [68.5, 1044.0], [68.6, 1045.0], [68.7, 1045.0], [68.8, 1045.0], [68.9, 1046.0], [69.0, 1046.0], [69.1, 1046.0], [69.2, 1047.0], [69.3, 1047.0], [69.4, 1048.0], [69.5, 1048.0], [69.6, 1048.0], [69.7, 1049.0], [69.8, 1049.0], [69.9, 1049.0], [70.0, 1050.0], [70.1, 1050.0], [70.2, 1051.0], [70.3, 1051.0], [70.4, 1051.0], [70.5, 1051.0], [70.6, 1052.0], [70.7, 1052.0], [70.8, 1053.0], [70.9, 1053.0], [71.0, 1053.0], [71.1, 1054.0], [71.2, 1054.0], [71.3, 1055.0], [71.4, 1055.0], [71.5, 1055.0], [71.6, 1056.0], [71.7, 1056.0], [71.8, 1056.0], [71.9, 1057.0], [72.0, 1057.0], [72.1, 1057.0], [72.2, 1058.0], [72.3, 1058.0], [72.4, 1059.0], [72.5, 1059.0], [72.6, 1060.0], [72.7, 1060.0], [72.8, 1060.0], [72.9, 1061.0], [73.0, 1061.0], [73.1, 1062.0], [73.2, 1062.0], [73.3, 1062.0], [73.4, 1063.0], [73.5, 1063.0], [73.6, 1064.0], [73.7, 1064.0], [73.8, 1065.0], [73.9, 1065.0], [74.0, 1065.0], [74.1, 1066.0], [74.2, 1066.0], [74.3, 1067.0], [74.4, 1067.0], [74.5, 1068.0], [74.6, 1068.0], [74.7, 1068.0], [74.8, 1069.0], [74.9, 1069.0], [75.0, 1070.0], [75.1, 1070.0], [75.2, 1070.0], [75.3, 1071.0], [75.4, 1071.0], [75.5, 1072.0], [75.6, 1072.0], [75.7, 1073.0], [75.8, 1073.0], [75.9, 1073.0], [76.0, 1074.0], [76.1, 1074.0], [76.2, 1075.0], [76.3, 1075.0], [76.4, 1076.0], [76.5, 1076.0], [76.6, 1076.0], [76.7, 1077.0], [76.8, 1077.0], [76.9, 1078.0], [77.0, 1078.0], [77.1, 1079.0], [77.2, 1079.0], [77.3, 1080.0], [77.4, 1080.0], [77.5, 1081.0], [77.6, 1081.0], [77.7, 1082.0], [77.8, 1082.0], [77.9, 1082.0], [78.0, 1083.0], [78.1, 1084.0], [78.2, 1084.0], [78.3, 1084.0], [78.4, 1085.0], [78.5, 1085.0], [78.6, 1086.0], [78.7, 1086.0], [78.8, 1087.0], [78.9, 1087.0], [79.0, 1088.0], [79.1, 1088.0], [79.2, 1089.0], [79.3, 1089.0], [79.4, 1089.0], [79.5, 1090.0], [79.6, 1090.0], [79.7, 1091.0], [79.8, 1091.0], [79.9, 1092.0], [80.0, 1092.0], [80.1, 1093.0], [80.2, 1093.0], [80.3, 1094.0], [80.4, 1094.0], [80.5, 1095.0], [80.6, 1096.0], [80.7, 1096.0], [80.8, 1097.0], [80.9, 1097.0], [81.0, 1097.0], [81.1, 1098.0], [81.2, 1099.0], [81.3, 1099.0], [81.4, 1099.0], [81.5, 1100.0], [81.6, 1100.0], [81.7, 1101.0], [81.8, 1101.0], [81.9, 1102.0], [82.0, 1102.0], [82.1, 1103.0], [82.2, 1103.0], [82.3, 1104.0], [82.4, 1104.0], [82.5, 1105.0], [82.6, 1105.0], [82.7, 1106.0], [82.8, 1106.0], [82.9, 1107.0], [83.0, 1107.0], [83.1, 1108.0], [83.2, 1108.0], [83.3, 1109.0], [83.4, 1109.0], [83.5, 1110.0], [83.6, 1111.0], [83.7, 1111.0], [83.8, 1112.0], [83.9, 1112.0], [84.0, 1113.0], [84.1, 1114.0], [84.2, 1114.0], [84.3, 1115.0], [84.4, 1115.0], [84.5, 1116.0], [84.6, 1117.0], [84.7, 1117.0], [84.8, 1118.0], [84.9, 1119.0], [85.0, 1119.0], [85.1, 1120.0], [85.2, 1121.0], [85.3, 1121.0], [85.4, 1122.0], [85.5, 1123.0], [85.6, 1123.0], [85.7, 1124.0], [85.8, 1125.0], [85.9, 1125.0], [86.0, 1126.0], [86.1, 1127.0], [86.2, 1127.0], [86.3, 1128.0], [86.4, 1129.0], [86.5, 1130.0], [86.6, 1130.0], [86.7, 1131.0], [86.8, 1132.0], [86.9, 1133.0], [87.0, 1133.0], [87.1, 1134.0], [87.2, 1135.0], [87.3, 1135.0], [87.4, 1136.0], [87.5, 1137.0], [87.6, 1137.0], [87.7, 1138.0], [87.8, 1139.0], [87.9, 1140.0], [88.0, 1141.0], [88.1, 1141.0], [88.2, 1142.0], [88.3, 1143.0], [88.4, 1144.0], [88.5, 1145.0], [88.6, 1145.0], [88.7, 1146.0], [88.8, 1147.0], [88.9, 1148.0], [89.0, 1148.0], [89.1, 1149.0], [89.2, 1150.0], [89.3, 1150.0], [89.4, 1151.0], [89.5, 1152.0], [89.6, 1153.0], [89.7, 1154.0], [89.8, 1155.0], [89.9, 1156.0], [90.0, 1157.0], [90.1, 1158.0], [90.2, 1159.0], [90.3, 1159.0], [90.4, 1160.0], [90.5, 1161.0], [90.6, 1162.0], [90.7, 1163.0], [90.8, 1164.0], [90.9, 1165.0], [91.0, 1166.0], [91.1, 1167.0], [91.2, 1168.0], [91.3, 1168.0], [91.4, 1169.0], [91.5, 1170.0], [91.6, 1171.0], [91.7, 1172.0], [91.8, 1173.0], [91.9, 1174.0], [92.0, 1175.0], [92.1, 1176.0], [92.2, 1177.0], [92.3, 1178.0], [92.4, 1180.0], [92.5, 1181.0], [92.6, 1182.0], [92.7, 1183.0], [92.8, 1185.0], [92.9, 1186.0], [93.0, 1187.0], [93.1, 1188.0], [93.2, 1189.0], [93.3, 1191.0], [93.4, 1193.0], [93.5, 1194.0], [93.6, 1195.0], [93.7, 1197.0], [93.8, 1199.0], [93.9, 1200.0], [94.0, 1202.0], [94.1, 1203.0], [94.2, 1205.0], [94.3, 1206.0], [94.4, 1208.0], [94.5, 1210.0], [94.6, 1211.0], [94.7, 1213.0], [94.8, 1214.0], [94.9, 1216.0], [95.0, 1218.0], [95.1, 1220.0], [95.2, 1222.0], [95.3, 1224.0], [95.4, 1226.0], [95.5, 1228.0], [95.6, 1230.0], [95.7, 1233.0], [95.8, 1235.0], [95.9, 1237.0], [96.0, 1240.0], [96.1, 1242.0], [96.2, 1245.0], [96.3, 1248.0], [96.4, 1251.0], [96.5, 1253.0], [96.6, 1256.0], [96.7, 1258.0], [96.8, 1262.0], [96.9, 1265.0], [97.0, 1269.0], [97.1, 1272.0], [97.2, 1276.0], [97.3, 1280.0], [97.4, 1284.0], [97.5, 1288.0], [97.6, 1293.0], [97.7, 1298.0], [97.8, 1301.0], [97.9, 1308.0], [98.0, 1315.0], [98.1, 1321.0], [98.2, 1328.0], [98.3, 1335.0], [98.4, 1344.0], [98.5, 1357.0], [98.6, 1371.0], [98.7, 1390.0], [98.8, 1419.0], [98.9, 1450.0], [99.0, 1494.0], [99.1, 1610.0], [99.2, 1706.0], [99.3, 1753.0], [99.4, 1799.0], [99.5, 1847.0], [99.6, 1884.0], [99.7, 1927.0], [99.8, 1971.0], [99.9, 2068.0]], "isOverall": false, "label": "GET All employees", "isController": false}, {"data": [[0.0, 1.0], [0.1, 1.0], [0.2, 2.0], [0.3, 2.0], [0.4, 2.0], [0.5, 2.0], [0.6, 2.0], [0.7, 2.0], [0.8, 2.0], [0.9, 2.0], [1.0, 2.0], [1.1, 2.0], [1.2, 2.0], [1.3, 2.0], [1.4, 2.0], [1.5, 2.0], [1.6, 2.0], [1.7, 2.0], [1.8, 2.0], [1.9, 2.0], [2.0, 2.0], [2.1, 2.0], [2.2, 2.0], [2.3, 2.0], [2.4, 2.0], [2.5, 2.0], [2.6, 2.0], [2.7, 2.0], [2.8, 2.0], [2.9, 2.0], [3.0, 2.0], [3.1, 2.0], [3.2, 2.0], [3.3, 2.0], [3.4, 2.0], [3.5, 2.0], [3.6, 2.0], [3.7, 2.0], [3.8, 2.0], [3.9, 2.0], [4.0, 2.0], [4.1, 2.0], [4.2, 2.0], [4.3, 2.0], [4.4, 2.0], [4.5, 2.0], [4.6, 2.0], [4.7, 2.0], [4.8, 2.0], [4.9, 2.0], [5.0, 2.0], [5.1, 2.0], [5.2, 2.0], [5.3, 2.0], [5.4, 2.0], [5.5, 2.0], [5.6, 2.0], [5.7, 2.0], [5.8, 2.0], [5.9, 2.0], [6.0, 2.0], [6.1, 2.0], [6.2, 2.0], [6.3, 2.0], [6.4, 2.0], [6.5, 2.0], [6.6, 2.0], [6.7, 2.0], [6.8, 2.0], [6.9, 2.0], [7.0, 2.0], [7.1, 2.0], [7.2, 2.0], [7.3, 2.0], [7.4, 2.0], [7.5, 2.0], [7.6, 2.0], [7.7, 2.0], [7.8, 2.0], [7.9, 2.0], [8.0, 2.0], [8.1, 2.0], [8.2, 2.0], [8.3, 2.0], [8.4, 2.0], [8.5, 2.0], [8.6, 2.0], [8.7, 2.0], [8.8, 2.0], [8.9, 2.0], [9.0, 2.0], [9.1, 2.0], [9.2, 2.0], [9.3, 2.0], [9.4, 2.0], [9.5, 2.0], [9.6, 2.0], [9.7, 3.0], [9.8, 3.0], [9.9, 3.0], [10.0, 3.0], [10.1, 3.0], [10.2, 3.0], [10.3, 3.0], [10.4, 3.0], [10.5, 3.0], [10.6, 3.0], [10.7, 3.0], [10.8, 3.0], [10.9, 3.0], [11.0, 3.0], [11.1, 3.0], [11.2, 3.0], [11.3, 3.0], [11.4, 3.0], [11.5, 3.0], [11.6, 3.0], [11.7, 3.0], [11.8, 3.0], [11.9, 3.0], [12.0, 3.0], [12.1, 3.0], [12.2, 3.0], [12.3, 3.0], [12.4, 3.0], [12.5, 3.0], [12.6, 3.0], [12.7, 3.0], [12.8, 3.0], [12.9, 3.0], [13.0, 3.0], [13.1, 3.0], [13.2, 3.0], [13.3, 3.0], [13.4, 3.0], [13.5, 3.0], [13.6, 3.0], [13.7, 3.0], [13.8, 3.0], [13.9, 3.0], [14.0, 3.0], [14.1, 3.0], [14.2, 3.0], [14.3, 3.0], [14.4, 3.0], [14.5, 3.0], [14.6, 3.0], [14.7, 3.0], [14.8, 3.0], [14.9, 3.0], [15.0, 3.0], [15.1, 3.0], [15.2, 3.0], [15.3, 3.0], [15.4, 3.0], [15.5, 3.0], [15.6, 3.0], [15.7, 3.0], [15.8, 3.0], [15.9, 3.0], [16.0, 3.0], [16.1, 3.0], [16.2, 3.0], [16.3, 3.0], [16.4, 3.0], [16.5, 3.0], [16.6, 3.0], [16.7, 3.0], [16.8, 3.0], [16.9, 3.0], [17.0, 3.0], [17.1, 3.0], [17.2, 3.0], [17.3, 3.0], [17.4, 3.0], [17.5, 3.0], [17.6, 3.0], [17.7, 3.0], [17.8, 3.0], [17.9, 3.0], [18.0, 3.0], [18.1, 3.0], [18.2, 3.0], [18.3, 3.0], [18.4, 3.0], [18.5, 3.0], [18.6, 3.0], [18.7, 3.0], [18.8, 3.0], [18.9, 3.0], [19.0, 3.0], [19.1, 3.0], [19.2, 3.0], [19.3, 3.0], [19.4, 3.0], [19.5, 3.0], [19.6, 3.0], [19.7, 3.0], [19.8, 3.0], [19.9, 3.0], [20.0, 3.0], [20.1, 3.0], [20.2, 3.0], [20.3, 3.0], [20.4, 3.0], [20.5, 3.0], [20.6, 3.0], [20.7, 3.0], [20.8, 3.0], [20.9, 3.0], [21.0, 3.0], [21.1, 3.0], [21.2, 3.0], [21.3, 3.0], [21.4, 3.0], [21.5, 3.0], [21.6, 3.0], [21.7, 3.0], [21.8, 3.0], [21.9, 3.0], [22.0, 3.0], [22.1, 3.0], [22.2, 3.0], [22.3, 3.0], [22.4, 3.0], [22.5, 3.0], [22.6, 3.0], [22.7, 3.0], [22.8, 3.0], [22.9, 3.0], [23.0, 3.0], [23.1, 3.0], [23.2, 3.0], [23.3, 3.0], [23.4, 3.0], [23.5, 3.0], [23.6, 3.0], [23.7, 3.0], [23.8, 3.0], [23.9, 3.0], [24.0, 3.0], [24.1, 3.0], [24.2, 3.0], [24.3, 3.0], [24.4, 3.0], [24.5, 3.0], [24.6, 3.0], [24.7, 3.0], [24.8, 3.0], [24.9, 3.0], [25.0, 3.0], [25.1, 3.0], [25.2, 3.0], [25.3, 3.0], [25.4, 3.0], [25.5, 3.0], [25.6, 3.0], [25.7, 3.0], [25.8, 3.0], [25.9, 3.0], [26.0, 3.0], [26.1, 3.0], [26.2, 3.0], [26.3, 3.0], [26.4, 3.0], [26.5, 3.0], [26.6, 3.0], [26.7, 3.0], [26.8, 3.0], [26.9, 3.0], [27.0, 3.0], [27.1, 3.0], [27.2, 3.0], [27.3, 3.0], [27.4, 3.0], [27.5, 3.0], [27.6, 3.0], [27.7, 3.0], [27.8, 3.0], [27.9, 3.0], [28.0, 3.0], [28.1, 3.0], [28.2, 3.0], [28.3, 3.0], [28.4, 3.0], [28.5, 3.0], [28.6, 3.0], [28.7, 3.0], [28.8, 3.0], [28.9, 3.0], [29.0, 3.0], [29.1, 3.0], [29.2, 3.0], [29.3, 3.0], [29.4, 3.0], [29.5, 3.0], [29.6, 3.0], [29.7, 3.0], [29.8, 3.0], [29.9, 4.0], [30.0, 4.0], [30.1, 4.0], [30.2, 4.0], [30.3, 4.0], [30.4, 4.0], [30.5, 4.0], [30.6, 4.0], [30.7, 4.0], [30.8, 4.0], [30.9, 4.0], [31.0, 4.0], [31.1, 4.0], [31.2, 4.0], [31.3, 4.0], [31.4, 4.0], [31.5, 4.0], [31.6, 4.0], [31.7, 4.0], [31.8, 4.0], [31.9, 4.0], [32.0, 4.0], [32.1, 4.0], [32.2, 4.0], [32.3, 4.0], [32.4, 4.0], [32.5, 4.0], [32.6, 4.0], [32.7, 4.0], [32.8, 4.0], [32.9, 4.0], [33.0, 4.0], [33.1, 4.0], [33.2, 4.0], [33.3, 4.0], [33.4, 4.0], [33.5, 4.0], [33.6, 4.0], [33.7, 4.0], [33.8, 4.0], [33.9, 4.0], [34.0, 4.0], [34.1, 4.0], [34.2, 4.0], [34.3, 4.0], [34.4, 4.0], [34.5, 4.0], [34.6, 4.0], [34.7, 4.0], [34.8, 4.0], [34.9, 4.0], [35.0, 4.0], [35.1, 4.0], [35.2, 4.0], [35.3, 4.0], [35.4, 4.0], [35.5, 4.0], [35.6, 4.0], [35.7, 4.0], [35.8, 4.0], [35.9, 4.0], [36.0, 4.0], [36.1, 4.0], [36.2, 4.0], [36.3, 4.0], [36.4, 4.0], [36.5, 4.0], [36.6, 4.0], [36.7, 4.0], [36.8, 4.0], [36.9, 4.0], [37.0, 4.0], [37.1, 4.0], [37.2, 4.0], [37.3, 4.0], [37.4, 4.0], [37.5, 4.0], [37.6, 4.0], [37.7, 4.0], [37.8, 4.0], [37.9, 4.0], [38.0, 4.0], [38.1, 4.0], [38.2, 4.0], [38.3, 4.0], [38.4, 4.0], [38.5, 4.0], [38.6, 4.0], [38.7, 4.0], [38.8, 4.0], [38.9, 4.0], [39.0, 4.0], [39.1, 4.0], [39.2, 4.0], [39.3, 4.0], [39.4, 4.0], [39.5, 4.0], [39.6, 4.0], [39.7, 4.0], [39.8, 4.0], [39.9, 4.0], [40.0, 4.0], [40.1, 4.0], [40.2, 4.0], [40.3, 4.0], [40.4, 4.0], [40.5, 4.0], [40.6, 4.0], [40.7, 4.0], [40.8, 4.0], [40.9, 4.0], [41.0, 4.0], [41.1, 4.0], [41.2, 4.0], [41.3, 4.0], [41.4, 4.0], [41.5, 4.0], [41.6, 4.0], [41.7, 4.0], [41.8, 4.0], [41.9, 4.0], [42.0, 4.0], [42.1, 4.0], [42.2, 4.0], [42.3, 4.0], [42.4, 4.0], [42.5, 4.0], [42.6, 4.0], [42.7, 4.0], [42.8, 4.0], [42.9, 4.0], [43.0, 4.0], [43.1, 4.0], [43.2, 4.0], [43.3, 4.0], [43.4, 4.0], [43.5, 4.0], [43.6, 4.0], [43.7, 4.0], [43.8, 4.0], [43.9, 4.0], [44.0, 4.0], [44.1, 4.0], [44.2, 4.0], [44.3, 4.0], [44.4, 4.0], [44.5, 4.0], [44.6, 4.0], [44.7, 4.0], [44.8, 4.0], [44.9, 4.0], [45.0, 5.0], [45.1, 5.0], [45.2, 5.0], [45.3, 5.0], [45.4, 5.0], [45.5, 5.0], [45.6, 5.0], [45.7, 5.0], [45.8, 5.0], [45.9, 5.0], [46.0, 5.0], [46.1, 5.0], [46.2, 5.0], [46.3, 5.0], [46.4, 5.0], [46.5, 5.0], [46.6, 5.0], [46.7, 5.0], [46.8, 5.0], [46.9, 5.0], [47.0, 5.0], [47.1, 5.0], [47.2, 5.0], [47.3, 5.0], [47.4, 5.0], [47.5, 5.0], [47.6, 5.0], [47.7, 5.0], [47.8, 5.0], [47.9, 5.0], [48.0, 5.0], [48.1, 5.0], [48.2, 5.0], [48.3, 5.0], [48.4, 5.0], [48.5, 5.0], [48.6, 5.0], [48.7, 5.0], [48.8, 5.0], [48.9, 5.0], [49.0, 5.0], [49.1, 5.0], [49.2, 5.0], [49.3, 5.0], [49.4, 5.0], [49.5, 5.0], [49.6, 5.0], [49.7, 5.0], [49.8, 5.0], [49.9, 5.0], [50.0, 5.0], [50.1, 5.0], [50.2, 5.0], [50.3, 5.0], [50.4, 5.0], [50.5, 5.0], [50.6, 5.0], [50.7, 5.0], [50.8, 5.0], [50.9, 5.0], [51.0, 5.0], [51.1, 5.0], [51.2, 5.0], [51.3, 5.0], [51.4, 5.0], [51.5, 5.0], [51.6, 5.0], [51.7, 5.0], [51.8, 5.0], [51.9, 5.0], [52.0, 5.0], [52.1, 5.0], [52.2, 5.0], [52.3, 5.0], [52.4, 5.0], [52.5, 5.0], [52.6, 5.0], [52.7, 5.0], [52.8, 5.0], [52.9, 5.0], [53.0, 5.0], [53.1, 5.0], [53.2, 5.0], [53.3, 5.0], [53.4, 5.0], [53.5, 5.0], [53.6, 5.0], [53.7, 5.0], [53.8, 5.0], [53.9, 5.0], [54.0, 5.0], [54.1, 5.0], [54.2, 5.0], [54.3, 5.0], [54.4, 5.0], [54.5, 5.0], [54.6, 5.0], [54.7, 5.0], [54.8, 5.0], [54.9, 5.0], [55.0, 5.0], [55.1, 5.0], [55.2, 5.0], [55.3, 5.0], [55.4, 5.0], [55.5, 5.0], [55.6, 5.0], [55.7, 5.0], [55.8, 5.0], [55.9, 5.0], [56.0, 5.0], [56.1, 5.0], [56.2, 5.0], [56.3, 5.0], [56.4, 5.0], [56.5, 5.0], [56.6, 6.0], [56.7, 6.0], [56.8, 6.0], [56.9, 6.0], [57.0, 6.0], [57.1, 6.0], [57.2, 6.0], [57.3, 6.0], [57.4, 6.0], [57.5, 6.0], [57.6, 6.0], [57.7, 6.0], [57.8, 6.0], [57.9, 6.0], [58.0, 6.0], [58.1, 6.0], [58.2, 6.0], [58.3, 6.0], [58.4, 6.0], [58.5, 6.0], [58.6, 6.0], [58.7, 6.0], [58.8, 6.0], [58.9, 6.0], [59.0, 6.0], [59.1, 6.0], [59.2, 6.0], [59.3, 6.0], [59.4, 6.0], [59.5, 6.0], [59.6, 6.0], [59.7, 6.0], [59.8, 6.0], [59.9, 6.0], [60.0, 6.0], [60.1, 6.0], [60.2, 6.0], [60.3, 6.0], [60.4, 6.0], [60.5, 6.0], [60.6, 6.0], [60.7, 6.0], [60.8, 6.0], [60.9, 6.0], [61.0, 6.0], [61.1, 6.0], [61.2, 6.0], [61.3, 6.0], [61.4, 6.0], [61.5, 6.0], [61.6, 6.0], [61.7, 6.0], [61.8, 6.0], [61.9, 6.0], [62.0, 6.0], [62.1, 6.0], [62.2, 6.0], [62.3, 6.0], [62.4, 6.0], [62.5, 6.0], [62.6, 6.0], [62.7, 6.0], [62.8, 6.0], [62.9, 6.0], [63.0, 6.0], [63.1, 6.0], [63.2, 6.0], [63.3, 6.0], [63.4, 6.0], [63.5, 6.0], [63.6, 6.0], [63.7, 6.0], [63.8, 6.0], [63.9, 6.0], [64.0, 6.0], [64.1, 6.0], [64.2, 6.0], [64.3, 6.0], [64.4, 6.0], [64.5, 6.0], [64.6, 6.0], [64.7, 6.0], [64.8, 6.0], [64.9, 6.0], [65.0, 6.0], [65.1, 6.0], [65.2, 6.0], [65.3, 6.0], [65.4, 6.0], [65.5, 6.0], [65.6, 6.0], [65.7, 6.0], [65.8, 6.0], [65.9, 6.0], [66.0, 7.0], [66.1, 7.0], [66.2, 7.0], [66.3, 7.0], [66.4, 7.0], [66.5, 7.0], [66.6, 7.0], [66.7, 7.0], [66.8, 7.0], [66.9, 7.0], [67.0, 7.0], [67.1, 7.0], [67.2, 7.0], [67.3, 7.0], [67.4, 7.0], [67.5, 7.0], [67.6, 7.0], [67.7, 7.0], [67.8, 7.0], [67.9, 7.0], [68.0, 7.0], [68.1, 7.0], [68.2, 7.0], [68.3, 7.0], [68.4, 7.0], [68.5, 7.0], [68.6, 7.0], [68.7, 7.0], [68.8, 7.0], [68.9, 7.0], [69.0, 7.0], [69.1, 7.0], [69.2, 7.0], [69.3, 7.0], [69.4, 7.0], [69.5, 7.0], [69.6, 7.0], [69.7, 7.0], [69.8, 7.0], [69.9, 7.0], [70.0, 7.0], [70.1, 7.0], [70.2, 7.0], [70.3, 7.0], [70.4, 7.0], [70.5, 7.0], [70.6, 7.0], [70.7, 7.0], [70.8, 7.0], [70.9, 7.0], [71.0, 7.0], [71.1, 7.0], [71.2, 7.0], [71.3, 7.0], [71.4, 7.0], [71.5, 7.0], [71.6, 7.0], [71.7, 7.0], [71.8, 7.0], [71.9, 7.0], [72.0, 7.0], [72.1, 7.0], [72.2, 7.0], [72.3, 7.0], [72.4, 7.0], [72.5, 7.0], [72.6, 7.0], [72.7, 7.0], [72.8, 7.0], [72.9, 7.0], [73.0, 7.0], [73.1, 7.0], [73.2, 7.0], [73.3, 7.0], [73.4, 7.0], [73.5, 7.0], [73.6, 7.0], [73.7, 8.0], [73.8, 8.0], [73.9, 8.0], [74.0, 8.0], [74.1, 8.0], [74.2, 8.0], [74.3, 8.0], [74.4, 8.0], [74.5, 8.0], [74.6, 8.0], [74.7, 8.0], [74.8, 8.0], [74.9, 8.0], [75.0, 8.0], [75.1, 8.0], [75.2, 8.0], [75.3, 8.0], [75.4, 8.0], [75.5, 8.0], [75.6, 8.0], [75.7, 8.0], [75.8, 8.0], [75.9, 8.0], [76.0, 8.0], [76.1, 8.0], [76.2, 8.0], [76.3, 8.0], [76.4, 8.0], [76.5, 8.0], [76.6, 8.0], [76.7, 8.0], [76.8, 8.0], [76.9, 8.0], [77.0, 8.0], [77.1, 8.0], [77.2, 8.0], [77.3, 8.0], [77.4, 8.0], [77.5, 8.0], [77.6, 8.0], [77.7, 8.0], [77.8, 8.0], [77.9, 8.0], [78.0, 8.0], [78.1, 8.0], [78.2, 8.0], [78.3, 8.0], [78.4, 8.0], [78.5, 8.0], [78.6, 8.0], [78.7, 8.0], [78.8, 8.0], [78.9, 8.0], [79.0, 8.0], [79.1, 8.0], [79.2, 8.0], [79.3, 8.0], [79.4, 8.0], [79.5, 9.0], [79.6, 9.0], [79.7, 9.0], [79.8, 9.0], [79.9, 9.0], [80.0, 9.0], [80.1, 9.0], [80.2, 9.0], [80.3, 9.0], [80.4, 9.0], [80.5, 9.0], [80.6, 9.0], [80.7, 9.0], [80.8, 9.0], [80.9, 9.0], [81.0, 9.0], [81.1, 9.0], [81.2, 9.0], [81.3, 9.0], [81.4, 9.0], [81.5, 9.0], [81.6, 9.0], [81.7, 9.0], [81.8, 9.0], [81.9, 9.0], [82.0, 9.0], [82.1, 9.0], [82.2, 9.0], [82.3, 9.0], [82.4, 9.0], [82.5, 9.0], [82.6, 9.0], [82.7, 9.0], [82.8, 9.0], [82.9, 9.0], [83.0, 9.0], [83.1, 9.0], [83.2, 9.0], [83.3, 9.0], [83.4, 9.0], [83.5, 9.0], [83.6, 9.0], [83.7, 9.0], [83.8, 9.0], [83.9, 9.0], [84.0, 9.0], [84.1, 9.0], [84.2, 9.0], [84.3, 10.0], [84.4, 10.0], [84.5, 10.0], [84.6, 10.0], [84.7, 10.0], [84.8, 10.0], [84.9, 10.0], [85.0, 10.0], [85.1, 10.0], [85.2, 10.0], [85.3, 10.0], [85.4, 10.0], [85.5, 10.0], [85.6, 10.0], [85.7, 10.0], [85.8, 10.0], [85.9, 10.0], [86.0, 10.0], [86.1, 10.0], [86.2, 10.0], [86.3, 10.0], [86.4, 10.0], [86.5, 10.0], [86.6, 10.0], [86.7, 10.0], [86.8, 10.0], [86.9, 10.0], [87.0, 10.0], [87.1, 10.0], [87.2, 10.0], [87.3, 10.0], [87.4, 10.0], [87.5, 10.0], [87.6, 10.0], [87.7, 11.0], [87.8, 11.0], [87.9, 11.0], [88.0, 11.0], [88.1, 11.0], [88.2, 11.0], [88.3, 11.0], [88.4, 11.0], [88.5, 11.0], [88.6, 11.0], [88.7, 11.0], [88.8, 11.0], [88.9, 11.0], [89.0, 11.0], [89.1, 11.0], [89.2, 11.0], [89.3, 11.0], [89.4, 11.0], [89.5, 11.0], [89.6, 11.0], [89.7, 11.0], [89.8, 11.0], [89.9, 12.0], [90.0, 12.0], [90.1, 12.0], [90.2, 12.0], [90.3, 12.0], [90.4, 12.0], [90.5, 12.0], [90.6, 12.0], [90.7, 12.0], [90.8, 12.0], [90.9, 12.0], [91.0, 12.0], [91.1, 12.0], [91.2, 12.0], [91.3, 12.0], [91.4, 12.0], [91.5, 12.0], [91.6, 13.0], [91.7, 13.0], [91.8, 13.0], [91.9, 13.0], [92.0, 13.0], [92.1, 13.0], [92.2, 13.0], [92.3, 13.0], [92.4, 13.0], [92.5, 13.0], [92.6, 13.0], [92.7, 13.0], [92.8, 14.0], [92.9, 14.0], [93.0, 14.0], [93.1, 14.0], [93.2, 14.0], [93.3, 14.0], [93.4, 14.0], [93.5, 15.0], [93.6, 15.0], [93.7, 15.0], [93.8, 15.0], [93.9, 15.0], [94.0, 15.0], [94.1, 15.0], [94.2, 16.0], [94.3, 16.0], [94.4, 16.0], [94.5, 16.0], [94.6, 16.0], [94.7, 16.0], [94.8, 17.0], [94.9, 17.0], [95.0, 17.0], [95.1, 18.0], [95.2, 18.0], [95.3, 18.0], [95.4, 19.0], [95.5, 19.0], [95.6, 19.0], [95.7, 20.0], [95.8, 20.0], [95.9, 21.0], [96.0, 21.0], [96.1, 22.0], [96.2, 23.0], [96.3, 23.0], [96.4, 24.0], [96.5, 25.0], [96.6, 26.0], [96.7, 27.0], [96.8, 29.0], [96.9, 30.0], [97.0, 31.0], [97.1, 32.0], [97.2, 34.0], [97.3, 35.0], [97.4, 36.0], [97.5, 38.0], [97.6, 40.0], [97.7, 42.0], [97.8, 45.0], [97.9, 47.0], [98.0, 49.0], [98.1, 51.0], [98.2, 54.0], [98.3, 55.0], [98.4, 57.0], [98.5, 60.0], [98.6, 63.0], [98.7, 67.0], [98.8, 73.0], [98.9, 79.0], [99.0, 85.0], [99.1, 91.0], [99.2, 97.0], [99.3, 103.0], [99.4, 109.0], [99.5, 119.0], [99.6, 131.0], [99.7, 148.0], [99.8, 194.0], [99.9, 318.0]], "isOverall": false, "label": "GET thread name", "isController": false}, {"data": [[0.0, 3.0], [0.1, 5.0], [0.2, 5.0], [0.3, 5.0], [0.4, 6.0], [0.5, 6.0], [0.6, 7.0], [0.7, 7.0], [0.8, 8.0], [0.9, 8.0], [1.0, 8.0], [1.1, 9.0], [1.2, 9.0], [1.3, 10.0], [1.4, 10.0], [1.5, 11.0], [1.6, 12.0], [1.7, 13.0], [1.8, 14.0], [1.9, 16.0], [2.0, 17.0], [2.1, 19.0], [2.2, 21.0], [2.3, 25.0], [2.4, 27.0], [2.5, 31.0], [2.6, 36.0], [2.7, 40.0], [2.8, 44.0], [2.9, 49.0], [3.0, 52.0], [3.1, 56.0], [3.2, 60.0], [3.3, 65.0], [3.4, 75.0], [3.5, 87.0], [3.6, 94.0], [3.7, 100.0], [3.8, 109.0], [3.9, 118.0], [4.0, 132.0], [4.1, 142.0], [4.2, 149.0], [4.3, 154.0], [4.4, 165.0], [4.5, 176.0], [4.6, 188.0], [4.7, 205.0], [4.8, 216.0], [4.9, 223.0], [5.0, 233.0], [5.1, 244.0], [5.2, 250.0], [5.3, 255.0], [5.4, 263.0], [5.5, 270.0], [5.6, 276.0], [5.7, 281.0], [5.8, 286.0], [5.9, 292.0], [6.0, 298.0], [6.1, 302.0], [6.2, 307.0], [6.3, 312.0], [6.4, 316.0], [6.5, 322.0], [6.6, 326.0], [6.7, 330.0], [6.8, 333.0], [6.9, 337.0], [7.0, 341.0], [7.1, 345.0], [7.2, 350.0], [7.3, 354.0], [7.4, 359.0], [7.5, 363.0], [7.6, 369.0], [7.7, 374.0], [7.8, 378.0], [7.9, 382.0], [8.0, 387.0], [8.1, 395.0], [8.2, 404.0], [8.3, 413.0], [8.4, 424.0], [8.5, 431.0], [8.6, 437.0], [8.7, 442.0], [8.8, 447.0], [8.9, 453.0], [9.0, 462.0], [9.1, 469.0], [9.2, 476.0], [9.3, 482.0], [9.4, 494.0], [9.5, 503.0], [9.6, 512.0], [9.7, 518.0], [9.8, 523.0], [9.9, 530.0], [10.0, 534.0], [10.1, 538.0], [10.2, 542.0], [10.3, 547.0], [10.4, 552.0], [10.5, 556.0], [10.6, 561.0], [10.7, 568.0], [10.8, 571.0], [10.9, 576.0], [11.0, 582.0], [11.1, 588.0], [11.2, 594.0], [11.3, 599.0], [11.4, 603.0], [11.5, 606.0], [11.6, 610.0], [11.7, 614.0], [11.8, 617.0], [11.9, 620.0], [12.0, 623.0], [12.1, 625.0], [12.2, 629.0], [12.3, 631.0], [12.4, 635.0], [12.5, 638.0], [12.6, 640.0], [12.7, 643.0], [12.8, 645.0], [12.9, 647.0], [13.0, 649.0], [13.1, 651.0], [13.2, 653.0], [13.3, 655.0], [13.4, 657.0], [13.5, 659.0], [13.6, 661.0], [13.7, 663.0], [13.8, 665.0], [13.9, 667.0], [14.0, 669.0], [14.1, 671.0], [14.2, 673.0], [14.3, 674.0], [14.4, 676.0], [14.5, 677.0], [14.6, 679.0], [14.7, 680.0], [14.8, 682.0], [14.9, 684.0], [15.0, 685.0], [15.1, 686.0], [15.2, 687.0], [15.3, 688.0], [15.4, 689.0], [15.5, 691.0], [15.6, 692.0], [15.7, 693.0], [15.8, 694.0], [15.9, 695.0], [16.0, 696.0], [16.1, 698.0], [16.2, 699.0], [16.3, 700.0], [16.4, 701.0], [16.5, 702.0], [16.6, 704.0], [16.7, 705.0], [16.8, 706.0], [16.9, 707.0], [17.0, 708.0], [17.1, 709.0], [17.2, 710.0], [17.3, 711.0], [17.4, 712.0], [17.5, 713.0], [17.6, 715.0], [17.7, 715.0], [17.8, 716.0], [17.9, 717.0], [18.0, 718.0], [18.1, 719.0], [18.2, 720.0], [18.3, 721.0], [18.4, 722.0], [18.5, 723.0], [18.6, 724.0], [18.7, 725.0], [18.8, 726.0], [18.9, 727.0], [19.0, 727.0], [19.1, 729.0], [19.2, 729.0], [19.3, 730.0], [19.4, 731.0], [19.5, 732.0], [19.6, 733.0], [19.7, 734.0], [19.8, 735.0], [19.9, 735.0], [20.0, 736.0], [20.1, 737.0], [20.2, 737.0], [20.3, 738.0], [20.4, 738.0], [20.5, 739.0], [20.6, 740.0], [20.7, 741.0], [20.8, 741.0], [20.9, 742.0], [21.0, 742.0], [21.1, 743.0], [21.2, 744.0], [21.3, 744.0], [21.4, 745.0], [21.5, 746.0], [21.6, 747.0], [21.7, 747.0], [21.8, 748.0], [21.9, 748.0], [22.0, 749.0], [22.1, 749.0], [22.2, 750.0], [22.3, 750.0], [22.4, 751.0], [22.5, 752.0], [22.6, 752.0], [22.7, 753.0], [22.8, 753.0], [22.9, 754.0], [23.0, 754.0], [23.1, 755.0], [23.2, 755.0], [23.3, 756.0], [23.4, 756.0], [23.5, 757.0], [23.6, 757.0], [23.7, 758.0], [23.8, 758.0], [23.9, 759.0], [24.0, 759.0], [24.1, 759.0], [24.2, 760.0], [24.3, 761.0], [24.4, 761.0], [24.5, 762.0], [24.6, 763.0], [24.7, 763.0], [24.8, 763.0], [24.9, 764.0], [25.0, 765.0], [25.1, 765.0], [25.2, 765.0], [25.3, 766.0], [25.4, 766.0], [25.5, 767.0], [25.6, 767.0], [25.7, 768.0], [25.8, 768.0], [25.9, 769.0], [26.0, 769.0], [26.1, 770.0], [26.2, 770.0], [26.3, 771.0], [26.4, 771.0], [26.5, 772.0], [26.6, 772.0], [26.7, 773.0], [26.8, 773.0], [26.9, 773.0], [27.0, 774.0], [27.1, 774.0], [27.2, 775.0], [27.3, 775.0], [27.4, 776.0], [27.5, 776.0], [27.6, 776.0], [27.7, 777.0], [27.8, 777.0], [27.9, 777.0], [28.0, 778.0], [28.1, 778.0], [28.2, 779.0], [28.3, 779.0], [28.4, 780.0], [28.5, 780.0], [28.6, 780.0], [28.7, 781.0], [28.8, 781.0], [28.9, 781.0], [29.0, 782.0], [29.1, 782.0], [29.2, 783.0], [29.3, 783.0], [29.4, 783.0], [29.5, 784.0], [29.6, 784.0], [29.7, 785.0], [29.8, 785.0], [29.9, 785.0], [30.0, 786.0], [30.1, 786.0], [30.2, 786.0], [30.3, 787.0], [30.4, 787.0], [30.5, 787.0], [30.6, 788.0], [30.7, 788.0], [30.8, 789.0], [30.9, 789.0], [31.0, 789.0], [31.1, 790.0], [31.2, 790.0], [31.3, 790.0], [31.4, 791.0], [31.5, 791.0], [31.6, 791.0], [31.7, 792.0], [31.8, 792.0], [31.9, 792.0], [32.0, 793.0], [32.1, 793.0], [32.2, 793.0], [32.3, 794.0], [32.4, 794.0], [32.5, 795.0], [32.6, 795.0], [32.7, 795.0], [32.8, 796.0], [32.9, 796.0], [33.0, 796.0], [33.1, 797.0], [33.2, 797.0], [33.3, 798.0], [33.4, 798.0], [33.5, 798.0], [33.6, 799.0], [33.7, 799.0], [33.8, 799.0], [33.9, 800.0], [34.0, 800.0], [34.1, 800.0], [34.2, 801.0], [34.3, 801.0], [34.4, 801.0], [34.5, 802.0], [34.6, 802.0], [34.7, 803.0], [34.8, 803.0], [34.9, 803.0], [35.0, 804.0], [35.1, 804.0], [35.2, 804.0], [35.3, 805.0], [35.4, 805.0], [35.5, 805.0], [35.6, 806.0], [35.7, 806.0], [35.8, 806.0], [35.9, 807.0], [36.0, 807.0], [36.1, 807.0], [36.2, 808.0], [36.3, 808.0], [36.4, 809.0], [36.5, 809.0], [36.6, 809.0], [36.7, 810.0], [36.8, 810.0], [36.9, 810.0], [37.0, 811.0], [37.1, 811.0], [37.2, 811.0], [37.3, 811.0], [37.4, 812.0], [37.5, 812.0], [37.6, 813.0], [37.7, 813.0], [37.8, 813.0], [37.9, 813.0], [38.0, 814.0], [38.1, 814.0], [38.2, 814.0], [38.3, 815.0], [38.4, 815.0], [38.5, 815.0], [38.6, 816.0], [38.7, 816.0], [38.8, 816.0], [38.9, 817.0], [39.0, 817.0], [39.1, 818.0], [39.2, 818.0], [39.3, 818.0], [39.4, 818.0], [39.5, 819.0], [39.6, 819.0], [39.7, 819.0], [39.8, 820.0], [39.9, 820.0], [40.0, 820.0], [40.1, 820.0], [40.2, 821.0], [40.3, 821.0], [40.4, 821.0], [40.5, 822.0], [40.6, 822.0], [40.7, 822.0], [40.8, 822.0], [40.9, 823.0], [41.0, 823.0], [41.1, 823.0], [41.2, 824.0], [41.3, 824.0], [41.4, 824.0], [41.5, 825.0], [41.6, 825.0], [41.7, 825.0], [41.8, 826.0], [41.9, 826.0], [42.0, 826.0], [42.1, 827.0], [42.2, 827.0], [42.3, 827.0], [42.4, 827.0], [42.5, 828.0], [42.6, 828.0], [42.7, 829.0], [42.8, 829.0], [42.9, 829.0], [43.0, 829.0], [43.1, 830.0], [43.2, 830.0], [43.3, 830.0], [43.4, 831.0], [43.5, 831.0], [43.6, 831.0], [43.7, 832.0], [43.8, 832.0], [43.9, 832.0], [44.0, 833.0], [44.1, 833.0], [44.2, 833.0], [44.3, 834.0], [44.4, 834.0], [44.5, 834.0], [44.6, 835.0], [44.7, 835.0], [44.8, 835.0], [44.9, 836.0], [45.0, 836.0], [45.1, 836.0], [45.2, 837.0], [45.3, 837.0], [45.4, 837.0], [45.5, 838.0], [45.6, 838.0], [45.7, 839.0], [45.8, 839.0], [45.9, 839.0], [46.0, 839.0], [46.1, 840.0], [46.2, 840.0], [46.3, 840.0], [46.4, 841.0], [46.5, 841.0], [46.6, 841.0], [46.7, 842.0], [46.8, 842.0], [46.9, 842.0], [47.0, 843.0], [47.1, 843.0], [47.2, 843.0], [47.3, 844.0], [47.4, 844.0], [47.5, 844.0], [47.6, 845.0], [47.7, 845.0], [47.8, 845.0], [47.9, 845.0], [48.0, 846.0], [48.1, 846.0], [48.2, 846.0], [48.3, 847.0], [48.4, 847.0], [48.5, 847.0], [48.6, 847.0], [48.7, 848.0], [48.8, 848.0], [48.9, 848.0], [49.0, 849.0], [49.1, 849.0], [49.2, 849.0], [49.3, 850.0], [49.4, 850.0], [49.5, 850.0], [49.6, 851.0], [49.7, 851.0], [49.8, 851.0], [49.9, 851.0], [50.0, 852.0], [50.1, 852.0], [50.2, 852.0], [50.3, 853.0], [50.4, 853.0], [50.5, 853.0], [50.6, 854.0], [50.7, 854.0], [50.8, 854.0], [50.9, 854.0], [51.0, 855.0], [51.1, 855.0], [51.2, 855.0], [51.3, 855.0], [51.4, 856.0], [51.5, 856.0], [51.6, 856.0], [51.7, 857.0], [51.8, 857.0], [51.9, 858.0], [52.0, 858.0], [52.1, 858.0], [52.2, 858.0], [52.3, 859.0], [52.4, 859.0], [52.5, 859.0], [52.6, 860.0], [52.7, 860.0], [52.8, 860.0], [52.9, 861.0], [53.0, 861.0], [53.1, 861.0], [53.2, 861.0], [53.3, 862.0], [53.4, 862.0], [53.5, 862.0], [53.6, 863.0], [53.7, 863.0], [53.8, 863.0], [53.9, 864.0], [54.0, 864.0], [54.1, 864.0], [54.2, 865.0], [54.3, 865.0], [54.4, 865.0], [54.5, 865.0], [54.6, 866.0], [54.7, 866.0], [54.8, 866.0], [54.9, 867.0], [55.0, 867.0], [55.1, 867.0], [55.2, 867.0], [55.3, 868.0], [55.4, 868.0], [55.5, 868.0], [55.6, 869.0], [55.7, 869.0], [55.8, 869.0], [55.9, 869.0], [56.0, 870.0], [56.1, 870.0], [56.2, 871.0], [56.3, 871.0], [56.4, 871.0], [56.5, 872.0], [56.6, 872.0], [56.7, 872.0], [56.8, 873.0], [56.9, 873.0], [57.0, 873.0], [57.1, 874.0], [57.2, 874.0], [57.3, 874.0], [57.4, 875.0], [57.5, 875.0], [57.6, 875.0], [57.7, 875.0], [57.8, 876.0], [57.9, 876.0], [58.0, 876.0], [58.1, 877.0], [58.2, 877.0], [58.3, 877.0], [58.4, 878.0], [58.5, 878.0], [58.6, 878.0], [58.7, 879.0], [58.8, 879.0], [58.9, 879.0], [59.0, 879.0], [59.1, 880.0], [59.2, 880.0], [59.3, 880.0], [59.4, 881.0], [59.5, 881.0], [59.6, 881.0], [59.7, 882.0], [59.8, 882.0], [59.9, 882.0], [60.0, 883.0], [60.1, 883.0], [60.2, 883.0], [60.3, 884.0], [60.4, 884.0], [60.5, 884.0], [60.6, 885.0], [60.7, 885.0], [60.8, 885.0], [60.9, 885.0], [61.0, 886.0], [61.1, 886.0], [61.2, 886.0], [61.3, 887.0], [61.4, 887.0], [61.5, 887.0], [61.6, 888.0], [61.7, 888.0], [61.8, 888.0], [61.9, 888.0], [62.0, 889.0], [62.1, 889.0], [62.2, 889.0], [62.3, 890.0], [62.4, 890.0], [62.5, 890.0], [62.6, 891.0], [62.7, 891.0], [62.8, 891.0], [62.9, 892.0], [63.0, 892.0], [63.1, 892.0], [63.2, 893.0], [63.3, 893.0], [63.4, 893.0], [63.5, 894.0], [63.6, 894.0], [63.7, 894.0], [63.8, 895.0], [63.9, 895.0], [64.0, 895.0], [64.1, 896.0], [64.2, 896.0], [64.3, 897.0], [64.4, 897.0], [64.5, 897.0], [64.6, 898.0], [64.7, 898.0], [64.8, 898.0], [64.9, 899.0], [65.0, 899.0], [65.1, 899.0], [65.2, 900.0], [65.3, 900.0], [65.4, 900.0], [65.5, 901.0], [65.6, 901.0], [65.7, 902.0], [65.8, 902.0], [65.9, 902.0], [66.0, 903.0], [66.1, 903.0], [66.2, 903.0], [66.3, 904.0], [66.4, 904.0], [66.5, 904.0], [66.6, 905.0], [66.7, 905.0], [66.8, 905.0], [66.9, 906.0], [67.0, 906.0], [67.1, 906.0], [67.2, 907.0], [67.3, 907.0], [67.4, 907.0], [67.5, 908.0], [67.6, 908.0], [67.7, 908.0], [67.8, 909.0], [67.9, 909.0], [68.0, 909.0], [68.1, 910.0], [68.2, 910.0], [68.3, 910.0], [68.4, 911.0], [68.5, 911.0], [68.6, 911.0], [68.7, 912.0], [68.8, 912.0], [68.9, 913.0], [69.0, 913.0], [69.1, 913.0], [69.2, 914.0], [69.3, 914.0], [69.4, 914.0], [69.5, 915.0], [69.6, 915.0], [69.7, 915.0], [69.8, 916.0], [69.9, 916.0], [70.0, 916.0], [70.1, 917.0], [70.2, 917.0], [70.3, 917.0], [70.4, 918.0], [70.5, 918.0], [70.6, 918.0], [70.7, 919.0], [70.8, 919.0], [70.9, 919.0], [71.0, 920.0], [71.1, 920.0], [71.2, 921.0], [71.3, 921.0], [71.4, 921.0], [71.5, 922.0], [71.6, 922.0], [71.7, 922.0], [71.8, 922.0], [71.9, 923.0], [72.0, 923.0], [72.1, 923.0], [72.2, 924.0], [72.3, 924.0], [72.4, 925.0], [72.5, 925.0], [72.6, 925.0], [72.7, 925.0], [72.8, 926.0], [72.9, 926.0], [73.0, 927.0], [73.1, 927.0], [73.2, 927.0], [73.3, 928.0], [73.4, 928.0], [73.5, 929.0], [73.6, 929.0], [73.7, 929.0], [73.8, 930.0], [73.9, 930.0], [74.0, 930.0], [74.1, 931.0], [74.2, 931.0], [74.3, 932.0], [74.4, 932.0], [74.5, 932.0], [74.6, 933.0], [74.7, 933.0], [74.8, 934.0], [74.9, 934.0], [75.0, 934.0], [75.1, 935.0], [75.2, 935.0], [75.3, 936.0], [75.4, 936.0], [75.5, 936.0], [75.6, 937.0], [75.7, 937.0], [75.8, 938.0], [75.9, 938.0], [76.0, 938.0], [76.1, 939.0], [76.2, 939.0], [76.3, 939.0], [76.4, 940.0], [76.5, 940.0], [76.6, 941.0], [76.7, 941.0], [76.8, 942.0], [76.9, 942.0], [77.0, 942.0], [77.1, 943.0], [77.2, 943.0], [77.3, 943.0], [77.4, 944.0], [77.5, 944.0], [77.6, 945.0], [77.7, 945.0], [77.8, 946.0], [77.9, 946.0], [78.0, 947.0], [78.1, 947.0], [78.2, 947.0], [78.3, 948.0], [78.4, 948.0], [78.5, 949.0], [78.6, 949.0], [78.7, 950.0], [78.8, 950.0], [78.9, 951.0], [79.0, 951.0], [79.1, 951.0], [79.2, 952.0], [79.3, 953.0], [79.4, 953.0], [79.5, 954.0], [79.6, 954.0], [79.7, 954.0], [79.8, 955.0], [79.9, 955.0], [80.0, 956.0], [80.1, 956.0], [80.2, 957.0], [80.3, 957.0], [80.4, 958.0], [80.5, 959.0], [80.6, 959.0], [80.7, 959.0], [80.8, 960.0], [80.9, 960.0], [81.0, 961.0], [81.1, 961.0], [81.2, 962.0], [81.3, 962.0], [81.4, 963.0], [81.5, 963.0], [81.6, 964.0], [81.7, 964.0], [81.8, 965.0], [81.9, 965.0], [82.0, 966.0], [82.1, 966.0], [82.2, 967.0], [82.3, 968.0], [82.4, 968.0], [82.5, 969.0], [82.6, 969.0], [82.7, 970.0], [82.8, 970.0], [82.9, 971.0], [83.0, 971.0], [83.1, 971.0], [83.2, 972.0], [83.3, 973.0], [83.4, 973.0], [83.5, 974.0], [83.6, 974.0], [83.7, 975.0], [83.8, 975.0], [83.9, 976.0], [84.0, 976.0], [84.1, 977.0], [84.2, 978.0], [84.3, 978.0], [84.4, 978.0], [84.5, 979.0], [84.6, 980.0], [84.7, 980.0], [84.8, 981.0], [84.9, 981.0], [85.0, 982.0], [85.1, 983.0], [85.2, 983.0], [85.3, 984.0], [85.4, 984.0], [85.5, 985.0], [85.6, 985.0], [85.7, 986.0], [85.8, 987.0], [85.9, 987.0], [86.0, 988.0], [86.1, 988.0], [86.2, 989.0], [86.3, 989.0], [86.4, 990.0], [86.5, 990.0], [86.6, 991.0], [86.7, 992.0], [86.8, 992.0], [86.9, 993.0], [87.0, 994.0], [87.1, 994.0], [87.2, 995.0], [87.3, 996.0], [87.4, 996.0], [87.5, 997.0], [87.6, 997.0], [87.7, 998.0], [87.8, 999.0], [87.9, 999.0], [88.0, 1000.0], [88.1, 1001.0], [88.2, 1001.0], [88.3, 1002.0], [88.4, 1003.0], [88.5, 1003.0], [88.6, 1004.0], [88.7, 1005.0], [88.8, 1005.0], [88.9, 1006.0], [89.0, 1007.0], [89.1, 1007.0], [89.2, 1008.0], [89.3, 1009.0], [89.4, 1010.0], [89.5, 1010.0], [89.6, 1011.0], [89.7, 1012.0], [89.8, 1013.0], [89.9, 1014.0], [90.0, 1015.0], [90.1, 1015.0], [90.2, 1016.0], [90.3, 1017.0], [90.4, 1018.0], [90.5, 1018.0], [90.6, 1019.0], [90.7, 1020.0], [90.8, 1021.0], [90.9, 1022.0], [91.0, 1023.0], [91.1, 1024.0], [91.2, 1024.0], [91.3, 1025.0], [91.4, 1026.0], [91.5, 1027.0], [91.6, 1028.0], [91.7, 1029.0], [91.8, 1030.0], [91.9, 1031.0], [92.0, 1032.0], [92.1, 1033.0], [92.2, 1034.0], [92.3, 1035.0], [92.4, 1036.0], [92.5, 1038.0], [92.6, 1039.0], [92.7, 1040.0], [92.8, 1041.0], [92.9, 1042.0], [93.0, 1043.0], [93.1, 1045.0], [93.2, 1046.0], [93.3, 1047.0], [93.4, 1048.0], [93.5, 1049.0], [93.6, 1051.0], [93.7, 1052.0], [93.8, 1053.0], [93.9, 1054.0], [94.0, 1056.0], [94.1, 1058.0], [94.2, 1060.0], [94.3, 1061.0], [94.4, 1063.0], [94.5, 1064.0], [94.6, 1065.0], [94.7, 1067.0], [94.8, 1069.0], [94.9, 1070.0], [95.0, 1072.0], [95.1, 1073.0], [95.2, 1076.0], [95.3, 1078.0], [95.4, 1080.0], [95.5, 1082.0], [95.6, 1084.0], [95.7, 1086.0], [95.8, 1089.0], [95.9, 1091.0], [96.0, 1093.0], [96.1, 1096.0], [96.2, 1099.0], [96.3, 1101.0], [96.4, 1103.0], [96.5, 1106.0], [96.6, 1109.0], [96.7, 1112.0], [96.8, 1116.0], [96.9, 1119.0], [97.0, 1122.0], [97.1, 1126.0], [97.2, 1130.0], [97.3, 1134.0], [97.4, 1137.0], [97.5, 1141.0], [97.6, 1146.0], [97.7, 1150.0], [97.8, 1155.0], [97.9, 1159.0], [98.0, 1165.0], [98.1, 1171.0], [98.2, 1180.0], [98.3, 1192.0], [98.4, 1200.0], [98.5, 1219.0], [98.6, 1233.0], [98.7, 1256.0], [98.8, 1295.0], [98.9, 1370.0], [99.0, 1502.0], [99.1, 1588.0], [99.2, 1628.0], [99.3, 1671.0], [99.4, 1705.0], [99.5, 1737.0], [99.6, 1767.0], [99.7, 1801.0], [99.8, 1863.0], [99.9, 1931.0]], "isOverall": false, "label": "GET employee by id", "isController": false}, {"data": [[0.0, 6.0], [0.1, 8.0], [0.2, 9.0], [0.3, 9.0], [0.4, 10.0], [0.5, 11.0], [0.6, 12.0], [0.7, 13.0], [0.8, 13.0], [0.9, 14.0], [1.0, 15.0], [1.1, 16.0], [1.2, 18.0], [1.3, 19.0], [1.4, 20.0], [1.5, 23.0], [1.6, 25.0], [1.7, 27.0], [1.8, 30.0], [1.9, 34.0], [2.0, 37.0], [2.1, 40.0], [2.2, 44.0], [2.3, 47.0], [2.4, 51.0], [2.5, 55.0], [2.6, 59.0], [2.7, 65.0], [2.8, 70.0], [2.9, 78.0], [3.0, 84.0], [3.1, 90.0], [3.2, 100.0], [3.3, 112.0], [3.4, 124.0], [3.5, 134.0], [3.6, 143.0], [3.7, 152.0], [3.8, 159.0], [3.9, 167.0], [4.0, 177.0], [4.1, 188.0], [4.2, 201.0], [4.3, 211.0], [4.4, 218.0], [4.5, 227.0], [4.6, 233.0], [4.7, 239.0], [4.8, 246.0], [4.9, 254.0], [5.0, 261.0], [5.1, 269.0], [5.2, 276.0], [5.3, 281.0], [5.4, 287.0], [5.5, 293.0], [5.6, 299.0], [5.7, 304.0], [5.8, 309.0], [5.9, 314.0], [6.0, 322.0], [6.1, 327.0], [6.2, 332.0], [6.3, 337.0], [6.4, 340.0], [6.5, 345.0], [6.6, 349.0], [6.7, 354.0], [6.8, 358.0], [6.9, 363.0], [7.0, 367.0], [7.1, 372.0], [7.2, 377.0], [7.3, 383.0], [7.4, 391.0], [7.5, 398.0], [7.6, 404.0], [7.7, 410.0], [7.8, 416.0], [7.9, 425.0], [8.0, 435.0], [8.1, 443.0], [8.2, 450.0], [8.3, 456.0], [8.4, 464.0], [8.5, 472.0], [8.6, 480.0], [8.7, 487.0], [8.8, 496.0], [8.9, 505.0], [9.0, 512.0], [9.1, 518.0], [9.2, 527.0], [9.3, 534.0], [9.4, 541.0], [9.5, 546.0], [9.6, 552.0], [9.7, 558.0], [9.8, 562.0], [9.9, 567.0], [10.0, 574.0], [10.1, 578.0], [10.2, 583.0], [10.3, 588.0], [10.4, 593.0], [10.5, 597.0], [10.6, 601.0], [10.7, 606.0], [10.8, 610.0], [10.9, 613.0], [11.0, 616.0], [11.1, 619.0], [11.2, 623.0], [11.3, 625.0], [11.4, 628.0], [11.5, 630.0], [11.6, 633.0], [11.7, 636.0], [11.8, 639.0], [11.9, 642.0], [12.0, 645.0], [12.1, 647.0], [12.2, 649.0], [12.3, 651.0], [12.4, 653.0], [12.5, 656.0], [12.6, 658.0], [12.7, 661.0], [12.8, 662.0], [12.9, 665.0], [13.0, 667.0], [13.1, 669.0], [13.2, 671.0], [13.3, 673.0], [13.4, 675.0], [13.5, 676.0], [13.6, 679.0], [13.7, 680.0], [13.8, 682.0], [13.9, 683.0], [14.0, 685.0], [14.1, 687.0], [14.2, 689.0], [14.3, 690.0], [14.4, 692.0], [14.5, 693.0], [14.6, 695.0], [14.7, 696.0], [14.8, 698.0], [14.9, 699.0], [15.0, 701.0], [15.1, 702.0], [15.2, 704.0], [15.3, 705.0], [15.4, 706.0], [15.5, 708.0], [15.6, 709.0], [15.7, 710.0], [15.8, 712.0], [15.9, 713.0], [16.0, 714.0], [16.1, 715.0], [16.2, 716.0], [16.3, 718.0], [16.4, 719.0], [16.5, 720.0], [16.6, 722.0], [16.7, 723.0], [16.8, 724.0], [16.9, 725.0], [17.0, 727.0], [17.1, 727.0], [17.2, 729.0], [17.3, 730.0], [17.4, 731.0], [17.5, 732.0], [17.6, 733.0], [17.7, 734.0], [17.8, 735.0], [17.9, 736.0], [18.0, 737.0], [18.1, 737.0], [18.2, 738.0], [18.3, 739.0], [18.4, 740.0], [18.5, 741.0], [18.6, 742.0], [18.7, 743.0], [18.8, 743.0], [18.9, 744.0], [19.0, 745.0], [19.1, 746.0], [19.2, 747.0], [19.3, 747.0], [19.4, 748.0], [19.5, 749.0], [19.6, 750.0], [19.7, 750.0], [19.8, 751.0], [19.9, 752.0], [20.0, 752.0], [20.1, 753.0], [20.2, 754.0], [20.3, 755.0], [20.4, 755.0], [20.5, 756.0], [20.6, 757.0], [20.7, 758.0], [20.8, 758.0], [20.9, 759.0], [21.0, 760.0], [21.1, 761.0], [21.2, 762.0], [21.3, 762.0], [21.4, 763.0], [21.5, 763.0], [21.6, 764.0], [21.7, 764.0], [21.8, 765.0], [21.9, 766.0], [22.0, 766.0], [22.1, 767.0], [22.2, 767.0], [22.3, 768.0], [22.4, 768.0], [22.5, 769.0], [22.6, 769.0], [22.7, 770.0], [22.8, 770.0], [22.9, 771.0], [23.0, 771.0], [23.1, 772.0], [23.2, 772.0], [23.3, 773.0], [23.4, 774.0], [23.5, 774.0], [23.6, 775.0], [23.7, 775.0], [23.8, 776.0], [23.9, 776.0], [24.0, 777.0], [24.1, 778.0], [24.2, 778.0], [24.3, 779.0], [24.4, 779.0], [24.5, 780.0], [24.6, 780.0], [24.7, 781.0], [24.8, 781.0], [24.9, 782.0], [25.0, 782.0], [25.1, 783.0], [25.2, 783.0], [25.3, 783.0], [25.4, 784.0], [25.5, 784.0], [25.6, 785.0], [25.7, 785.0], [25.8, 786.0], [25.9, 786.0], [26.0, 787.0], [26.1, 787.0], [26.2, 788.0], [26.3, 788.0], [26.4, 789.0], [26.5, 789.0], [26.6, 790.0], [26.7, 790.0], [26.8, 791.0], [26.9, 791.0], [27.0, 791.0], [27.1, 792.0], [27.2, 792.0], [27.3, 793.0], [27.4, 793.0], [27.5, 793.0], [27.6, 794.0], [27.7, 794.0], [27.8, 795.0], [27.9, 795.0], [28.0, 796.0], [28.1, 796.0], [28.2, 796.0], [28.3, 797.0], [28.4, 797.0], [28.5, 798.0], [28.6, 798.0], [28.7, 799.0], [28.8, 799.0], [28.9, 799.0], [29.0, 800.0], [29.1, 800.0], [29.2, 801.0], [29.3, 801.0], [29.4, 802.0], [29.5, 802.0], [29.6, 802.0], [29.7, 803.0], [29.8, 803.0], [29.9, 804.0], [30.0, 804.0], [30.1, 804.0], [30.2, 805.0], [30.3, 805.0], [30.4, 806.0], [30.5, 806.0], [30.6, 807.0], [30.7, 807.0], [30.8, 807.0], [30.9, 808.0], [31.0, 808.0], [31.1, 808.0], [31.2, 809.0], [31.3, 809.0], [31.4, 809.0], [31.5, 810.0], [31.6, 810.0], [31.7, 811.0], [31.8, 811.0], [31.9, 811.0], [32.0, 812.0], [32.1, 812.0], [32.2, 813.0], [32.3, 813.0], [32.4, 813.0], [32.5, 814.0], [32.6, 814.0], [32.7, 814.0], [32.8, 815.0], [32.9, 815.0], [33.0, 815.0], [33.1, 816.0], [33.2, 816.0], [33.3, 816.0], [33.4, 817.0], [33.5, 817.0], [33.6, 817.0], [33.7, 818.0], [33.8, 818.0], [33.9, 818.0], [34.0, 819.0], [34.1, 819.0], [34.2, 820.0], [34.3, 820.0], [34.4, 820.0], [34.5, 821.0], [34.6, 821.0], [34.7, 821.0], [34.8, 822.0], [34.9, 822.0], [35.0, 822.0], [35.1, 823.0], [35.2, 823.0], [35.3, 823.0], [35.4, 824.0], [35.5, 824.0], [35.6, 824.0], [35.7, 825.0], [35.8, 825.0], [35.9, 825.0], [36.0, 826.0], [36.1, 826.0], [36.2, 826.0], [36.3, 827.0], [36.4, 827.0], [36.5, 827.0], [36.6, 828.0], [36.7, 828.0], [36.8, 828.0], [36.9, 829.0], [37.0, 829.0], [37.1, 830.0], [37.2, 830.0], [37.3, 830.0], [37.4, 831.0], [37.5, 831.0], [37.6, 831.0], [37.7, 832.0], [37.8, 832.0], [37.9, 832.0], [38.0, 833.0], [38.1, 833.0], [38.2, 833.0], [38.3, 834.0], [38.4, 834.0], [38.5, 834.0], [38.6, 835.0], [38.7, 835.0], [38.8, 835.0], [38.9, 836.0], [39.0, 836.0], [39.1, 837.0], [39.2, 837.0], [39.3, 837.0], [39.4, 838.0], [39.5, 838.0], [39.6, 838.0], [39.7, 838.0], [39.8, 839.0], [39.9, 839.0], [40.0, 839.0], [40.1, 840.0], [40.2, 840.0], [40.3, 840.0], [40.4, 841.0], [40.5, 841.0], [40.6, 841.0], [40.7, 842.0], [40.8, 842.0], [40.9, 843.0], [41.0, 843.0], [41.1, 843.0], [41.2, 843.0], [41.3, 844.0], [41.4, 844.0], [41.5, 844.0], [41.6, 845.0], [41.7, 845.0], [41.8, 845.0], [41.9, 846.0], [42.0, 846.0], [42.1, 846.0], [42.2, 847.0], [42.3, 847.0], [42.4, 847.0], [42.5, 847.0], [42.6, 848.0], [42.7, 848.0], [42.8, 849.0], [42.9, 849.0], [43.0, 849.0], [43.1, 849.0], [43.2, 850.0], [43.3, 850.0], [43.4, 850.0], [43.5, 851.0], [43.6, 851.0], [43.7, 851.0], [43.8, 851.0], [43.9, 852.0], [44.0, 852.0], [44.1, 852.0], [44.2, 853.0], [44.3, 853.0], [44.4, 853.0], [44.5, 853.0], [44.6, 854.0], [44.7, 854.0], [44.8, 854.0], [44.9, 855.0], [45.0, 855.0], [45.1, 855.0], [45.2, 856.0], [45.3, 856.0], [45.4, 856.0], [45.5, 856.0], [45.6, 857.0], [45.7, 857.0], [45.8, 857.0], [45.9, 858.0], [46.0, 858.0], [46.1, 858.0], [46.2, 859.0], [46.3, 859.0], [46.4, 859.0], [46.5, 860.0], [46.6, 860.0], [46.7, 860.0], [46.8, 861.0], [46.9, 861.0], [47.0, 861.0], [47.1, 861.0], [47.2, 862.0], [47.3, 862.0], [47.4, 862.0], [47.5, 863.0], [47.6, 863.0], [47.7, 863.0], [47.8, 864.0], [47.9, 864.0], [48.0, 864.0], [48.1, 865.0], [48.2, 865.0], [48.3, 865.0], [48.4, 866.0], [48.5, 866.0], [48.6, 866.0], [48.7, 866.0], [48.8, 867.0], [48.9, 867.0], [49.0, 867.0], [49.1, 868.0], [49.2, 868.0], [49.3, 868.0], [49.4, 869.0], [49.5, 869.0], [49.6, 869.0], [49.7, 870.0], [49.8, 870.0], [49.9, 870.0], [50.0, 871.0], [50.1, 871.0], [50.2, 871.0], [50.3, 871.0], [50.4, 872.0], [50.5, 872.0], [50.6, 872.0], [50.7, 873.0], [50.8, 873.0], [50.9, 873.0], [51.0, 873.0], [51.1, 874.0], [51.2, 874.0], [51.3, 874.0], [51.4, 875.0], [51.5, 875.0], [51.6, 875.0], [51.7, 875.0], [51.8, 876.0], [51.9, 876.0], [52.0, 877.0], [52.1, 877.0], [52.2, 877.0], [52.3, 877.0], [52.4, 878.0], [52.5, 878.0], [52.6, 879.0], [52.7, 879.0], [52.8, 879.0], [52.9, 879.0], [53.0, 880.0], [53.1, 880.0], [53.2, 880.0], [53.3, 881.0], [53.4, 881.0], [53.5, 881.0], [53.6, 882.0], [53.7, 882.0], [53.8, 882.0], [53.9, 882.0], [54.0, 883.0], [54.1, 883.0], [54.2, 883.0], [54.3, 884.0], [54.4, 884.0], [54.5, 884.0], [54.6, 885.0], [54.7, 885.0], [54.8, 885.0], [54.9, 886.0], [55.0, 886.0], [55.1, 886.0], [55.2, 887.0], [55.3, 887.0], [55.4, 887.0], [55.5, 888.0], [55.6, 888.0], [55.7, 888.0], [55.8, 888.0], [55.9, 888.0], [56.0, 889.0], [56.1, 889.0], [56.2, 889.0], [56.3, 890.0], [56.4, 890.0], [56.5, 890.0], [56.6, 891.0], [56.7, 891.0], [56.8, 891.0], [56.9, 891.0], [57.0, 892.0], [57.1, 892.0], [57.2, 892.0], [57.3, 893.0], [57.4, 893.0], [57.5, 893.0], [57.6, 893.0], [57.7, 894.0], [57.8, 894.0], [57.9, 894.0], [58.0, 895.0], [58.1, 895.0], [58.2, 895.0], [58.3, 895.0], [58.4, 896.0], [58.5, 896.0], [58.6, 896.0], [58.7, 897.0], [58.8, 897.0], [58.9, 897.0], [59.0, 898.0], [59.1, 898.0], [59.2, 898.0], [59.3, 899.0], [59.4, 899.0], [59.5, 899.0], [59.6, 899.0], [59.7, 900.0], [59.8, 900.0], [59.9, 900.0], [60.0, 901.0], [60.1, 901.0], [60.2, 902.0], [60.3, 902.0], [60.4, 902.0], [60.5, 903.0], [60.6, 903.0], [60.7, 903.0], [60.8, 904.0], [60.9, 904.0], [61.0, 904.0], [61.1, 904.0], [61.2, 905.0], [61.3, 905.0], [61.4, 905.0], [61.5, 906.0], [61.6, 906.0], [61.7, 906.0], [61.8, 906.0], [61.9, 907.0], [62.0, 907.0], [62.1, 908.0], [62.2, 908.0], [62.3, 908.0], [62.4, 909.0], [62.5, 909.0], [62.6, 909.0], [62.7, 909.0], [62.8, 910.0], [62.9, 910.0], [63.0, 910.0], [63.1, 911.0], [63.2, 911.0], [63.3, 911.0], [63.4, 912.0], [63.5, 912.0], [63.6, 912.0], [63.7, 913.0], [63.8, 913.0], [63.9, 913.0], [64.0, 914.0], [64.1, 914.0], [64.2, 914.0], [64.3, 915.0], [64.4, 915.0], [64.5, 915.0], [64.6, 916.0], [64.7, 916.0], [64.8, 916.0], [64.9, 917.0], [65.0, 917.0], [65.1, 917.0], [65.2, 918.0], [65.3, 918.0], [65.4, 918.0], [65.5, 919.0], [65.6, 919.0], [65.7, 919.0], [65.8, 920.0], [65.9, 920.0], [66.0, 920.0], [66.1, 921.0], [66.2, 921.0], [66.3, 921.0], [66.4, 922.0], [66.5, 922.0], [66.6, 922.0], [66.7, 922.0], [66.8, 923.0], [66.9, 923.0], [67.0, 924.0], [67.1, 924.0], [67.2, 924.0], [67.3, 925.0], [67.4, 925.0], [67.5, 925.0], [67.6, 926.0], [67.7, 926.0], [67.8, 926.0], [67.9, 927.0], [68.0, 927.0], [68.1, 928.0], [68.2, 928.0], [68.3, 928.0], [68.4, 929.0], [68.5, 929.0], [68.6, 929.0], [68.7, 930.0], [68.8, 930.0], [68.9, 930.0], [69.0, 931.0], [69.1, 931.0], [69.2, 931.0], [69.3, 932.0], [69.4, 932.0], [69.5, 933.0], [69.6, 933.0], [69.7, 933.0], [69.8, 934.0], [69.9, 934.0], [70.0, 934.0], [70.1, 934.0], [70.2, 935.0], [70.3, 935.0], [70.4, 936.0], [70.5, 936.0], [70.6, 937.0], [70.7, 937.0], [70.8, 937.0], [70.9, 938.0], [71.0, 938.0], [71.1, 938.0], [71.2, 939.0], [71.3, 939.0], [71.4, 939.0], [71.5, 940.0], [71.6, 940.0], [71.7, 941.0], [71.8, 941.0], [71.9, 941.0], [72.0, 942.0], [72.1, 942.0], [72.2, 943.0], [72.3, 943.0], [72.4, 944.0], [72.5, 944.0], [72.6, 944.0], [72.7, 945.0], [72.8, 945.0], [72.9, 946.0], [73.0, 946.0], [73.1, 946.0], [73.2, 947.0], [73.3, 947.0], [73.4, 947.0], [73.5, 948.0], [73.6, 948.0], [73.7, 949.0], [73.8, 949.0], [73.9, 950.0], [74.0, 950.0], [74.1, 950.0], [74.2, 950.0], [74.3, 951.0], [74.4, 951.0], [74.5, 951.0], [74.6, 952.0], [74.7, 952.0], [74.8, 953.0], [74.9, 953.0], [75.0, 953.0], [75.1, 954.0], [75.2, 954.0], [75.3, 955.0], [75.4, 955.0], [75.5, 955.0], [75.6, 956.0], [75.7, 956.0], [75.8, 957.0], [75.9, 957.0], [76.0, 958.0], [76.1, 958.0], [76.2, 958.0], [76.3, 959.0], [76.4, 959.0], [76.5, 960.0], [76.6, 960.0], [76.7, 960.0], [76.8, 961.0], [76.9, 961.0], [77.0, 962.0], [77.1, 962.0], [77.2, 962.0], [77.3, 963.0], [77.4, 963.0], [77.5, 964.0], [77.6, 964.0], [77.7, 965.0], [77.8, 965.0], [77.9, 965.0], [78.0, 966.0], [78.1, 966.0], [78.2, 967.0], [78.3, 967.0], [78.4, 968.0], [78.5, 968.0], [78.6, 969.0], [78.7, 969.0], [78.8, 970.0], [78.9, 970.0], [79.0, 970.0], [79.1, 971.0], [79.2, 971.0], [79.3, 972.0], [79.4, 972.0], [79.5, 973.0], [79.6, 973.0], [79.7, 974.0], [79.8, 974.0], [79.9, 975.0], [80.0, 975.0], [80.1, 976.0], [80.2, 976.0], [80.3, 976.0], [80.4, 977.0], [80.5, 977.0], [80.6, 978.0], [80.7, 978.0], [80.8, 979.0], [80.9, 979.0], [81.0, 980.0], [81.1, 980.0], [81.2, 981.0], [81.3, 981.0], [81.4, 982.0], [81.5, 982.0], [81.6, 983.0], [81.7, 983.0], [81.8, 984.0], [81.9, 984.0], [82.0, 985.0], [82.1, 985.0], [82.2, 986.0], [82.3, 986.0], [82.4, 987.0], [82.5, 987.0], [82.6, 988.0], [82.7, 988.0], [82.8, 989.0], [82.9, 989.0], [83.0, 990.0], [83.1, 991.0], [83.2, 991.0], [83.3, 992.0], [83.4, 992.0], [83.5, 993.0], [83.6, 993.0], [83.7, 994.0], [83.8, 994.0], [83.9, 995.0], [84.0, 995.0], [84.1, 996.0], [84.2, 996.0], [84.3, 997.0], [84.4, 998.0], [84.5, 998.0], [84.6, 999.0], [84.7, 1000.0], [84.8, 1000.0], [84.9, 1001.0], [85.0, 1001.0], [85.1, 1002.0], [85.2, 1002.0], [85.3, 1003.0], [85.4, 1003.0], [85.5, 1004.0], [85.6, 1004.0], [85.7, 1005.0], [85.8, 1005.0], [85.9, 1006.0], [86.0, 1006.0], [86.1, 1007.0], [86.2, 1007.0], [86.3, 1008.0], [86.4, 1008.0], [86.5, 1009.0], [86.6, 1009.0], [86.7, 1010.0], [86.8, 1010.0], [86.9, 1011.0], [87.0, 1012.0], [87.1, 1012.0], [87.2, 1012.0], [87.3, 1013.0], [87.4, 1014.0], [87.5, 1014.0], [87.6, 1015.0], [87.7, 1016.0], [87.8, 1016.0], [87.9, 1017.0], [88.0, 1018.0], [88.1, 1018.0], [88.2, 1019.0], [88.3, 1020.0], [88.4, 1020.0], [88.5, 1021.0], [88.6, 1022.0], [88.7, 1022.0], [88.8, 1023.0], [88.9, 1024.0], [89.0, 1025.0], [89.1, 1025.0], [89.2, 1026.0], [89.3, 1027.0], [89.4, 1028.0], [89.5, 1028.0], [89.6, 1029.0], [89.7, 1030.0], [89.8, 1031.0], [89.9, 1031.0], [90.0, 1032.0], [90.1, 1033.0], [90.2, 1034.0], [90.3, 1035.0], [90.4, 1036.0], [90.5, 1037.0], [90.6, 1038.0], [90.7, 1038.0], [90.8, 1039.0], [90.9, 1040.0], [91.0, 1041.0], [91.1, 1042.0], [91.2, 1043.0], [91.3, 1044.0], [91.4, 1045.0], [91.5, 1046.0], [91.6, 1047.0], [91.7, 1048.0], [91.8, 1049.0], [91.9, 1051.0], [92.0, 1052.0], [92.1, 1053.0], [92.2, 1054.0], [92.3, 1055.0], [92.4, 1056.0], [92.5, 1057.0], [92.6, 1059.0], [92.7, 1060.0], [92.8, 1061.0], [92.9, 1062.0], [93.0, 1063.0], [93.1, 1064.0], [93.2, 1066.0], [93.3, 1067.0], [93.4, 1068.0], [93.5, 1069.0], [93.6, 1071.0], [93.7, 1072.0], [93.8, 1073.0], [93.9, 1075.0], [94.0, 1076.0], [94.1, 1078.0], [94.2, 1079.0], [94.3, 1081.0], [94.4, 1083.0], [94.5, 1084.0], [94.6, 1086.0], [94.7, 1088.0], [94.8, 1089.0], [94.9, 1091.0], [95.0, 1093.0], [95.1, 1095.0], [95.2, 1097.0], [95.3, 1099.0], [95.4, 1100.0], [95.5, 1102.0], [95.6, 1105.0], [95.7, 1107.0], [95.8, 1109.0], [95.9, 1112.0], [96.0, 1115.0], [96.1, 1116.0], [96.2, 1119.0], [96.3, 1122.0], [96.4, 1125.0], [96.5, 1127.0], [96.6, 1130.0], [96.7, 1133.0], [96.8, 1136.0], [96.9, 1139.0], [97.0, 1142.0], [97.1, 1145.0], [97.2, 1150.0], [97.3, 1154.0], [97.4, 1158.0], [97.5, 1161.0], [97.6, 1165.0], [97.7, 1169.0], [97.8, 1175.0], [97.9, 1181.0], [98.0, 1188.0], [98.1, 1197.0], [98.2, 1204.0], [98.3, 1211.0], [98.4, 1227.0], [98.5, 1240.0], [98.6, 1263.0], [98.7, 1291.0], [98.8, 1314.0], [98.9, 1368.0], [99.0, 1478.0], [99.1, 1602.0], [99.2, 1643.0], [99.3, 1690.0], [99.4, 1715.0], [99.5, 1744.0], [99.6, 1775.0], [99.7, 1811.0], [99.8, 1869.0], [99.9, 1979.0]], "isOverall": false, "label": "POST employee", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 39688.0, "series": [{"data": [[0.0, 505.0], [600.0, 633.0], [700.0, 1608.0], [800.0, 4985.0], [900.0, 11434.0], [1000.0, 10466.0], [1100.0, 4977.0], [1200.0, 1563.0], [1300.0, 389.0], [1400.0, 113.0], [1500.0, 29.0], [100.0, 739.0], [1600.0, 43.0], [1700.0, 85.0], [1800.0, 89.0], [1900.0, 87.0], [2000.0, 30.0], [2100.0, 19.0], [2200.0, 9.0], [2300.0, 1.0], [2400.0, 1.0], [2700.0, 1.0], [200.0, 439.0], [300.0, 508.0], [400.0, 697.0], [500.0, 550.0]], "isOverall": false, "label": "GET All employees", "isController": false}, {"data": [[0.0, 39688.0], [300.0, 30.0], [100.0, 235.0], [200.0, 32.0], [400.0, 14.0], [800.0, 1.0]], "isOverall": false, "label": "GET thread name", "isController": false}, {"data": [[0.0, 1478.0], [600.0, 1971.0], [700.0, 7054.0], [800.0, 12515.0], [900.0, 9113.0], [1000.0, 3327.0], [1100.0, 856.0], [1200.0, 167.0], [1300.0, 57.0], [1400.0, 17.0], [1500.0, 53.0], [100.0, 385.0], [1600.0, 103.0], [1700.0, 125.0], [1800.0, 66.0], [1900.0, 31.0], [2000.0, 11.0], [2100.0, 5.0], [2300.0, 2.0], [2400.0, 2.0], [2500.0, 1.0], [2600.0, 2.0], [2700.0, 1.0], [200.0, 558.0], [300.0, 835.0], [400.0, 528.0], [500.0, 737.0]], "isOverall": false, "label": "GET employee by id", "isController": false}, {"data": [[0.0, 1275.0], [600.0, 1741.0], [700.0, 5601.0], [800.0, 12281.0], [900.0, 10034.0], [1000.0, 4270.0], [1100.0, 1106.0], [1200.0, 240.0], [1300.0, 93.0], [1400.0, 18.0], [1500.0, 36.0], [100.0, 399.0], [1600.0, 97.0], [1700.0, 128.0], [1800.0, 66.0], [1900.0, 38.0], [2000.0, 20.0], [2100.0, 5.0], [2300.0, 1.0], [2200.0, 1.0], [2400.0, 1.0], [2500.0, 2.0], [2600.0, 1.0], [2700.0, 1.0], [200.0, 574.0], [300.0, 762.0], [400.0, 523.0], [500.0, 686.0]], "isOverall": false, "label": "POST employee", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 2700.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 1192.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 108589.0, "series": [{"data": [[0.0, 50219.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 108589.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 1192.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 73.3964964224033, "minX": 1.73470926E12, "maxY": 200.0, "series": [{"data": [[1.7347098E12, 127.67811040922822], [1.73470944E12, 200.0], [1.7347095E12, 200.0], [1.73470932E12, 195.40699672894507], [1.73470962E12, 199.38945005611708], [1.73470938E12, 200.0], [1.73470974E12, 175.96810207336497], [1.73470926E12, 73.3964964224033], [1.73470968E12, 188.32823899370968], [1.73470956E12, 200.0]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7347098E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 4.361111111111111, "minX": 1.0, "maxY": 1193.2314814814822, "series": [{"data": [[2.0, 84.0], [3.0, 95.33333333333333], [4.0, 86.5], [5.0, 84.0], [6.0, 162.14285714285714], [7.0, 99.71428571428571], [8.0, 182.99999999999997], [9.0, 204.44444444444446], [10.0, 95.66666666666666], [11.0, 61.97142857142856], [12.0, 77.96875], [13.0, 66.8125], [14.0, 88.36666666666666], [15.0, 75.05263157894736], [16.0, 87.86842105263156], [17.0, 96.24324324324326], [18.0, 97.86486486486486], [19.0, 81.8888888888889], [20.0, 91.20588235294117], [21.0, 105.7], [22.0, 100.91666666666669], [23.0, 129.1111111111111], [24.0, 98.2258064516129], [25.0, 115.30555555555556], [26.0, 104.03030303030302], [27.0, 108.5], [28.0, 113.93939393939395], [29.0, 130.0769230769231], [30.0, 135.5], [31.0, 151.99999999999997], [32.0, 150.97222222222223], [33.0, 129.03703703703704], [34.0, 199.56000000000003], [35.0, 219.1304347826087], [36.0, 240.84615384615384], [37.0, 273.2083333333333], [38.0, 205.2727272727273], [39.0, 247.0454545454546], [40.0, 228.71999999999994], [41.0, 236.44], [42.0, 238.16666666666669], [43.0, 287.5142857142857], [44.0, 241.5], [45.0, 258.8333333333333], [46.0, 281.8148148148149], [47.0, 255.9230769230769], [48.0, 372.7647058823529], [49.0, 293.8400000000001], [50.0, 344.52941176470586], [51.0, 295.75], [52.0, 311.28571428571433], [53.0, 268.04999999999995], [54.0, 309.9583333333333], [55.0, 340.6923076923077], [56.0, 264.0], [57.0, 367.60869565217394], [58.0, 361.9705882352942], [59.0, 324.83333333333326], [60.0, 396.99999999999994], [61.0, 332.0526315789474], [62.0, 416.0294117647059], [63.0, 515.4375000000001], [64.0, 397.29166666666674], [65.0, 377.2142857142856], [66.0, 463.2], [67.0, 369.2], [68.0, 439.88235294117646], [69.0, 377.3500000000001], [70.0, 365.40740740740745], [71.0, 386.52380952380946], [72.0, 430.25], [73.0, 387.875], [74.0, 418.3928571428571], [75.0, 474.7857142857143], [76.0, 433.969696969697], [77.0, 407.22727272727275], [78.0, 381.88461538461536], [79.0, 465.44897959183675], [80.0, 507.89189189189193], [81.0, 484.7027027027027], [82.0, 508.3098591549296], [83.0, 406.45454545454544], [84.0, 417.695652173913], [85.0, 465.6363636363636], [86.0, 484.6734693877551], [87.0, 466.921052631579], [88.0, 461.0], [89.0, 482.42857142857144], [90.0, 539.6829268292682], [91.0, 527.0943396226417], [92.0, 476.69999999999993], [93.0, 493.18181818181824], [94.0, 563.265306122449], [95.0, 526.1935483870967], [96.0, 527.6], [97.0, 536.6315789473683], [98.0, 508.10526315789474], [99.0, 513.4634146341464], [100.0, 611.9365079365081], [101.0, 536.3703703703704], [102.0, 576.7045454545456], [103.0, 565.7272727272727], [104.0, 538.972972972973], [105.0, 501.05555555555554], [106.0, 531.4782608695651], [107.0, 632.3902439024391], [108.0, 696.5555555555554], [109.0, 579.4084507042255], [110.0, 526.0769230769231], [111.0, 633.4878048780488], [112.0, 702.2321428571425], [113.0, 633.9999999999999], [114.0, 660.5714285714286], [115.0, 562.0689655172413], [116.0, 697.5098039215685], [117.0, 665.1296296296294], [118.0, 706.5306122448978], [119.0, 781.5769230769231], [120.0, 724.6493506493507], [121.0, 634.6129032258067], [122.0, 533.1666666666667], [123.0, 715.9038461538461], [124.0, 755.2345679012346], [125.0, 787.3750000000001], [126.0, 767.5714285714286], [127.0, 752.0], [128.0, 652.4347826086956], [129.0, 728.5420560747665], [130.0, 711.3888888888886], [131.0, 753.1538461538462], [132.0, 810.5952380952381], [133.0, 754.4130434782608], [134.0, 755.2857142857142], [135.0, 830.336633663367], [136.0, 848.5396825396825], [137.0, 742.9999999999999], [138.0, 808.8571428571428], [139.0, 829.1111111111111], [140.0, 819.0952380952382], [141.0, 854.3287671232875], [142.0, 945.1481481481484], [143.0, 880.2105263157894], [144.0, 939.7282608695654], [145.0, 773.7826086956521], [146.0, 814.3333333333331], [147.0, 851.9433962264152], [148.0, 855.4567901234567], [149.0, 834.0952380952383], [150.0, 812.3235294117648], [151.0, 920.1505376344088], [152.0, 793.5263157894738], [153.0, 847.3913043478261], [154.0, 842.0], [155.0, 932.7909090909089], [156.0, 905.4344827586206], [157.0, 870.8227848101264], [158.0, 921.0212765957447], [159.0, 916.7931034482759], [160.0, 950.1926605504588], [161.0, 879.1142857142856], [162.0, 916.949152542373], [163.0, 895.5454545454545], [164.0, 947.6176470588234], [165.0, 906.0405405405407], [166.0, 916.6315789473683], [167.0, 946.2397260273972], [168.0, 921.4705882352941], [169.0, 949.9746192893391], [170.0, 975.2448979591837], [171.0, 861.0], [172.0, 960.134670487106], [173.0, 940.1714285714291], [174.0, 958.8484848484852], [175.0, 958.5077399380802], [176.0, 982.8292079207924], [177.0, 959.7802197802197], [178.0, 985.2519685039372], [179.0, 964.6126482213439], [180.0, 993.9226044226045], [181.0, 1029.013698630136], [182.0, 1000.3250000000003], [183.0, 978.1999999999999], [184.0, 1047.5024469820553], [185.0, 1007.2257281553406], [186.0, 996.5335968379451], [187.0, 1022.649532710281], [188.0, 1022.2905405405403], [189.0, 1012.1270553064271], [190.0, 1052.199084668193], [191.0, 1012.6564327485382], [192.0, 1193.2314814814822], [193.0, 1078.794871794872], [194.0, 1087.87788778878], [195.0, 1054.2698412698414], [196.0, 1059.8939828080227], [197.0, 989.0925925925926], [198.0, 1095.1685393258426], [199.0, 1023.073298429319], [200.0, 1020.2113906505944], [1.0, 65.0]], "isOverall": false, "label": "GET All employees", "isController": false}, {"data": [[179.70135000000047, 945.5349000000045]], "isOverall": false, "label": "GET All employees-Aggregated", "isController": false}, {"data": [[2.0, 17.0], [3.0, 32.0], [4.0, 6.25], [5.0, 51.5], [6.0, 13.833333333333332], [7.0, 17.25], [8.0, 21.5], [9.0, 9.333333333333334], [10.0, 11.1875], [11.0, 5.857142857142858], [12.0, 6.516129032258063], [13.0, 5.741935483870966], [14.0, 5.064516129032259], [15.0, 7.2972972972972965], [16.0, 6.153846153846154], [17.0, 6.153846153846154], [18.0, 6.2058823529411775], [19.0, 6.588235294117648], [20.0, 6.7631578947368425], [21.0, 6.199999999999999], [22.0, 9.045454545454547], [23.0, 21.390243902439025], [24.0, 5.838709677419354], [25.0, 7.264705882352939], [26.0, 5.705882352941177], [27.0, 6.7272727272727275], [28.0, 6.515151515151516], [29.0, 6.214285714285714], [30.0, 5.888888888888888], [31.0, 8.615384615384615], [32.0, 8.527777777777777], [33.0, 5.629629629629631], [34.0, 5.333333333333334], [35.0, 11.959999999999999], [36.0, 11.333333333333334], [37.0, 7.571428571428571], [38.0, 9.136363636363635], [39.0, 6.681818181818181], [40.0, 6.0], [41.0, 8.600000000000001], [42.0, 5.7600000000000025], [43.0, 29.400000000000002], [44.0, 6.599999999999999], [45.0, 6.300000000000001], [46.0, 17.133333333333333], [47.0, 11.956521739130434], [48.0, 16.416666666666668], [49.0, 9.250000000000002], [50.0, 13.066666666666666], [51.0, 14.586206896551724], [52.0, 5.954545454545454], [53.0, 8.714285714285714], [54.0, 10.095238095238095], [55.0, 7.538461538461538], [56.0, 6.958333333333333], [57.0, 7.6000000000000005], [58.0, 6.342857142857143], [59.0, 4.583333333333332], [60.0, 5.375000000000001], [61.0, 5.631578947368421], [62.0, 7.805555555555555], [63.0, 6.285714285714286], [64.0, 5.434782608695651], [65.0, 5.655172413793102], [66.0, 7.681818181818181], [67.0, 6.304347826086956], [68.0, 6.142857142857143], [69.0, 6.190476190476191], [70.0, 7.360000000000001], [71.0, 5.499999999999999], [72.0, 5.676470588235294], [73.0, 5.952380952380952], [74.0, 7.310344827586207], [75.0, 5.7749999999999995], [76.0, 5.6000000000000005], [77.0, 5.000000000000001], [78.0, 6.391304347826087], [79.0, 7.760000000000002], [80.0, 6.5], [81.0, 5.921052631578947], [82.0, 5.599999999999999], [83.0, 5.35], [84.0, 5.384615384615385], [85.0, 7.190476190476191], [86.0, 6.0625], [87.0, 5.157894736842105], [88.0, 5.884615384615383], [89.0, 5.428571428571429], [90.0, 5.547619047619046], [91.0, 6.040000000000001], [92.0, 6.323529411764706], [93.0, 5.749999999999998], [94.0, 5.250000000000002], [95.0, 6.032258064516129], [96.0, 6.346153846153848], [97.0, 5.052631578947369], [98.0, 6.052631578947369], [99.0, 5.720930232558139], [100.0, 5.047619047619046], [101.0, 4.846153846153844], [102.0, 5.69047619047619], [103.0, 5.521739130434783], [104.0, 6.210526315789472], [105.0, 8.714285714285715], [106.0, 4.863636363636364], [107.0, 5.906976744186047], [108.0, 4.361111111111111], [109.0, 5.176470588235295], [110.0, 6.178571428571429], [111.0, 6.439024390243904], [112.0, 5.357142857142857], [113.0, 5.35593220338983], [114.0, 6.8611111111111125], [115.0, 5.678571428571428], [116.0, 6.294117647058823], [117.0, 5.833333333333336], [118.0, 6.040816326530612], [119.0, 5.692307692307692], [120.0, 6.263157894736841], [121.0, 4.366666666666667], [122.0, 6.105263157894736], [123.0, 5.462962962962964], [124.0, 16.512500000000003], [125.0, 4.65625], [126.0, 6.6000000000000005], [127.0, 7.703703703703707], [128.0, 7.809523809523809], [129.0, 20.916666666666664], [130.0, 17.825000000000003], [131.0, 5.952380952380952], [132.0, 5.246031746031746], [133.0, 5.553191489361701], [134.0, 5.857142857142858], [135.0, 8.419999999999998], [136.0, 10.606299212598428], [137.0, 5.499999999999999], [138.0, 5.684210526315789], [139.0, 4.388888888888888], [140.0, 6.431818181818181], [141.0, 5.942857142857142], [142.0, 19.202380952380945], [143.0, 5.800000000000001], [144.0, 5.903225806451613], [145.0, 6.333333333333334], [146.0, 4.361111111111111], [147.0, 90.56603773584905], [148.0, 6.5092024539877285], [149.0, 8.994318181818196], [150.0, 16.052083333333336], [151.0, 95.10989010989012], [152.0, 6.675675675675674], [153.0, 19.773333333333333], [154.0, 9.708333333333334], [155.0, 8.90740740740741], [156.0, 5.902777777777776], [157.0, 5.125], [158.0, 5.5], [159.0, 6.858333333333335], [160.0, 9.222222222222214], [161.0, 15.289473684210526], [162.0, 16.85714285714285], [163.0, 13.578947368421051], [164.0, 6.911764705882354], [165.0, 4.944444444444444], [166.0, 7.747368421052631], [167.0, 6.975862068965517], [168.0, 5.752380952380949], [169.0, 5.530769230769227], [170.0, 5.939393939393941], [171.0, 5.772727272727273], [172.0, 5.55300859598854], [173.0, 5.351254480286741], [174.0, 6.022388059701494], [175.0, 5.993788819875775], [176.0, 7.344913151364763], [177.0, 5.597826086956522], [178.0, 7.559055118110239], [179.0, 6.972222222222223], [180.0, 8.825766871165637], [181.0, 8.118721461187217], [182.0, 9.91286307053942], [183.0, 9.333333333333332], [184.0, 7.502446982055469], [185.0, 6.193704600484257], [186.0, 7.055445544554457], [187.0, 5.824766355140188], [188.0, 9.333333333333341], [189.0, 7.27678571428571], [190.0, 6.909930715935337], [191.0, 8.724489795918366], [192.0, 8.89814814814815], [193.0, 5.17948717948718], [194.0, 8.235483870967741], [195.0, 5.178571428571429], [196.0, 6.180515759312325], [197.0, 12.311926605504583], [198.0, 6.58888888888889], [199.0, 6.127659574468087], [200.0, 8.253926921461598], [1.0, 28.5]], "isOverall": false, "label": "GET thread name", "isController": false}, {"data": [[179.69964999999954, 8.295225000000036]], "isOverall": false, "label": "GET thread name-Aggregated", "isController": false}, {"data": [[2.0, 181.0], [3.0, 8.0], [4.0, 8.75], [5.0, 81.0], [6.0, 7.0], [7.0, 43.062499999999986], [8.0, 9.0], [9.0, 33.666666666666664], [10.0, 14.681818181818183], [11.0, 8.903225806451614], [12.0, 11.129032258064518], [13.0, 9.76666666666667], [14.0, 12.500000000000002], [15.0, 11.25], [16.0, 13.825000000000003], [17.0, 20.999999999999993], [18.0, 28.33333333333334], [19.0, 20.999999999999993], [20.0, 23.000000000000004], [21.0, 28.771428571428572], [22.0, 33.99999999999999], [23.0, 42.71428571428572], [24.0, 37.6875], [25.0, 54.24242424242424], [26.0, 40.545454545454554], [27.0, 38.57142857142856], [28.0, 51.42857142857142], [29.0, 53.607142857142854], [30.0, 55.23333333333332], [31.0, 64.39024390243902], [32.0, 59.150000000000006], [33.0, 53.92857142857144], [34.0, 95.96551724137932], [35.0, 119.9], [36.0, 72.07142857142858], [37.0, 100.03448275862068], [38.0, 156.1818181818182], [39.0, 110.11428571428573], [40.0, 133.83333333333334], [41.0, 140.57692307692307], [42.0, 128.2608695652174], [43.0, 157.0285714285714], [44.0, 138.75000000000003], [45.0, 139.89655172413794], [46.0, 173.81481481481484], [47.0, 110.11538461538463], [48.0, 194.55555555555557], [49.0, 145.35999999999999], [50.0, 229.31578947368422], [51.0, 166.69565217391306], [52.0, 228.75], [53.0, 132.80645161290323], [54.0, 224.90476190476193], [55.0, 183.26666666666665], [56.0, 192.75], [57.0, 260.88888888888886], [58.0, 225.46153846153848], [59.0, 243.5], [60.0, 262.51515151515144], [61.0, 189.56249999999997], [62.0, 312.5999999999999], [63.0, 352.3333333333333], [64.0, 264.4285714285715], [65.0, 266.7777777777778], [66.0, 330.3846153846154], [67.0, 273.3], [68.0, 317.2500000000001], [69.0, 245.85714285714295], [70.0, 290.875], [71.0, 285.15], [72.0, 310.0526315789474], [73.0, 257.9130434782609], [74.0, 293.59999999999997], [75.0, 338.76923076923083], [76.0, 331.1935483870968], [77.0, 302.7142857142857], [78.0, 298.4285714285714], [79.0, 325.95238095238085], [80.0, 372.8666666666666], [81.0, 370.0370370370371], [82.0, 366.4512195121952], [83.0, 283.50000000000006], [84.0, 304.1764705882353], [85.0, 334.28], [86.0, 358.86956521739137], [87.0, 318.7173913043478], [88.0, 348.75], [89.0, 360.1428571428571], [90.0, 405.8333333333333], [91.0, 397.59259259259255], [92.0, 366.0740740740741], [93.0, 370.655172413793], [94.0, 406.3703703703703], [95.0, 389.73076923076917], [96.0, 390.3636363636364], [97.0, 430.15384615384613], [98.0, 416.08695652173907], [99.0, 382.5111111111111], [100.0, 426.5194805194805], [101.0, 441.20000000000005], [102.0, 490.5862068965517], [103.0, 424.08000000000004], [104.0, 398.468085106383], [105.0, 398.88235294117646], [106.0, 400.11111111111114], [107.0, 522.9090909090908], [108.0, 508.8571428571427], [109.0, 410.3150684931507], [110.0, 412.25], [111.0, 469.32352941176464], [112.0, 604.3235294117646], [113.0, 505.90140845070414], [114.0, 463.90909090909093], [115.0, 456.95238095238096], [116.0, 612.1399999999998], [117.0, 535.9767441860464], [118.0, 566.8039215686275], [119.0, 622.6666666666666], [120.0, 576.6842105263158], [121.0, 475.27500000000003], [122.0, 493.40909090909093], [123.0, 613.4200000000002], [124.0, 617.0000000000002], [125.0, 623.3636363636364], [126.0, 639.0882352941176], [127.0, 580.0652173913044], [128.0, 453.8636363636364], [129.0, 604.7850467289719], [130.0, 622.6129032258063], [131.0, 593.9999999999998], [132.0, 678.7310924369746], [133.0, 640.6279069767442], [134.0, 608.4923076923078], [135.0, 693.4747474747473], [136.0, 695.2500000000002], [137.0, 737.6315789473684], [138.0, 708.75], [139.0, 730.0769230769231], [140.0, 694.8372093023256], [141.0, 690.309523809524], [142.0, 764.6179775280898], [143.0, 717.0943396226415], [144.0, 813.443298969072], [145.0, 674.0833333333333], [146.0, 701.4523809523806], [147.0, 744.2444444444444], [148.0, 710.8313953488374], [149.0, 688.4187499999997], [150.0, 688.1200000000001], [151.0, 753.8247422680414], [152.0, 641.1578947368422], [153.0, 729.1014492753625], [154.0, 703.8260869565217], [155.0, 797.911764705882], [156.0, 754.1148648648648], [157.0, 708.3092783505152], [158.0, 765.7179487179487], [159.0, 774.1512605042014], [160.0, 804.6322869955154], [161.0, 814.7], [162.0, 788.6981132075471], [163.0, 773.5102040816327], [164.0, 768.7608695652177], [165.0, 758.6857142857143], [166.0, 780.132530120482], [167.0, 805.616438356164], [168.0, 771.8828125000001], [169.0, 808.9973474801059], [170.0, 807.838383838384], [171.0, 873.2142857142857], [172.0, 825.837988826816], [173.0, 806.7188612099641], [174.0, 832.8905109489051], [175.0, 816.8427672955971], [176.0, 831.6829896907218], [177.0, 800.3142857142859], [178.0, 832.1304347826087], [179.0, 817.9360902255642], [180.0, 855.9216417910447], [181.0, 879.2510822510824], [182.0, 866.6825396825393], [183.0, 932.3076923076923], [184.0, 925.6465517241382], [185.0, 892.8933649289103], [186.0, 878.4777327935221], [187.0, 879.2448979591833], [188.0, 853.2481203007524], [189.0, 842.0731707317077], [190.0, 894.995260663507], [191.0, 863.6475644699141], [192.0, 996.4747474747477], [193.0, 907.7567567567569], [194.0, 925.7484076433126], [195.0, 989.85], [196.0, 906.9366391184569], [197.0, 871.9363636363637], [198.0, 921.5612244897959], [199.0, 883.7487179487175], [200.0, 890.3369469305388], [1.0, 21.0]], "isOverall": false, "label": "GET employee by id", "isController": false}, {"data": [[179.7062250000004, 812.8821249999983]], "isOverall": false, "label": "GET employee by id-Aggregated", "isController": false}, {"data": [[2.0, 47.5], [3.0, 93.66666666666667], [4.0, 17.0], [5.0, 79.2], [6.0, 116.5], [7.0, 66.9], [8.0, 39.888888888888886], [9.0, 71.0], [10.0, 33.111111111111114], [11.0, 11.562500000000002], [12.0, 20.57142857142857], [13.0, 15.107142857142858], [14.0, 19.206896551724135], [15.0, 23.5952380952381], [16.0, 30.804878048780484], [17.0, 25.516129032258064], [18.0, 33.43243243243245], [19.0, 34.2051282051282], [20.0, 36.38888888888887], [21.0, 41.526315789473685], [22.0, 42.807692307692314], [23.0, 58.714285714285715], [24.0, 41.848484848484844], [25.0, 58.34210526315788], [26.0, 48.2962962962963], [27.0, 53.342857142857135], [28.0, 55.42857142857142], [29.0, 70.73333333333335], [30.0, 74.86666666666666], [31.0, 67.60975609756096], [32.0, 78.6904761904762], [33.0, 86.0], [34.0, 119.33333333333334], [35.0, 164.6], [36.0, 123.18518518518516], [37.0, 150.00000000000003], [38.0, 156.08333333333331], [39.0, 127.17857142857147], [40.0, 139.49999999999997], [41.0, 162.3548387096774], [42.0, 149.20833333333331], [43.0, 168.60606060606062], [44.0, 163.19047619047623], [45.0, 148.29629629629628], [46.0, 184.71428571428572], [47.0, 116.93750000000001], [48.0, 221.90566037735852], [49.0, 146.5], [50.0, 242.8857142857143], [51.0, 169.53846153846155], [52.0, 235.41176470588235], [53.0, 159.83870967741936], [54.0, 240.50000000000003], [55.0, 224.52380952380955], [56.0, 189.84615384615384], [57.0, 256.6333333333334], [58.0, 226.90909090909088], [59.0, 252.63636363636363], [60.0, 274.4333333333333], [61.0, 198.22222222222223], [62.0, 288.9062499999999], [63.0, 362.25000000000006], [64.0, 233.38095238095232], [65.0, 289.33333333333337], [66.0, 322.57575757575756], [67.0, 269.0], [68.0, 318.0888888888888], [69.0, 257.4375], [70.0, 297.12499999999994], [71.0, 294.69565217391306], [72.0, 309.4444444444444], [73.0, 263.047619047619], [74.0, 281.3636363636363], [75.0, 343.027027027027], [76.0, 318.264705882353], [77.0, 314.55555555555554], [78.0, 269.32142857142856], [79.0, 321.8269230769231], [80.0, 398.7435897435898], [81.0, 383.5161290322581], [82.0, 386.41975308641975], [83.0, 289.7619047619048], [84.0, 316.6666666666667], [85.0, 351.30769230769226], [86.0, 368.09756097560967], [87.0, 360.31707317073165], [88.0, 374.76], [89.0, 370.0714285714285], [90.0, 425.39024390243907], [91.0, 411.936170212766], [92.0, 371.0714285714286], [93.0, 382.2727272727273], [94.0, 437.9393939393941], [95.0, 427.86956521739125], [96.0, 405.04], [97.0, 448.69565217391306], [98.0, 460.8888888888889], [99.0, 408.00000000000006], [100.0, 472.2435897435897], [101.0, 437.8636363636363], [102.0, 509.2083333333333], [103.0, 452.0344827586207], [104.0, 400.6744186046511], [105.0, 407.40625], [106.0, 420.4347826086956], [107.0, 538.6170212765956], [108.0, 484.63829787234044], [109.0, 430.24590163934425], [110.0, 410.05882352941177], [111.0, 507.4255319148935], [112.0, 602.9803921568628], [113.0, 513.3384615384615], [114.0, 462.48979591836735], [115.0, 508.18181818181813], [116.0, 626.6744186046512], [117.0, 545.860465116279], [118.0, 577.8269230769232], [119.0, 629.9729729729729], [120.0, 582.8831168831172], [121.0, 486.7428571428572], [122.0, 506.2222222222223], [123.0, 599.0638297872341], [124.0, 630.3086419753087], [125.0, 639.5000000000001], [126.0, 680.525], [127.0, 582.3684210526312], [128.0, 479.2], [129.0, 623.7403846153846], [130.0, 647.1818181818182], [131.0, 664.5357142857142], [132.0, 663.2290076335876], [133.0, 636.2727272727273], [134.0, 601.95], [135.0, 703.9374999999999], [136.0, 713.4453125000001], [137.0, 706.8235294117649], [138.0, 706.4375], [139.0, 720.3333333333334], [140.0, 709.9999999999999], [141.0, 674.3488372093022], [142.0, 786.2962962962964], [143.0, 758.4516129032259], [144.0, 762.4999999999997], [145.0, 623.5294117647059], [146.0, 706.4516129032257], [147.0, 746.6734693877551], [148.0, 730.488235294118], [149.0, 696.8125000000001], [150.0, 703.9148936170213], [151.0, 758.7653061224489], [152.0, 710.6585365853659], [153.0, 722.1833333333334], [154.0, 734.6190476190477], [155.0, 819.7570093457942], [156.0, 781.7828947368423], [157.0, 726.7938144329896], [158.0, 815.6944444444443], [159.0, 773.5840707964602], [160.0, 816.6909090909091], [161.0, 795.5116279069769], [162.0, 808.5454545454544], [163.0, 780.8653846153848], [164.0, 760.6829268292684], [165.0, 752.7594936708862], [166.0, 782.471264367816], [167.0, 820.051546391752], [168.0, 794.6792452830191], [169.0, 824.4467005076153], [170.0, 850.9400000000004], [171.0, 783.5833333333333], [172.0, 839.5444444444445], [173.0, 840.3161764705884], [174.0, 850.6756756756756], [175.0, 848.6959247648907], [176.0, 858.5294117647056], [177.0, 829.3473684210526], [178.0, 843.9600000000003], [179.0, 853.1060606060604], [180.0, 869.8621118012417], [181.0, 885.7129186602868], [182.0, 900.2916666666667], [183.0, 838.0370370370371], [184.0, 910.2986577181214], [185.0, 889.0272277227724], [186.0, 876.7064579256358], [187.0, 903.3753026634384], [188.0, 887.1578947368424], [189.0, 894.6303387334308], [190.0, 943.7878787878791], [191.0, 892.2071005917162], [192.0, 1061.4000000000003], [193.0, 889.3333333333333], [194.0, 1004.8757763975154], [195.0, 1048.9999999999998], [196.0, 935.0716253443527], [197.0, 900.2475247524754], [198.0, 960.5749999999998], [199.0, 892.9076086956519], [200.0, 910.6310369467427], [1.0, 7.0]], "isOverall": false, "label": "POST employee", "isController": false}, {"data": [[179.7031500000004, 832.8335999999985]], "isOverall": false, "label": "POST employee-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 200.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 44344.15, "minX": 1.73470926E12, "maxY": 372278.25, "series": [{"data": [[1.7347098E12, 306833.9], [1.73470944E12, 359312.5], [1.7347095E12, 332986.95], [1.73470932E12, 372278.25], [1.73470962E12, 332843.4], [1.73470938E12, 370622.56666666665], [1.73470974E12, 325557.05], [1.73470926E12, 247094.46666666667], [1.73470968E12, 329908.23333333334], [1.73470956E12, 339445.1]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.7347098E12, 52947.76666666667], [1.73470944E12, 63086.083333333336], [1.7347095E12, 58492.61666666667], [1.73470932E12, 65727.48333333334], [1.73470962E12, 58392.566666666666], [1.73470938E12, 65018.75], [1.73470974E12, 57041.88333333333], [1.73470926E12, 44344.15], [1.73470968E12, 57874.46666666667], [1.73470956E12, 59592.13333333333]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7347098E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 6.3072169499006865, "minX": 1.73470926E12, "maxY": 1077.7063511830622, "series": [{"data": [[1.7347098E12, 779.7742281879202], [1.73470944E12, 997.3707294552155], [1.7347095E12, 1075.0428713858369], [1.73470932E12, 938.0849687778768], [1.73470962E12, 1077.7063511830622], [1.73470938E12, 967.6074703645714], [1.73470974E12, 982.8301934826877], [1.73470926E12, 376.33603512326954], [1.73470968E12, 1033.876350841919], [1.73470956E12, 1059.085267529931]], "isOverall": false, "label": "GET All employees", "isController": false}, {"data": [[1.7347098E12, 12.960089938167508], [1.73470944E12, 6.383887349953831], [1.7347095E12, 7.146347544253302], [1.73470932E12, 6.3072169499006865], [1.73470962E12, 14.047381546134666], [1.73470938E12, 6.496422182468688], [1.73470974E12, 7.1595499872155335], [1.73470926E12, 6.627047863796998], [1.73470968E12, 7.367346938775515], [1.73470956E12, 9.173222575128287]], "isOverall": false, "label": "GET thread name", "isController": false}, {"data": [[1.7347098E12, 638.3569868995623], [1.73470944E12, 872.6052145823735], [1.7347095E12, 951.7060288988538], [1.73470932E12, 817.3203559510571], [1.73470962E12, 932.1231576317765], [1.73470938E12, 840.6175548589359], [1.73470974E12, 840.3378343949037], [1.73470926E12, 271.0638861304206], [1.73470968E12, 886.1338859583025], [1.73470956E12, 920.2038076641445]], "isOverall": false, "label": "GET employee by id", "isController": false}, {"data": [[1.7347098E12, 653.3494608791821], [1.73470944E12, 887.4943431078282], [1.7347095E12, 957.512928891098], [1.73470932E12, 836.7698254914937], [1.73470962E12, 962.6049875311718], [1.73470938E12, 868.0365634813825], [1.73470974E12, 861.7821529020705], [1.73470926E12, 288.33518276762396], [1.73470968E12, 913.9864014102254], [1.73470956E12, 942.5739789679628]], "isOverall": false, "label": "POST employee", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7347098E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 6.301258000441416, "minX": 1.73470926E12, "maxY": 1077.3068493150697, "series": [{"data": [[1.7347098E12, 779.5189261744958], [1.73470944E12, 997.1117266851329], [1.7347095E12, 1074.7799102691913], [1.73470932E12, 937.8394290811779], [1.73470962E12, 1077.3068493150697], [1.73470938E12, 967.2543055244901], [1.73470974E12, 982.5476069246423], [1.73470926E12, 376.10604525498155], [1.73470968E12, 1033.629052525762], [1.73470956E12, 1058.8497434644462]], "isOverall": false, "label": "GET All employees", "isController": false}, {"data": [[1.7347098E12, 12.95418774592467], [1.73470944E12, 6.381348107109859], [1.7347095E12, 7.142109199700827], [1.73470932E12, 6.301258000441416], [1.73470962E12, 14.043142144638374], [1.73470938E12, 6.49485688729874], [1.73470974E12, 7.154691894656078], [1.73470926E12, 6.616447157083204], [1.73470968E12, 7.363315696649035], [1.73470956E12, 9.169069142438305]], "isOverall": false, "label": "GET thread name", "isController": false}, {"data": [[1.7347098E12, 638.2431768558943], [1.73470944E12, 872.4995385325349], [1.7347095E12, 951.589436970603], [1.73470932E12, 817.2153503893232], [1.73470962E12, 931.9867599300514], [1.73470938E12, 840.4099865651584], [1.73470974E12, 840.2249681528658], [1.73470926E12, 270.96193313472355], [1.73470968E12, 885.9964832956547], [1.73470956E12, 920.0800585794494]], "isOverall": false, "label": "GET employee by id", "isController": false}, {"data": [[1.7347098E12, 653.2184130494867], [1.73470944E12, 887.3622719926119], [1.7347095E12, 957.3935852809535], [1.73470932E12, 836.6529710625158], [1.73470962E12, 962.484538653365], [1.73470938E12, 867.8721399730819], [1.73470974E12, 861.6453592431604], [1.73470926E12, 288.2020234986951], [1.73470968E12, 913.8572148073532], [1.73470956E12, 942.4074345805822]], "isOverall": false, "label": "POST employee", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7347098E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.73470926E12, "maxY": 0.5477031802120141, "series": [{"data": [[1.7347098E12, 0.148993288590604], [1.73470944E12, 0.06463527239150514], [1.7347095E12, 0.0730309072781656], [1.73470932E12, 0.035236396074933105], [1.73470962E12, 0.2400996264009963], [1.73470938E12, 0.07358532766718881], [1.73470974E12, 0.08324847250509153], [1.73470926E12, 0.0], [1.73470968E12, 0.18145262628801218], [1.73470956E12, 0.0933300757390669]], "isOverall": false, "label": "GET All employees", "isController": false}, {"data": [[1.7347098E12, 0.3760539629005057], [1.73470944E12, 0.12303785780240059], [1.7347095E12, 0.10969832959361778], [1.73470932E12, 0.2237916574707569], [1.73470962E12, 0.14488778054862833], [1.73470938E12, 0.1077817531305906], [1.73470974E12, 0.09230375862950665], [1.73470926E12, 0.5477031802120141], [1.73470968E12, 0.11211892164273125], [1.73470956E12, 0.15831908135841619]], "isOverall": false, "label": "GET thread name", "isController": false}, {"data": [[1.7347098E12, 0.24727074235807847], [1.73470944E12, 0.06829718504845417], [1.7347095E12, 0.10014947683109111], [1.73470932E12, 0.01067853170189099], [1.73470962E12, 0.1811141643767177], [1.73470938E12, 0.08463949843260211], [1.73470974E12, 0.11439490445859875], [1.73470926E12, 0.0], [1.73470968E12, 0.09821652851042456], [1.73470956E12, 0.09763241396143506]], "isOverall": false, "label": "GET employee by id", "isController": false}, {"data": [[1.7347098E12, 0.0], [1.73470944E12, 0.0], [1.7347095E12, 0.002237692690203888], [1.73470932E12, 0.0], [1.73470962E12, 0.0022443890274314233], [1.73470938E12, 0.0017945266935845661], [1.73470974E12, 0.0015341344924571713], [1.73470926E12, 0.0], [1.73470968E12, 0.0], [1.73470956E12, 0.009293225727561772]], "isOverall": false, "label": "POST employee", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7347098E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.73470926E12, "maxY": 2776.0, "series": [{"data": [[1.7347098E12, 2141.0], [1.73470944E12, 2512.0], [1.7347095E12, 2371.0], [1.73470932E12, 2455.0], [1.73470962E12, 2740.0], [1.73470938E12, 2434.0], [1.73470974E12, 2118.0], [1.73470926E12, 1422.0], [1.73470968E12, 2776.0], [1.73470956E12, 2496.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.7347098E12, 1.0], [1.73470944E12, 1.0], [1.7347095E12, 1.0], [1.73470932E12, 1.0], [1.73470962E12, 1.0], [1.73470938E12, 1.0], [1.73470974E12, 1.0], [1.73470926E12, 1.0], [1.73470968E12, 1.0], [1.73470956E12, 1.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.7347098E12, 905.0], [1.73470944E12, 1032.0], [1.7347095E12, 1150.0], [1.73470932E12, 980.2000000000007], [1.73470962E12, 1137.0], [1.73470938E12, 1033.0], [1.73470974E12, 1021.0], [1.73470926E12, 604.0], [1.73470968E12, 1112.0], [1.73470956E12, 1102.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.7347098E12, 1103.0], [1.73470944E12, 1257.1000000000022], [1.7347095E12, 1391.3999999999996], [1.73470932E12, 1300.9599999999919], [1.73470962E12, 1388.2200000000012], [1.73470938E12, 1245.0], [1.73470974E12, 1258.7199999999993], [1.73470926E12, 782.7999999999993], [1.73470968E12, 1362.9799999999996], [1.73470956E12, 1482.2700000000004]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.7347098E12, 637.0], [1.73470944E12, 871.0], [1.7347095E12, 927.0], [1.73470932E12, 819.0], [1.73470962E12, 932.0], [1.73470938E12, 834.0], [1.73470974E12, 838.0], [1.73470926E12, 156.0], [1.73470968E12, 879.0], [1.73470956E12, 918.0]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.7347098E12, 969.75], [1.73470944E12, 1080.5], [1.7347095E12, 1212.0], [1.73470932E12, 1027.0], [1.73470962E12, 1202.0], [1.73470938E12, 1091.0], [1.73470974E12, 1075.0], [1.73470926E12, 670.0], [1.73470968E12, 1173.0], [1.73470956E12, 1158.0]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7347098E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 13.0, "minX": 32.0, "maxY": 1238.0, "series": [{"data": [[32.0, 20.0], [67.0, 97.0], [148.0, 55.5], [180.0, 1056.0], [192.0, 1122.5], [194.0, 993.5], [193.0, 828.0], [197.0, 291.0], [205.0, 1238.0], [208.0, 1000.5], [215.0, 837.0], [213.0, 792.0], [221.0, 1006.0], [217.0, 916.5], [223.0, 860.0], [220.0, 787.5], [219.0, 785.0], [227.0, 835.5], [230.0, 1032.0], [226.0, 1022.5], [225.0, 871.0], [229.0, 931.0], [231.0, 486.0], [224.0, 152.5], [235.0, 861.0], [238.0, 801.5], [232.0, 661.0], [239.0, 846.0], [237.0, 370.0], [233.0, 905.0], [234.0, 794.0], [236.0, 906.5], [243.0, 674.5], [244.0, 1021.5], [241.0, 896.0], [245.0, 987.5], [246.0, 796.0], [242.0, 998.0], [247.0, 1014.0], [240.0, 844.5], [251.0, 806.0], [254.0, 890.0], [250.0, 913.0], [255.0, 926.5], [252.0, 887.0], [249.0, 904.0], [253.0, 972.0], [248.0, 701.0], [268.0, 792.5], [257.0, 850.0], [259.0, 953.0], [258.0, 864.0], [262.0, 959.5], [263.0, 791.5], [256.0, 935.0], [267.0, 743.0], [266.0, 915.0], [265.0, 882.0], [260.0, 867.0], [271.0, 895.0], [261.0, 822.0], [269.0, 855.0], [270.0, 891.5], [264.0, 944.0], [286.0, 809.5], [276.0, 861.0], [277.0, 874.0], [278.0, 915.0], [282.0, 895.0], [274.0, 857.0], [285.0, 884.0], [275.0, 866.5], [284.0, 854.5], [283.0, 818.0], [287.0, 855.0], [279.0, 886.0], [272.0, 968.5], [273.0, 943.0], [281.0, 867.0], [280.0, 864.0], [300.0, 815.0], [293.0, 811.0], [292.0, 860.0], [302.0, 818.0], [303.0, 774.0], [291.0, 846.0], [294.0, 835.0], [288.0, 852.0], [289.0, 907.0], [295.0, 884.0], [290.0, 883.0], [299.0, 832.0], [298.0, 885.0], [296.0, 869.0], [297.0, 849.0], [301.0, 825.0], [316.0, 355.0], [305.0, 651.0], [313.0, 381.0], [309.0, 781.0], [310.0, 837.0], [307.0, 604.5], [306.0, 859.0], [314.0, 813.0], [315.0, 848.0], [304.0, 713.5], [311.0, 829.0], [318.0, 795.0], [317.0, 799.0], [312.0, 843.5], [319.0, 838.0], [323.0, 205.5], [320.0, 136.5], [327.0, 801.0], [329.0, 240.0], [328.0, 750.0], [335.0, 263.0], [326.0, 487.5], [324.0, 751.0], [325.0, 814.0], [321.0, 796.0], [322.0, 868.5], [333.0, 820.0], [330.0, 743.0], [341.0, 246.5], [348.0, 832.5], [337.0, 816.0], [344.0, 758.0], [339.0, 820.0], [384.0, 693.5], [401.0, 67.0], [502.0, 13.0], [506.0, 36.0], [496.0, 57.0], [543.0, 21.0], [513.0, 42.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 543.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 13.0, "minX": 32.0, "maxY": 1238.0, "series": [{"data": [[32.0, 20.0], [67.0, 97.0], [148.0, 55.5], [180.0, 1056.0], [192.0, 1122.5], [194.0, 993.5], [193.0, 827.0], [197.0, 291.0], [205.0, 1238.0], [208.0, 1000.5], [215.0, 837.0], [213.0, 792.0], [221.0, 1004.0], [217.0, 916.5], [223.0, 860.0], [220.0, 787.0], [219.0, 785.0], [227.0, 834.5], [230.0, 1031.5], [226.0, 1022.5], [225.0, 871.0], [229.0, 931.0], [231.0, 486.0], [224.0, 152.5], [235.0, 861.0], [238.0, 801.5], [232.0, 661.0], [239.0, 846.0], [237.0, 370.0], [233.0, 905.0], [234.0, 793.5], [236.0, 906.0], [243.0, 674.0], [244.0, 1021.5], [241.0, 896.0], [245.0, 987.5], [246.0, 795.5], [242.0, 998.0], [247.0, 1014.0], [240.0, 844.5], [251.0, 806.0], [254.0, 889.5], [250.0, 913.0], [255.0, 925.5], [252.0, 886.0], [249.0, 904.0], [253.0, 971.0], [248.0, 700.0], [268.0, 792.0], [257.0, 850.0], [259.0, 953.0], [258.0, 864.0], [262.0, 959.5], [263.0, 791.5], [256.0, 935.0], [267.0, 743.0], [266.0, 915.0], [265.0, 882.0], [260.0, 867.0], [271.0, 895.0], [261.0, 822.0], [269.0, 855.0], [270.0, 891.0], [264.0, 944.0], [286.0, 809.5], [276.0, 861.0], [277.0, 874.0], [278.0, 915.0], [282.0, 895.0], [274.0, 857.0], [285.0, 884.0], [275.0, 866.0], [284.0, 854.5], [283.0, 818.0], [287.0, 854.0], [279.0, 886.0], [272.0, 968.5], [273.0, 943.0], [281.0, 867.0], [280.0, 864.0], [300.0, 815.0], [293.0, 811.0], [292.0, 860.0], [302.0, 818.0], [303.0, 774.0], [291.0, 846.0], [294.0, 835.0], [288.0, 852.0], [289.0, 906.0], [295.0, 884.0], [290.0, 883.0], [299.0, 832.0], [298.0, 885.0], [296.0, 869.0], [297.0, 849.0], [301.0, 825.0], [316.0, 355.0], [305.0, 651.0], [313.0, 381.0], [309.0, 781.0], [310.0, 837.0], [307.0, 604.5], [306.0, 859.0], [314.0, 813.0], [315.0, 848.0], [304.0, 712.5], [311.0, 829.0], [318.0, 794.5], [317.0, 798.0], [312.0, 843.5], [319.0, 838.0], [323.0, 205.5], [320.0, 136.5], [327.0, 800.5], [329.0, 240.0], [328.0, 750.0], [335.0, 262.0], [326.0, 487.5], [324.0, 751.0], [325.0, 814.0], [321.0, 796.0], [322.0, 868.5], [333.0, 820.0], [330.0, 743.0], [341.0, 246.0], [348.0, 832.5], [337.0, 816.0], [344.0, 758.0], [339.0, 820.0], [384.0, 692.5], [401.0, 67.0], [502.0, 13.0], [506.0, 36.0], [496.0, 57.0], [543.0, 21.0], [513.0, 42.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 543.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 205.16666666666666, "minX": 1.73470926E12, "maxY": 301.4, "series": [{"data": [[1.7347098E12, 239.96666666666667], [1.73470944E12, 288.81666666666666], [1.7347095E12, 267.65], [1.73470932E12, 301.4], [1.73470962E12, 267.2], [1.73470938E12, 297.81666666666666], [1.73470974E12, 260.95], [1.73470926E12, 205.16666666666666], [1.73470968E12, 264.8333333333333], [1.73470956E12, 272.8666666666667]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7347098E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 202.65, "minX": 1.73470926E12, "maxY": 300.6166666666667, "series": [{"data": [[1.7347098E12, 242.73333333333332], [1.73470944E12, 288.81666666666666], [1.7347095E12, 267.65], [1.73470932E12, 300.6166666666667], [1.73470962E12, 267.3], [1.73470938E12, 297.78333333333336], [1.73470974E12, 261.25], [1.73470926E12, 202.65], [1.73470968E12, 265.0], [1.73470956E12, 272.8666666666667]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7347098E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 49.35, "minX": 1.73470926E12, "maxY": 75.51666666666667, "series": [{"data": [[1.7347098E12, 59.3], [1.73470944E12, 72.2], [1.7347095E12, 66.85], [1.73470932E12, 75.51666666666667], [1.73470962E12, 66.83333333333333], [1.73470938E12, 74.53333333333333], [1.73470974E12, 65.18333333333334], [1.73470926E12, 51.88333333333333], [1.73470968E12, 66.15], [1.73470956E12, 68.21666666666667]], "isOverall": false, "label": "GET thread name-success", "isController": false}, {"data": [[1.7347098E12, 62.083333333333336], [1.73470944E12, 72.2], [1.7347095E12, 66.86666666666666], [1.73470932E12, 74.73333333333333], [1.73470962E12, 66.91666666666667], [1.73470938E12, 74.51666666666667], [1.73470974E12, 65.46666666666667], [1.73470926E12, 49.35], [1.73470968E12, 66.31666666666666], [1.73470956E12, 68.21666666666667]], "isOverall": false, "label": "GET All employees-success", "isController": false}, {"data": [[1.7347098E12, 60.28333333333333], [1.73470944E12, 72.18333333333334], [1.7347095E12, 67.03333333333333], [1.73470932E12, 75.45], [1.73470962E12, 66.83333333333333], [1.73470938E12, 74.3], [1.73470974E12, 65.18333333333334], [1.73470926E12, 51.06666666666667], [1.73470968E12, 66.18333333333334], [1.73470956E12, 68.15]], "isOverall": false, "label": "POST employee-success", "isController": false}, {"data": [[1.7347098E12, 61.06666666666667], [1.73470944E12, 72.23333333333333], [1.7347095E12, 66.9], [1.73470932E12, 74.91666666666667], [1.73470962E12, 66.71666666666667], [1.73470938E12, 74.43333333333334], [1.73470974E12, 65.41666666666667], [1.73470926E12, 50.35], [1.73470968E12, 66.35], [1.73470956E12, 68.28333333333333]], "isOverall": false, "label": "GET employee by id-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7347098E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 202.65, "minX": 1.73470926E12, "maxY": 300.6166666666667, "series": [{"data": [[1.7347098E12, 242.73333333333332], [1.73470944E12, 288.81666666666666], [1.7347095E12, 267.65], [1.73470932E12, 300.6166666666667], [1.73470962E12, 267.3], [1.73470938E12, 297.78333333333336], [1.73470974E12, 261.25], [1.73470926E12, 202.65], [1.73470968E12, 265.0], [1.73470956E12, 272.8666666666667]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7347098E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

