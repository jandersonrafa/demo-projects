/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 36142.0, "series": [{"data": [[0.0, 43.0], [0.1, 55.0], [0.2, 60.0], [0.3, 64.0], [0.4, 67.0], [0.5, 70.0], [0.6, 72.0], [0.7, 75.0], [0.8, 78.0], [0.9, 81.0], [1.0, 83.0], [1.1, 85.0], [1.2, 88.0], [1.3, 92.0], [1.4, 94.0], [1.5, 97.0], [1.6, 100.0], [1.7, 102.0], [1.8, 106.0], [1.9, 111.0], [2.0, 115.0], [2.1, 119.0], [2.2, 125.0], [2.3, 131.0], [2.4, 138.0], [2.5, 144.0], [2.6, 149.0], [2.7, 156.0], [2.8, 164.0], [2.9, 171.0], [3.0, 180.0], [3.1, 190.0], [3.2, 198.0], [3.3, 206.0], [3.4, 214.0], [3.5, 221.0], [3.6, 228.0], [3.7, 236.0], [3.8, 242.0], [3.9, 247.0], [4.0, 254.0], [4.1, 259.0], [4.2, 264.0], [4.3, 271.0], [4.4, 276.0], [4.5, 281.0], [4.6, 286.0], [4.7, 292.0], [4.8, 300.0], [4.9, 306.0], [5.0, 313.0], [5.1, 320.0], [5.2, 326.0], [5.3, 331.0], [5.4, 336.0], [5.5, 340.0], [5.6, 347.0], [5.7, 352.0], [5.8, 358.0], [5.9, 361.0], [6.0, 367.0], [6.1, 371.0], [6.2, 376.0], [6.3, 380.0], [6.4, 384.0], [6.5, 389.0], [6.6, 394.0], [6.7, 397.0], [6.8, 401.0], [6.9, 404.0], [7.0, 409.0], [7.1, 414.0], [7.2, 419.0], [7.3, 423.0], [7.4, 427.0], [7.5, 431.0], [7.6, 435.0], [7.7, 439.0], [7.8, 443.0], [7.9, 447.0], [8.0, 453.0], [8.1, 457.0], [8.2, 461.0], [8.3, 465.0], [8.4, 469.0], [8.5, 472.0], [8.6, 476.0], [8.7, 478.0], [8.8, 482.0], [8.9, 485.0], [9.0, 488.0], [9.1, 492.0], [9.2, 496.0], [9.3, 500.0], [9.4, 503.0], [9.5, 506.0], [9.6, 510.0], [9.7, 512.0], [9.8, 515.0], [9.9, 518.0], [10.0, 521.0], [10.1, 524.0], [10.2, 526.0], [10.3, 528.0], [10.4, 530.0], [10.5, 532.0], [10.6, 535.0], [10.7, 538.0], [10.8, 539.0], [10.9, 542.0], [11.0, 544.0], [11.1, 545.0], [11.2, 547.0], [11.3, 549.0], [11.4, 552.0], [11.5, 554.0], [11.6, 556.0], [11.7, 557.0], [11.8, 559.0], [11.9, 561.0], [12.0, 563.0], [12.1, 564.0], [12.2, 566.0], [12.3, 568.0], [12.4, 570.0], [12.5, 571.0], [12.6, 572.0], [12.7, 574.0], [12.8, 576.0], [12.9, 578.0], [13.0, 579.0], [13.1, 580.0], [13.2, 582.0], [13.3, 583.0], [13.4, 584.0], [13.5, 586.0], [13.6, 588.0], [13.7, 588.0], [13.8, 590.0], [13.9, 592.0], [14.0, 594.0], [14.1, 595.0], [14.2, 596.0], [14.3, 598.0], [14.4, 599.0], [14.5, 601.0], [14.6, 603.0], [14.7, 604.0], [14.8, 606.0], [14.9, 607.0], [15.0, 608.0], [15.1, 609.0], [15.2, 610.0], [15.3, 611.0], [15.4, 613.0], [15.5, 614.0], [15.6, 615.0], [15.7, 616.0], [15.8, 617.0], [15.9, 618.0], [16.0, 619.0], [16.1, 620.0], [16.2, 621.0], [16.3, 622.0], [16.4, 623.0], [16.5, 624.0], [16.6, 625.0], [16.7, 626.0], [16.8, 627.0], [16.9, 628.0], [17.0, 629.0], [17.1, 630.0], [17.2, 631.0], [17.3, 632.0], [17.4, 633.0], [17.5, 634.0], [17.6, 635.0], [17.7, 636.0], [17.8, 637.0], [17.9, 638.0], [18.0, 639.0], [18.1, 640.0], [18.2, 640.0], [18.3, 641.0], [18.4, 642.0], [18.5, 642.0], [18.6, 643.0], [18.7, 644.0], [18.8, 645.0], [18.9, 646.0], [19.0, 646.0], [19.1, 647.0], [19.2, 648.0], [19.3, 649.0], [19.4, 650.0], [19.5, 650.0], [19.6, 651.0], [19.7, 652.0], [19.8, 652.0], [19.9, 653.0], [20.0, 654.0], [20.1, 655.0], [20.2, 655.0], [20.3, 656.0], [20.4, 656.0], [20.5, 657.0], [20.6, 658.0], [20.7, 658.0], [20.8, 659.0], [20.9, 660.0], [21.0, 660.0], [21.1, 661.0], [21.2, 662.0], [21.3, 662.0], [21.4, 663.0], [21.5, 663.0], [21.6, 664.0], [21.7, 665.0], [21.8, 665.0], [21.9, 666.0], [22.0, 666.0], [22.1, 667.0], [22.2, 668.0], [22.3, 668.0], [22.4, 668.0], [22.5, 669.0], [22.6, 670.0], [22.7, 670.0], [22.8, 671.0], [22.9, 671.0], [23.0, 672.0], [23.1, 673.0], [23.2, 673.0], [23.3, 674.0], [23.4, 674.0], [23.5, 675.0], [23.6, 675.0], [23.7, 676.0], [23.8, 676.0], [23.9, 677.0], [24.0, 677.0], [24.1, 678.0], [24.2, 678.0], [24.3, 679.0], [24.4, 679.0], [24.5, 680.0], [24.6, 680.0], [24.7, 681.0], [24.8, 681.0], [24.9, 682.0], [25.0, 682.0], [25.1, 683.0], [25.2, 683.0], [25.3, 684.0], [25.4, 684.0], [25.5, 684.0], [25.6, 685.0], [25.7, 685.0], [25.8, 686.0], [25.9, 686.0], [26.0, 687.0], [26.1, 687.0], [26.2, 687.0], [26.3, 688.0], [26.4, 688.0], [26.5, 689.0], [26.6, 689.0], [26.7, 690.0], [26.8, 690.0], [26.9, 690.0], [27.0, 691.0], [27.1, 691.0], [27.2, 692.0], [27.3, 692.0], [27.4, 693.0], [27.5, 693.0], [27.6, 693.0], [27.7, 694.0], [27.8, 694.0], [27.9, 695.0], [28.0, 695.0], [28.1, 695.0], [28.2, 696.0], [28.3, 696.0], [28.4, 696.0], [28.5, 697.0], [28.6, 697.0], [28.7, 698.0], [28.8, 698.0], [28.9, 698.0], [29.0, 699.0], [29.1, 699.0], [29.2, 700.0], [29.3, 700.0], [29.4, 700.0], [29.5, 701.0], [29.6, 701.0], [29.7, 701.0], [29.8, 702.0], [29.9, 702.0], [30.0, 703.0], [30.1, 703.0], [30.2, 703.0], [30.3, 704.0], [30.4, 704.0], [30.5, 704.0], [30.6, 705.0], [30.7, 705.0], [30.8, 705.0], [30.9, 706.0], [31.0, 706.0], [31.1, 707.0], [31.2, 707.0], [31.3, 707.0], [31.4, 708.0], [31.5, 708.0], [31.6, 708.0], [31.7, 709.0], [31.8, 709.0], [31.9, 709.0], [32.0, 710.0], [32.1, 710.0], [32.2, 710.0], [32.3, 711.0], [32.4, 711.0], [32.5, 712.0], [32.6, 712.0], [32.7, 712.0], [32.8, 713.0], [32.9, 713.0], [33.0, 713.0], [33.1, 714.0], [33.2, 714.0], [33.3, 715.0], [33.4, 715.0], [33.5, 715.0], [33.6, 715.0], [33.7, 716.0], [33.8, 716.0], [33.9, 716.0], [34.0, 717.0], [34.1, 717.0], [34.2, 717.0], [34.3, 717.0], [34.4, 718.0], [34.5, 718.0], [34.6, 718.0], [34.7, 719.0], [34.8, 719.0], [34.9, 719.0], [35.0, 720.0], [35.1, 720.0], [35.2, 720.0], [35.3, 721.0], [35.4, 721.0], [35.5, 721.0], [35.6, 722.0], [35.7, 722.0], [35.8, 722.0], [35.9, 722.0], [36.0, 723.0], [36.1, 723.0], [36.2, 724.0], [36.3, 724.0], [36.4, 724.0], [36.5, 725.0], [36.6, 725.0], [36.7, 725.0], [36.8, 726.0], [36.9, 726.0], [37.0, 726.0], [37.1, 726.0], [37.2, 727.0], [37.3, 727.0], [37.4, 728.0], [37.5, 728.0], [37.6, 728.0], [37.7, 729.0], [37.8, 729.0], [37.9, 729.0], [38.0, 729.0], [38.1, 730.0], [38.2, 730.0], [38.3, 730.0], [38.4, 731.0], [38.5, 731.0], [38.6, 731.0], [38.7, 731.0], [38.8, 732.0], [38.9, 732.0], [39.0, 732.0], [39.1, 732.0], [39.2, 733.0], [39.3, 733.0], [39.4, 733.0], [39.5, 734.0], [39.6, 734.0], [39.7, 734.0], [39.8, 734.0], [39.9, 735.0], [40.0, 735.0], [40.1, 735.0], [40.2, 735.0], [40.3, 736.0], [40.4, 736.0], [40.5, 736.0], [40.6, 736.0], [40.7, 737.0], [40.8, 737.0], [40.9, 737.0], [41.0, 738.0], [41.1, 738.0], [41.2, 738.0], [41.3, 739.0], [41.4, 739.0], [41.5, 739.0], [41.6, 740.0], [41.7, 740.0], [41.8, 740.0], [41.9, 740.0], [42.0, 741.0], [42.1, 741.0], [42.2, 741.0], [42.3, 741.0], [42.4, 742.0], [42.5, 742.0], [42.6, 742.0], [42.7, 743.0], [42.8, 743.0], [42.9, 743.0], [43.0, 743.0], [43.1, 744.0], [43.2, 744.0], [43.3, 744.0], [43.4, 744.0], [43.5, 745.0], [43.6, 745.0], [43.7, 745.0], [43.8, 745.0], [43.9, 746.0], [44.0, 746.0], [44.1, 746.0], [44.2, 747.0], [44.3, 747.0], [44.4, 747.0], [44.5, 747.0], [44.6, 748.0], [44.7, 748.0], [44.8, 748.0], [44.9, 748.0], [45.0, 749.0], [45.1, 749.0], [45.2, 749.0], [45.3, 749.0], [45.4, 750.0], [45.5, 750.0], [45.6, 750.0], [45.7, 750.0], [45.8, 751.0], [45.9, 751.0], [46.0, 751.0], [46.1, 751.0], [46.2, 752.0], [46.3, 752.0], [46.4, 752.0], [46.5, 752.0], [46.6, 753.0], [46.7, 753.0], [46.8, 753.0], [46.9, 753.0], [47.0, 754.0], [47.1, 754.0], [47.2, 754.0], [47.3, 754.0], [47.4, 755.0], [47.5, 755.0], [47.6, 755.0], [47.7, 755.0], [47.8, 756.0], [47.9, 756.0], [48.0, 756.0], [48.1, 756.0], [48.2, 757.0], [48.3, 757.0], [48.4, 757.0], [48.5, 757.0], [48.6, 758.0], [48.7, 758.0], [48.8, 758.0], [48.9, 758.0], [49.0, 759.0], [49.1, 759.0], [49.2, 759.0], [49.3, 759.0], [49.4, 760.0], [49.5, 760.0], [49.6, 760.0], [49.7, 760.0], [49.8, 760.0], [49.9, 761.0], [50.0, 761.0], [50.1, 761.0], [50.2, 761.0], [50.3, 762.0], [50.4, 762.0], [50.5, 762.0], [50.6, 762.0], [50.7, 763.0], [50.8, 763.0], [50.9, 763.0], [51.0, 763.0], [51.1, 764.0], [51.2, 764.0], [51.3, 764.0], [51.4, 764.0], [51.5, 765.0], [51.6, 765.0], [51.7, 765.0], [51.8, 765.0], [51.9, 766.0], [52.0, 766.0], [52.1, 766.0], [52.2, 766.0], [52.3, 767.0], [52.4, 767.0], [52.5, 767.0], [52.6, 767.0], [52.7, 768.0], [52.8, 768.0], [52.9, 768.0], [53.0, 768.0], [53.1, 769.0], [53.2, 769.0], [53.3, 769.0], [53.4, 769.0], [53.5, 770.0], [53.6, 770.0], [53.7, 770.0], [53.8, 770.0], [53.9, 770.0], [54.0, 771.0], [54.1, 771.0], [54.2, 771.0], [54.3, 771.0], [54.4, 772.0], [54.5, 772.0], [54.6, 772.0], [54.7, 772.0], [54.8, 773.0], [54.9, 773.0], [55.0, 773.0], [55.1, 773.0], [55.2, 774.0], [55.3, 774.0], [55.4, 774.0], [55.5, 774.0], [55.6, 775.0], [55.7, 775.0], [55.8, 775.0], [55.9, 775.0], [56.0, 775.0], [56.1, 776.0], [56.2, 776.0], [56.3, 776.0], [56.4, 776.0], [56.5, 777.0], [56.6, 777.0], [56.7, 777.0], [56.8, 777.0], [56.9, 777.0], [57.0, 778.0], [57.1, 778.0], [57.2, 778.0], [57.3, 778.0], [57.4, 778.0], [57.5, 779.0], [57.6, 779.0], [57.7, 779.0], [57.8, 779.0], [57.9, 780.0], [58.0, 780.0], [58.1, 780.0], [58.2, 780.0], [58.3, 781.0], [58.4, 781.0], [58.5, 781.0], [58.6, 781.0], [58.7, 781.0], [58.8, 782.0], [58.9, 782.0], [59.0, 782.0], [59.1, 782.0], [59.2, 783.0], [59.3, 783.0], [59.4, 783.0], [59.5, 783.0], [59.6, 784.0], [59.7, 784.0], [59.8, 784.0], [59.9, 784.0], [60.0, 785.0], [60.1, 785.0], [60.2, 785.0], [60.3, 785.0], [60.4, 786.0], [60.5, 786.0], [60.6, 786.0], [60.7, 786.0], [60.8, 786.0], [60.9, 787.0], [61.0, 787.0], [61.1, 787.0], [61.2, 787.0], [61.3, 788.0], [61.4, 788.0], [61.5, 788.0], [61.6, 788.0], [61.7, 789.0], [61.8, 789.0], [61.9, 789.0], [62.0, 789.0], [62.1, 790.0], [62.2, 790.0], [62.3, 790.0], [62.4, 790.0], [62.5, 791.0], [62.6, 791.0], [62.7, 791.0], [62.8, 791.0], [62.9, 792.0], [63.0, 792.0], [63.1, 792.0], [63.2, 792.0], [63.3, 793.0], [63.4, 793.0], [63.5, 793.0], [63.6, 793.0], [63.7, 794.0], [63.8, 794.0], [63.9, 794.0], [64.0, 794.0], [64.1, 795.0], [64.2, 795.0], [64.3, 795.0], [64.4, 795.0], [64.5, 796.0], [64.6, 796.0], [64.7, 796.0], [64.8, 796.0], [64.9, 797.0], [65.0, 797.0], [65.1, 797.0], [65.2, 797.0], [65.3, 798.0], [65.4, 798.0], [65.5, 798.0], [65.6, 798.0], [65.7, 799.0], [65.8, 799.0], [65.9, 799.0], [66.0, 799.0], [66.1, 800.0], [66.2, 800.0], [66.3, 800.0], [66.4, 800.0], [66.5, 801.0], [66.6, 801.0], [66.7, 801.0], [66.8, 801.0], [66.9, 802.0], [67.0, 802.0], [67.1, 802.0], [67.2, 802.0], [67.3, 802.0], [67.4, 803.0], [67.5, 803.0], [67.6, 803.0], [67.7, 803.0], [67.8, 804.0], [67.9, 804.0], [68.0, 804.0], [68.1, 804.0], [68.2, 805.0], [68.3, 805.0], [68.4, 805.0], [68.5, 806.0], [68.6, 806.0], [68.7, 806.0], [68.8, 806.0], [68.9, 806.0], [69.0, 807.0], [69.1, 807.0], [69.2, 807.0], [69.3, 808.0], [69.4, 808.0], [69.5, 808.0], [69.6, 808.0], [69.7, 809.0], [69.8, 809.0], [69.9, 809.0], [70.0, 809.0], [70.1, 810.0], [70.2, 810.0], [70.3, 810.0], [70.4, 810.0], [70.5, 811.0], [70.6, 811.0], [70.7, 811.0], [70.8, 811.0], [70.9, 812.0], [71.0, 812.0], [71.1, 812.0], [71.2, 813.0], [71.3, 813.0], [71.4, 813.0], [71.5, 813.0], [71.6, 814.0], [71.7, 814.0], [71.8, 814.0], [71.9, 814.0], [72.0, 815.0], [72.1, 815.0], [72.2, 815.0], [72.3, 816.0], [72.4, 816.0], [72.5, 816.0], [72.6, 816.0], [72.7, 817.0], [72.8, 817.0], [72.9, 817.0], [73.0, 818.0], [73.1, 818.0], [73.2, 818.0], [73.3, 819.0], [73.4, 819.0], [73.5, 819.0], [73.6, 819.0], [73.7, 820.0], [73.8, 820.0], [73.9, 820.0], [74.0, 821.0], [74.1, 821.0], [74.2, 821.0], [74.3, 821.0], [74.4, 822.0], [74.5, 822.0], [74.6, 822.0], [74.7, 823.0], [74.8, 823.0], [74.9, 823.0], [75.0, 824.0], [75.1, 824.0], [75.2, 824.0], [75.3, 824.0], [75.4, 825.0], [75.5, 825.0], [75.6, 825.0], [75.7, 826.0], [75.8, 826.0], [75.9, 826.0], [76.0, 827.0], [76.1, 827.0], [76.2, 827.0], [76.3, 828.0], [76.4, 828.0], [76.5, 828.0], [76.6, 828.0], [76.7, 829.0], [76.8, 829.0], [76.9, 830.0], [77.0, 830.0], [77.1, 830.0], [77.2, 831.0], [77.3, 831.0], [77.4, 831.0], [77.5, 832.0], [77.6, 832.0], [77.7, 832.0], [77.8, 833.0], [77.9, 833.0], [78.0, 833.0], [78.1, 834.0], [78.2, 834.0], [78.3, 834.0], [78.4, 834.0], [78.5, 835.0], [78.6, 835.0], [78.7, 835.0], [78.8, 836.0], [78.9, 836.0], [79.0, 837.0], [79.1, 837.0], [79.2, 837.0], [79.3, 838.0], [79.4, 838.0], [79.5, 838.0], [79.6, 839.0], [79.7, 839.0], [79.8, 840.0], [79.9, 840.0], [80.0, 840.0], [80.1, 841.0], [80.2, 841.0], [80.3, 841.0], [80.4, 842.0], [80.5, 842.0], [80.6, 842.0], [80.7, 843.0], [80.8, 843.0], [80.9, 844.0], [81.0, 844.0], [81.1, 844.0], [81.2, 845.0], [81.3, 845.0], [81.4, 845.0], [81.5, 846.0], [81.6, 846.0], [81.7, 847.0], [81.8, 847.0], [81.9, 847.0], [82.0, 848.0], [82.1, 848.0], [82.2, 849.0], [82.3, 849.0], [82.4, 850.0], [82.5, 850.0], [82.6, 850.0], [82.7, 851.0], [82.8, 851.0], [82.9, 851.0], [83.0, 852.0], [83.1, 852.0], [83.2, 853.0], [83.3, 853.0], [83.4, 853.0], [83.5, 854.0], [83.6, 854.0], [83.7, 855.0], [83.8, 855.0], [83.9, 856.0], [84.0, 856.0], [84.1, 857.0], [84.2, 857.0], [84.3, 858.0], [84.4, 858.0], [84.5, 859.0], [84.6, 859.0], [84.7, 859.0], [84.8, 860.0], [84.9, 860.0], [85.0, 861.0], [85.1, 861.0], [85.2, 862.0], [85.3, 863.0], [85.4, 863.0], [85.5, 864.0], [85.6, 865.0], [85.7, 865.0], [85.8, 865.0], [85.9, 866.0], [86.0, 866.0], [86.1, 867.0], [86.2, 867.0], [86.3, 868.0], [86.4, 868.0], [86.5, 869.0], [86.6, 870.0], [86.7, 870.0], [86.8, 871.0], [86.9, 871.0], [87.0, 872.0], [87.1, 872.0], [87.2, 873.0], [87.3, 873.0], [87.4, 874.0], [87.5, 875.0], [87.6, 875.0], [87.7, 876.0], [87.8, 877.0], [87.9, 877.0], [88.0, 878.0], [88.1, 878.0], [88.2, 879.0], [88.3, 879.0], [88.4, 880.0], [88.5, 881.0], [88.6, 881.0], [88.7, 882.0], [88.8, 883.0], [88.9, 883.0], [89.0, 884.0], [89.1, 885.0], [89.2, 885.0], [89.3, 886.0], [89.4, 887.0], [89.5, 887.0], [89.6, 888.0], [89.7, 889.0], [89.8, 890.0], [89.9, 890.0], [90.0, 891.0], [90.1, 892.0], [90.2, 892.0], [90.3, 893.0], [90.4, 894.0], [90.5, 895.0], [90.6, 896.0], [90.7, 897.0], [90.8, 898.0], [90.9, 898.0], [91.0, 899.0], [91.1, 900.0], [91.2, 901.0], [91.3, 902.0], [91.4, 902.0], [91.5, 903.0], [91.6, 904.0], [91.7, 905.0], [91.8, 906.0], [91.9, 907.0], [92.0, 908.0], [92.1, 909.0], [92.2, 910.0], [92.3, 911.0], [92.4, 912.0], [92.5, 913.0], [92.6, 914.0], [92.7, 915.0], [92.8, 916.0], [92.9, 918.0], [93.0, 919.0], [93.1, 920.0], [93.2, 921.0], [93.3, 923.0], [93.4, 924.0], [93.5, 925.0], [93.6, 926.0], [93.7, 927.0], [93.8, 929.0], [93.9, 931.0], [94.0, 932.0], [94.1, 933.0], [94.2, 935.0], [94.3, 936.0], [94.4, 937.0], [94.5, 940.0], [94.6, 941.0], [94.7, 943.0], [94.8, 945.0], [94.9, 946.0], [95.0, 948.0], [95.1, 950.0], [95.2, 952.0], [95.3, 953.0], [95.4, 956.0], [95.5, 958.0], [95.6, 961.0], [95.7, 963.0], [95.8, 966.0], [95.9, 969.0], [96.0, 971.0], [96.1, 974.0], [96.2, 977.0], [96.3, 980.0], [96.4, 983.0], [96.5, 987.0], [96.6, 990.0], [96.7, 994.0], [96.8, 999.0], [96.9, 1002.0], [97.0, 1007.0], [97.1, 1012.0], [97.2, 1018.0], [97.3, 1023.0], [97.4, 1029.0], [97.5, 1035.0], [97.6, 1042.0], [97.7, 1048.0], [97.8, 1061.0], [97.9, 1071.0], [98.0, 1086.0], [98.1, 1105.0], [98.2, 1126.0], [98.3, 1152.0], [98.4, 1169.0], [98.5, 1192.0], [98.6, 1209.0], [98.7, 1229.0], [98.8, 1259.0], [98.9, 1289.0], [99.0, 1323.0], [99.1, 1354.0], [99.2, 1387.0], [99.3, 1408.0], [99.4, 1430.0], [99.5, 1459.0], [99.6, 1484.0], [99.7, 1510.0], [99.8, 1543.0], [99.9, 1595.0]], "isOverall": false, "label": "GET All employees", "isController": false}, {"data": [[0.0, 1.0], [0.1, 1.0], [0.2, 2.0], [0.3, 2.0], [0.4, 2.0], [0.5, 2.0], [0.6, 2.0], [0.7, 2.0], [0.8, 2.0], [0.9, 2.0], [1.0, 2.0], [1.1, 2.0], [1.2, 2.0], [1.3, 2.0], [1.4, 2.0], [1.5, 2.0], [1.6, 2.0], [1.7, 2.0], [1.8, 2.0], [1.9, 2.0], [2.0, 2.0], [2.1, 2.0], [2.2, 2.0], [2.3, 2.0], [2.4, 2.0], [2.5, 2.0], [2.6, 2.0], [2.7, 2.0], [2.8, 2.0], [2.9, 2.0], [3.0, 2.0], [3.1, 2.0], [3.2, 2.0], [3.3, 2.0], [3.4, 2.0], [3.5, 2.0], [3.6, 2.0], [3.7, 2.0], [3.8, 2.0], [3.9, 2.0], [4.0, 2.0], [4.1, 2.0], [4.2, 2.0], [4.3, 2.0], [4.4, 2.0], [4.5, 2.0], [4.6, 2.0], [4.7, 2.0], [4.8, 2.0], [4.9, 2.0], [5.0, 2.0], [5.1, 2.0], [5.2, 2.0], [5.3, 2.0], [5.4, 2.0], [5.5, 2.0], [5.6, 2.0], [5.7, 2.0], [5.8, 2.0], [5.9, 2.0], [6.0, 2.0], [6.1, 2.0], [6.2, 2.0], [6.3, 2.0], [6.4, 2.0], [6.5, 2.0], [6.6, 2.0], [6.7, 2.0], [6.8, 2.0], [6.9, 2.0], [7.0, 2.0], [7.1, 2.0], [7.2, 2.0], [7.3, 2.0], [7.4, 2.0], [7.5, 2.0], [7.6, 2.0], [7.7, 2.0], [7.8, 2.0], [7.9, 2.0], [8.0, 2.0], [8.1, 2.0], [8.2, 2.0], [8.3, 2.0], [8.4, 2.0], [8.5, 2.0], [8.6, 2.0], [8.7, 2.0], [8.8, 3.0], [8.9, 3.0], [9.0, 3.0], [9.1, 3.0], [9.2, 3.0], [9.3, 3.0], [9.4, 3.0], [9.5, 3.0], [9.6, 3.0], [9.7, 3.0], [9.8, 3.0], [9.9, 3.0], [10.0, 3.0], [10.1, 3.0], [10.2, 3.0], [10.3, 3.0], [10.4, 3.0], [10.5, 3.0], [10.6, 3.0], [10.7, 3.0], [10.8, 3.0], [10.9, 3.0], [11.0, 3.0], [11.1, 3.0], [11.2, 3.0], [11.3, 3.0], [11.4, 3.0], [11.5, 3.0], [11.6, 3.0], [11.7, 3.0], [11.8, 3.0], [11.9, 3.0], [12.0, 3.0], [12.1, 3.0], [12.2, 3.0], [12.3, 3.0], [12.4, 3.0], [12.5, 3.0], [12.6, 3.0], [12.7, 3.0], [12.8, 3.0], [12.9, 3.0], [13.0, 3.0], [13.1, 3.0], [13.2, 3.0], [13.3, 3.0], [13.4, 3.0], [13.5, 3.0], [13.6, 3.0], [13.7, 3.0], [13.8, 3.0], [13.9, 3.0], [14.0, 3.0], [14.1, 3.0], [14.2, 3.0], [14.3, 3.0], [14.4, 3.0], [14.5, 3.0], [14.6, 3.0], [14.7, 3.0], [14.8, 3.0], [14.9, 3.0], [15.0, 3.0], [15.1, 3.0], [15.2, 3.0], [15.3, 3.0], [15.4, 3.0], [15.5, 3.0], [15.6, 3.0], [15.7, 3.0], [15.8, 3.0], [15.9, 3.0], [16.0, 3.0], [16.1, 3.0], [16.2, 3.0], [16.3, 3.0], [16.4, 3.0], [16.5, 3.0], [16.6, 3.0], [16.7, 3.0], [16.8, 3.0], [16.9, 3.0], [17.0, 3.0], [17.1, 3.0], [17.2, 3.0], [17.3, 3.0], [17.4, 3.0], [17.5, 3.0], [17.6, 3.0], [17.7, 3.0], [17.8, 3.0], [17.9, 3.0], [18.0, 3.0], [18.1, 3.0], [18.2, 3.0], [18.3, 3.0], [18.4, 3.0], [18.5, 3.0], [18.6, 3.0], [18.7, 3.0], [18.8, 3.0], [18.9, 3.0], [19.0, 3.0], [19.1, 3.0], [19.2, 3.0], [19.3, 3.0], [19.4, 3.0], [19.5, 3.0], [19.6, 3.0], [19.7, 3.0], [19.8, 3.0], [19.9, 3.0], [20.0, 3.0], [20.1, 3.0], [20.2, 3.0], [20.3, 3.0], [20.4, 3.0], [20.5, 3.0], [20.6, 3.0], [20.7, 3.0], [20.8, 3.0], [20.9, 3.0], [21.0, 3.0], [21.1, 3.0], [21.2, 3.0], [21.3, 3.0], [21.4, 3.0], [21.5, 3.0], [21.6, 3.0], [21.7, 3.0], [21.8, 3.0], [21.9, 3.0], [22.0, 3.0], [22.1, 3.0], [22.2, 3.0], [22.3, 3.0], [22.4, 3.0], [22.5, 3.0], [22.6, 3.0], [22.7, 3.0], [22.8, 3.0], [22.9, 3.0], [23.0, 3.0], [23.1, 3.0], [23.2, 3.0], [23.3, 3.0], [23.4, 3.0], [23.5, 3.0], [23.6, 3.0], [23.7, 3.0], [23.8, 3.0], [23.9, 3.0], [24.0, 3.0], [24.1, 3.0], [24.2, 3.0], [24.3, 3.0], [24.4, 3.0], [24.5, 3.0], [24.6, 3.0], [24.7, 3.0], [24.8, 3.0], [24.9, 3.0], [25.0, 3.0], [25.1, 3.0], [25.2, 3.0], [25.3, 3.0], [25.4, 3.0], [25.5, 3.0], [25.6, 3.0], [25.7, 3.0], [25.8, 3.0], [25.9, 3.0], [26.0, 3.0], [26.1, 3.0], [26.2, 3.0], [26.3, 3.0], [26.4, 3.0], [26.5, 3.0], [26.6, 3.0], [26.7, 3.0], [26.8, 3.0], [26.9, 3.0], [27.0, 3.0], [27.1, 3.0], [27.2, 3.0], [27.3, 3.0], [27.4, 3.0], [27.5, 3.0], [27.6, 3.0], [27.7, 4.0], [27.8, 4.0], [27.9, 4.0], [28.0, 4.0], [28.1, 4.0], [28.2, 4.0], [28.3, 4.0], [28.4, 4.0], [28.5, 4.0], [28.6, 4.0], [28.7, 4.0], [28.8, 4.0], [28.9, 4.0], [29.0, 4.0], [29.1, 4.0], [29.2, 4.0], [29.3, 4.0], [29.4, 4.0], [29.5, 4.0], [29.6, 4.0], [29.7, 4.0], [29.8, 4.0], [29.9, 4.0], [30.0, 4.0], [30.1, 4.0], [30.2, 4.0], [30.3, 4.0], [30.4, 4.0], [30.5, 4.0], [30.6, 4.0], [30.7, 4.0], [30.8, 4.0], [30.9, 4.0], [31.0, 4.0], [31.1, 4.0], [31.2, 4.0], [31.3, 4.0], [31.4, 4.0], [31.5, 4.0], [31.6, 4.0], [31.7, 4.0], [31.8, 4.0], [31.9, 4.0], [32.0, 4.0], [32.1, 4.0], [32.2, 4.0], [32.3, 4.0], [32.4, 4.0], [32.5, 4.0], [32.6, 4.0], [32.7, 4.0], [32.8, 4.0], [32.9, 4.0], [33.0, 4.0], [33.1, 4.0], [33.2, 4.0], [33.3, 4.0], [33.4, 4.0], [33.5, 4.0], [33.6, 4.0], [33.7, 4.0], [33.8, 4.0], [33.9, 4.0], [34.0, 4.0], [34.1, 4.0], [34.2, 4.0], [34.3, 4.0], [34.4, 4.0], [34.5, 4.0], [34.6, 4.0], [34.7, 4.0], [34.8, 4.0], [34.9, 4.0], [35.0, 4.0], [35.1, 4.0], [35.2, 4.0], [35.3, 4.0], [35.4, 4.0], [35.5, 4.0], [35.6, 4.0], [35.7, 4.0], [35.8, 4.0], [35.9, 4.0], [36.0, 4.0], [36.1, 4.0], [36.2, 4.0], [36.3, 4.0], [36.4, 4.0], [36.5, 4.0], [36.6, 4.0], [36.7, 4.0], [36.8, 4.0], [36.9, 4.0], [37.0, 4.0], [37.1, 4.0], [37.2, 4.0], [37.3, 4.0], [37.4, 4.0], [37.5, 4.0], [37.6, 4.0], [37.7, 4.0], [37.8, 4.0], [37.9, 4.0], [38.0, 4.0], [38.1, 4.0], [38.2, 4.0], [38.3, 4.0], [38.4, 4.0], [38.5, 4.0], [38.6, 4.0], [38.7, 4.0], [38.8, 4.0], [38.9, 4.0], [39.0, 4.0], [39.1, 4.0], [39.2, 4.0], [39.3, 4.0], [39.4, 4.0], [39.5, 4.0], [39.6, 4.0], [39.7, 4.0], [39.8, 4.0], [39.9, 4.0], [40.0, 4.0], [40.1, 4.0], [40.2, 4.0], [40.3, 4.0], [40.4, 4.0], [40.5, 4.0], [40.6, 4.0], [40.7, 4.0], [40.8, 4.0], [40.9, 4.0], [41.0, 4.0], [41.1, 4.0], [41.2, 4.0], [41.3, 4.0], [41.4, 4.0], [41.5, 4.0], [41.6, 4.0], [41.7, 4.0], [41.8, 4.0], [41.9, 4.0], [42.0, 4.0], [42.1, 4.0], [42.2, 4.0], [42.3, 4.0], [42.4, 4.0], [42.5, 4.0], [42.6, 4.0], [42.7, 4.0], [42.8, 4.0], [42.9, 4.0], [43.0, 4.0], [43.1, 4.0], [43.2, 4.0], [43.3, 4.0], [43.4, 5.0], [43.5, 5.0], [43.6, 5.0], [43.7, 5.0], [43.8, 5.0], [43.9, 5.0], [44.0, 5.0], [44.1, 5.0], [44.2, 5.0], [44.3, 5.0], [44.4, 5.0], [44.5, 5.0], [44.6, 5.0], [44.7, 5.0], [44.8, 5.0], [44.9, 5.0], [45.0, 5.0], [45.1, 5.0], [45.2, 5.0], [45.3, 5.0], [45.4, 5.0], [45.5, 5.0], [45.6, 5.0], [45.7, 5.0], [45.8, 5.0], [45.9, 5.0], [46.0, 5.0], [46.1, 5.0], [46.2, 5.0], [46.3, 5.0], [46.4, 5.0], [46.5, 5.0], [46.6, 5.0], [46.7, 5.0], [46.8, 5.0], [46.9, 5.0], [47.0, 5.0], [47.1, 5.0], [47.2, 5.0], [47.3, 5.0], [47.4, 5.0], [47.5, 5.0], [47.6, 5.0], [47.7, 5.0], [47.8, 5.0], [47.9, 5.0], [48.0, 5.0], [48.1, 5.0], [48.2, 5.0], [48.3, 5.0], [48.4, 5.0], [48.5, 5.0], [48.6, 5.0], [48.7, 5.0], [48.8, 5.0], [48.9, 5.0], [49.0, 5.0], [49.1, 5.0], [49.2, 5.0], [49.3, 5.0], [49.4, 5.0], [49.5, 5.0], [49.6, 5.0], [49.7, 5.0], [49.8, 5.0], [49.9, 5.0], [50.0, 5.0], [50.1, 5.0], [50.2, 5.0], [50.3, 5.0], [50.4, 5.0], [50.5, 5.0], [50.6, 5.0], [50.7, 5.0], [50.8, 5.0], [50.9, 5.0], [51.0, 5.0], [51.1, 5.0], [51.2, 5.0], [51.3, 5.0], [51.4, 5.0], [51.5, 5.0], [51.6, 5.0], [51.7, 5.0], [51.8, 5.0], [51.9, 5.0], [52.0, 5.0], [52.1, 5.0], [52.2, 5.0], [52.3, 5.0], [52.4, 5.0], [52.5, 5.0], [52.6, 5.0], [52.7, 5.0], [52.8, 5.0], [52.9, 5.0], [53.0, 5.0], [53.1, 5.0], [53.2, 5.0], [53.3, 5.0], [53.4, 5.0], [53.5, 5.0], [53.6, 5.0], [53.7, 5.0], [53.8, 5.0], [53.9, 5.0], [54.0, 5.0], [54.1, 5.0], [54.2, 5.0], [54.3, 5.0], [54.4, 5.0], [54.5, 5.0], [54.6, 5.0], [54.7, 5.0], [54.8, 5.0], [54.9, 5.0], [55.0, 5.0], [55.1, 5.0], [55.2, 5.0], [55.3, 5.0], [55.4, 5.0], [55.5, 5.0], [55.6, 5.0], [55.7, 5.0], [55.8, 5.0], [55.9, 5.0], [56.0, 6.0], [56.1, 6.0], [56.2, 6.0], [56.3, 6.0], [56.4, 6.0], [56.5, 6.0], [56.6, 6.0], [56.7, 6.0], [56.8, 6.0], [56.9, 6.0], [57.0, 6.0], [57.1, 6.0], [57.2, 6.0], [57.3, 6.0], [57.4, 6.0], [57.5, 6.0], [57.6, 6.0], [57.7, 6.0], [57.8, 6.0], [57.9, 6.0], [58.0, 6.0], [58.1, 6.0], [58.2, 6.0], [58.3, 6.0], [58.4, 6.0], [58.5, 6.0], [58.6, 6.0], [58.7, 6.0], [58.8, 6.0], [58.9, 6.0], [59.0, 6.0], [59.1, 6.0], [59.2, 6.0], [59.3, 6.0], [59.4, 6.0], [59.5, 6.0], [59.6, 6.0], [59.7, 6.0], [59.8, 6.0], [59.9, 6.0], [60.0, 6.0], [60.1, 6.0], [60.2, 6.0], [60.3, 6.0], [60.4, 6.0], [60.5, 6.0], [60.6, 6.0], [60.7, 6.0], [60.8, 6.0], [60.9, 6.0], [61.0, 6.0], [61.1, 6.0], [61.2, 6.0], [61.3, 6.0], [61.4, 6.0], [61.5, 6.0], [61.6, 6.0], [61.7, 6.0], [61.8, 6.0], [61.9, 6.0], [62.0, 6.0], [62.1, 6.0], [62.2, 6.0], [62.3, 6.0], [62.4, 6.0], [62.5, 6.0], [62.6, 6.0], [62.7, 6.0], [62.8, 6.0], [62.9, 6.0], [63.0, 6.0], [63.1, 6.0], [63.2, 6.0], [63.3, 6.0], [63.4, 6.0], [63.5, 6.0], [63.6, 6.0], [63.7, 6.0], [63.8, 6.0], [63.9, 6.0], [64.0, 6.0], [64.1, 6.0], [64.2, 6.0], [64.3, 6.0], [64.4, 6.0], [64.5, 6.0], [64.6, 6.0], [64.7, 6.0], [64.8, 6.0], [64.9, 6.0], [65.0, 6.0], [65.1, 6.0], [65.2, 6.0], [65.3, 6.0], [65.4, 6.0], [65.5, 6.0], [65.6, 6.0], [65.7, 6.0], [65.8, 6.0], [65.9, 7.0], [66.0, 7.0], [66.1, 7.0], [66.2, 7.0], [66.3, 7.0], [66.4, 7.0], [66.5, 7.0], [66.6, 7.0], [66.7, 7.0], [66.8, 7.0], [66.9, 7.0], [67.0, 7.0], [67.1, 7.0], [67.2, 7.0], [67.3, 7.0], [67.4, 7.0], [67.5, 7.0], [67.6, 7.0], [67.7, 7.0], [67.8, 7.0], [67.9, 7.0], [68.0, 7.0], [68.1, 7.0], [68.2, 7.0], [68.3, 7.0], [68.4, 7.0], [68.5, 7.0], [68.6, 7.0], [68.7, 7.0], [68.8, 7.0], [68.9, 7.0], [69.0, 7.0], [69.1, 7.0], [69.2, 7.0], [69.3, 7.0], [69.4, 7.0], [69.5, 7.0], [69.6, 7.0], [69.7, 7.0], [69.8, 7.0], [69.9, 7.0], [70.0, 7.0], [70.1, 7.0], [70.2, 7.0], [70.3, 7.0], [70.4, 7.0], [70.5, 7.0], [70.6, 7.0], [70.7, 7.0], [70.8, 7.0], [70.9, 7.0], [71.0, 7.0], [71.1, 7.0], [71.2, 7.0], [71.3, 7.0], [71.4, 7.0], [71.5, 7.0], [71.6, 7.0], [71.7, 7.0], [71.8, 7.0], [71.9, 7.0], [72.0, 7.0], [72.1, 7.0], [72.2, 7.0], [72.3, 7.0], [72.4, 7.0], [72.5, 7.0], [72.6, 7.0], [72.7, 7.0], [72.8, 7.0], [72.9, 7.0], [73.0, 7.0], [73.1, 7.0], [73.2, 7.0], [73.3, 7.0], [73.4, 7.0], [73.5, 7.0], [73.6, 8.0], [73.7, 8.0], [73.8, 8.0], [73.9, 8.0], [74.0, 8.0], [74.1, 8.0], [74.2, 8.0], [74.3, 8.0], [74.4, 8.0], [74.5, 8.0], [74.6, 8.0], [74.7, 8.0], [74.8, 8.0], [74.9, 8.0], [75.0, 8.0], [75.1, 8.0], [75.2, 8.0], [75.3, 8.0], [75.4, 8.0], [75.5, 8.0], [75.6, 8.0], [75.7, 8.0], [75.8, 8.0], [75.9, 8.0], [76.0, 8.0], [76.1, 8.0], [76.2, 8.0], [76.3, 8.0], [76.4, 8.0], [76.5, 8.0], [76.6, 8.0], [76.7, 8.0], [76.8, 8.0], [76.9, 8.0], [77.0, 8.0], [77.1, 8.0], [77.2, 8.0], [77.3, 8.0], [77.4, 8.0], [77.5, 8.0], [77.6, 8.0], [77.7, 8.0], [77.8, 8.0], [77.9, 8.0], [78.0, 8.0], [78.1, 8.0], [78.2, 8.0], [78.3, 8.0], [78.4, 8.0], [78.5, 8.0], [78.6, 8.0], [78.7, 8.0], [78.8, 8.0], [78.9, 8.0], [79.0, 8.0], [79.1, 8.0], [79.2, 8.0], [79.3, 8.0], [79.4, 8.0], [79.5, 9.0], [79.6, 9.0], [79.7, 9.0], [79.8, 9.0], [79.9, 9.0], [80.0, 9.0], [80.1, 9.0], [80.2, 9.0], [80.3, 9.0], [80.4, 9.0], [80.5, 9.0], [80.6, 9.0], [80.7, 9.0], [80.8, 9.0], [80.9, 9.0], [81.0, 9.0], [81.1, 9.0], [81.2, 9.0], [81.3, 9.0], [81.4, 9.0], [81.5, 9.0], [81.6, 9.0], [81.7, 9.0], [81.8, 9.0], [81.9, 9.0], [82.0, 9.0], [82.1, 9.0], [82.2, 9.0], [82.3, 9.0], [82.4, 9.0], [82.5, 9.0], [82.6, 9.0], [82.7, 9.0], [82.8, 9.0], [82.9, 9.0], [83.0, 9.0], [83.1, 9.0], [83.2, 9.0], [83.3, 9.0], [83.4, 9.0], [83.5, 9.0], [83.6, 9.0], [83.7, 9.0], [83.8, 9.0], [83.9, 9.0], [84.0, 9.0], [84.1, 9.0], [84.2, 9.0], [84.3, 9.0], [84.4, 10.0], [84.5, 10.0], [84.6, 10.0], [84.7, 10.0], [84.8, 10.0], [84.9, 10.0], [85.0, 10.0], [85.1, 10.0], [85.2, 10.0], [85.3, 10.0], [85.4, 10.0], [85.5, 10.0], [85.6, 10.0], [85.7, 10.0], [85.8, 10.0], [85.9, 10.0], [86.0, 10.0], [86.1, 10.0], [86.2, 10.0], [86.3, 10.0], [86.4, 10.0], [86.5, 10.0], [86.6, 10.0], [86.7, 10.0], [86.8, 10.0], [86.9, 10.0], [87.0, 10.0], [87.1, 10.0], [87.2, 10.0], [87.3, 10.0], [87.4, 10.0], [87.5, 10.0], [87.6, 10.0], [87.7, 10.0], [87.8, 10.0], [87.9, 11.0], [88.0, 11.0], [88.1, 11.0], [88.2, 11.0], [88.3, 11.0], [88.4, 11.0], [88.5, 11.0], [88.6, 11.0], [88.7, 11.0], [88.8, 11.0], [88.9, 11.0], [89.0, 11.0], [89.1, 11.0], [89.2, 11.0], [89.3, 11.0], [89.4, 11.0], [89.5, 11.0], [89.6, 11.0], [89.7, 11.0], [89.8, 11.0], [89.9, 11.0], [90.0, 11.0], [90.1, 11.0], [90.2, 11.0], [90.3, 11.0], [90.4, 11.0], [90.5, 12.0], [90.6, 12.0], [90.7, 12.0], [90.8, 12.0], [90.9, 12.0], [91.0, 12.0], [91.1, 12.0], [91.2, 12.0], [91.3, 12.0], [91.4, 12.0], [91.5, 12.0], [91.6, 12.0], [91.7, 12.0], [91.8, 12.0], [91.9, 12.0], [92.0, 12.0], [92.1, 12.0], [92.2, 12.0], [92.3, 13.0], [92.4, 13.0], [92.5, 13.0], [92.6, 13.0], [92.7, 13.0], [92.8, 13.0], [92.9, 13.0], [93.0, 13.0], [93.1, 13.0], [93.2, 13.0], [93.3, 13.0], [93.4, 13.0], [93.5, 13.0], [93.6, 13.0], [93.7, 14.0], [93.8, 14.0], [93.9, 14.0], [94.0, 14.0], [94.1, 14.0], [94.2, 14.0], [94.3, 14.0], [94.4, 14.0], [94.5, 15.0], [94.6, 15.0], [94.7, 15.0], [94.8, 15.0], [94.9, 15.0], [95.0, 15.0], [95.1, 15.0], [95.2, 16.0], [95.3, 16.0], [95.4, 16.0], [95.5, 16.0], [95.6, 16.0], [95.7, 17.0], [95.8, 17.0], [95.9, 17.0], [96.0, 17.0], [96.1, 18.0], [96.2, 18.0], [96.3, 18.0], [96.4, 19.0], [96.5, 19.0], [96.6, 19.0], [96.7, 20.0], [96.8, 20.0], [96.9, 20.0], [97.0, 21.0], [97.1, 21.0], [97.2, 22.0], [97.3, 23.0], [97.4, 23.0], [97.5, 24.0], [97.6, 25.0], [97.7, 26.0], [97.8, 27.0], [97.9, 28.0], [98.0, 30.0], [98.1, 32.0], [98.2, 35.0], [98.3, 37.0], [98.4, 40.0], [98.5, 43.0], [98.6, 46.0], [98.7, 49.0], [98.8, 52.0], [98.9, 56.0], [99.0, 59.0], [99.1, 65.0], [99.2, 72.0], [99.3, 83.0], [99.4, 97.0], [99.5, 105.0], [99.6, 142.0], [99.7, 206.0], [99.8, 307.0], [99.9, 449.0]], "isOverall": false, "label": "GET thread name", "isController": false}, {"data": [[0.0, 3.0], [0.1, 5.0], [0.2, 5.0], [0.3, 6.0], [0.4, 6.0], [0.5, 6.0], [0.6, 7.0], [0.7, 7.0], [0.8, 7.0], [0.9, 7.0], [1.0, 8.0], [1.1, 8.0], [1.2, 9.0], [1.3, 9.0], [1.4, 9.0], [1.5, 10.0], [1.6, 11.0], [1.7, 11.0], [1.8, 12.0], [1.9, 13.0], [2.0, 15.0], [2.1, 16.0], [2.2, 18.0], [2.3, 20.0], [2.4, 23.0], [2.5, 26.0], [2.6, 31.0], [2.7, 35.0], [2.8, 40.0], [2.9, 46.0], [3.0, 51.0], [3.1, 58.0], [3.2, 69.0], [3.3, 77.0], [3.4, 83.0], [3.5, 89.0], [3.6, 97.0], [3.7, 108.0], [3.8, 119.0], [3.9, 126.0], [4.0, 135.0], [4.1, 146.0], [4.2, 151.0], [4.3, 158.0], [4.4, 164.0], [4.5, 168.0], [4.6, 174.0], [4.7, 179.0], [4.8, 184.0], [4.9, 190.0], [5.0, 194.0], [5.1, 200.0], [5.2, 206.0], [5.3, 212.0], [5.4, 220.0], [5.5, 227.0], [5.6, 233.0], [5.7, 239.0], [5.8, 245.0], [5.9, 251.0], [6.0, 258.0], [6.1, 262.0], [6.2, 267.0], [6.3, 271.0], [6.4, 275.0], [6.5, 279.0], [6.6, 283.0], [6.7, 286.0], [6.8, 289.0], [6.9, 293.0], [7.0, 297.0], [7.1, 301.0], [7.2, 305.0], [7.3, 308.0], [7.4, 311.0], [7.5, 315.0], [7.6, 318.0], [7.7, 321.0], [7.8, 326.0], [7.9, 330.0], [8.0, 336.0], [8.1, 341.0], [8.2, 345.0], [8.3, 348.0], [8.4, 353.0], [8.5, 356.0], [8.6, 359.0], [8.7, 363.0], [8.8, 366.0], [8.9, 370.0], [9.0, 373.0], [9.1, 376.0], [9.2, 379.0], [9.3, 382.0], [9.4, 384.0], [9.5, 389.0], [9.6, 392.0], [9.7, 395.0], [9.8, 398.0], [9.9, 402.0], [10.0, 405.0], [10.1, 407.0], [10.2, 410.0], [10.3, 413.0], [10.4, 416.0], [10.5, 418.0], [10.6, 421.0], [10.7, 425.0], [10.8, 429.0], [10.9, 432.0], [11.0, 434.0], [11.1, 437.0], [11.2, 440.0], [11.3, 443.0], [11.4, 445.0], [11.5, 447.0], [11.6, 449.0], [11.7, 450.0], [11.8, 451.0], [11.9, 453.0], [12.0, 454.0], [12.1, 456.0], [12.2, 458.0], [12.3, 460.0], [12.4, 462.0], [12.5, 463.0], [12.6, 465.0], [12.7, 467.0], [12.8, 468.0], [12.9, 470.0], [13.0, 472.0], [13.1, 473.0], [13.2, 475.0], [13.3, 476.0], [13.4, 478.0], [13.5, 479.0], [13.6, 480.0], [13.7, 482.0], [13.8, 484.0], [13.9, 485.0], [14.0, 487.0], [14.1, 488.0], [14.2, 489.0], [14.3, 491.0], [14.4, 493.0], [14.5, 494.0], [14.6, 495.0], [14.7, 497.0], [14.8, 498.0], [14.9, 500.0], [15.0, 501.0], [15.1, 503.0], [15.2, 504.0], [15.3, 505.0], [15.4, 506.0], [15.5, 509.0], [15.6, 510.0], [15.7, 512.0], [15.8, 514.0], [15.9, 515.0], [16.0, 517.0], [16.1, 518.0], [16.2, 520.0], [16.3, 521.0], [16.4, 523.0], [16.5, 524.0], [16.6, 525.0], [16.7, 526.0], [16.8, 527.0], [16.9, 529.0], [17.0, 530.0], [17.1, 531.0], [17.2, 533.0], [17.3, 534.0], [17.4, 535.0], [17.5, 537.0], [17.6, 538.0], [17.7, 539.0], [17.8, 540.0], [17.9, 541.0], [18.0, 543.0], [18.1, 544.0], [18.2, 545.0], [18.3, 546.0], [18.4, 547.0], [18.5, 548.0], [18.6, 549.0], [18.7, 549.0], [18.8, 550.0], [18.9, 551.0], [19.0, 552.0], [19.1, 552.0], [19.2, 553.0], [19.3, 554.0], [19.4, 554.0], [19.5, 555.0], [19.6, 556.0], [19.7, 557.0], [19.8, 558.0], [19.9, 558.0], [20.0, 559.0], [20.1, 560.0], [20.2, 561.0], [20.3, 562.0], [20.4, 562.0], [20.5, 563.0], [20.6, 563.0], [20.7, 564.0], [20.8, 565.0], [20.9, 566.0], [21.0, 566.0], [21.1, 567.0], [21.2, 568.0], [21.3, 568.0], [21.4, 569.0], [21.5, 569.0], [21.6, 570.0], [21.7, 571.0], [21.8, 571.0], [21.9, 572.0], [22.0, 573.0], [22.1, 573.0], [22.2, 574.0], [22.3, 575.0], [22.4, 575.0], [22.5, 576.0], [22.6, 577.0], [22.7, 577.0], [22.8, 578.0], [22.9, 578.0], [23.0, 579.0], [23.1, 579.0], [23.2, 580.0], [23.3, 581.0], [23.4, 581.0], [23.5, 582.0], [23.6, 582.0], [23.7, 583.0], [23.8, 583.0], [23.9, 584.0], [24.0, 585.0], [24.1, 585.0], [24.2, 585.0], [24.3, 586.0], [24.4, 586.0], [24.5, 587.0], [24.6, 587.0], [24.7, 588.0], [24.8, 588.0], [24.9, 589.0], [25.0, 589.0], [25.1, 590.0], [25.2, 590.0], [25.3, 591.0], [25.4, 591.0], [25.5, 592.0], [25.6, 592.0], [25.7, 593.0], [25.8, 593.0], [25.9, 593.0], [26.0, 594.0], [26.1, 594.0], [26.2, 595.0], [26.3, 595.0], [26.4, 595.0], [26.5, 596.0], [26.6, 597.0], [26.7, 597.0], [26.8, 597.0], [26.9, 598.0], [27.0, 598.0], [27.1, 598.0], [27.2, 599.0], [27.3, 599.0], [27.4, 599.0], [27.5, 600.0], [27.6, 600.0], [27.7, 601.0], [27.8, 601.0], [27.9, 601.0], [28.0, 602.0], [28.1, 602.0], [28.2, 603.0], [28.3, 603.0], [28.4, 604.0], [28.5, 604.0], [28.6, 604.0], [28.7, 605.0], [28.8, 605.0], [28.9, 606.0], [29.0, 606.0], [29.1, 606.0], [29.2, 607.0], [29.3, 607.0], [29.4, 608.0], [29.5, 608.0], [29.6, 608.0], [29.7, 609.0], [29.8, 609.0], [29.9, 609.0], [30.0, 610.0], [30.1, 610.0], [30.2, 610.0], [30.3, 611.0], [30.4, 611.0], [30.5, 612.0], [30.6, 612.0], [30.7, 612.0], [30.8, 613.0], [30.9, 613.0], [31.0, 613.0], [31.1, 613.0], [31.2, 614.0], [31.3, 614.0], [31.4, 614.0], [31.5, 615.0], [31.6, 615.0], [31.7, 615.0], [31.8, 615.0], [31.9, 616.0], [32.0, 616.0], [32.1, 616.0], [32.2, 617.0], [32.3, 617.0], [32.4, 617.0], [32.5, 618.0], [32.6, 618.0], [32.7, 618.0], [32.8, 619.0], [32.9, 619.0], [33.0, 619.0], [33.1, 620.0], [33.2, 620.0], [33.3, 620.0], [33.4, 621.0], [33.5, 621.0], [33.6, 621.0], [33.7, 622.0], [33.8, 622.0], [33.9, 622.0], [34.0, 623.0], [34.1, 623.0], [34.2, 623.0], [34.3, 624.0], [34.4, 624.0], [34.5, 624.0], [34.6, 625.0], [34.7, 625.0], [34.8, 625.0], [34.9, 625.0], [35.0, 626.0], [35.1, 626.0], [35.2, 626.0], [35.3, 627.0], [35.4, 627.0], [35.5, 627.0], [35.6, 628.0], [35.7, 628.0], [35.8, 628.0], [35.9, 628.0], [36.0, 629.0], [36.1, 629.0], [36.2, 629.0], [36.3, 630.0], [36.4, 630.0], [36.5, 630.0], [36.6, 631.0], [36.7, 631.0], [36.8, 631.0], [36.9, 632.0], [37.0, 632.0], [37.1, 632.0], [37.2, 632.0], [37.3, 633.0], [37.4, 633.0], [37.5, 633.0], [37.6, 634.0], [37.7, 634.0], [37.8, 634.0], [37.9, 634.0], [38.0, 635.0], [38.1, 635.0], [38.2, 635.0], [38.3, 636.0], [38.4, 636.0], [38.5, 636.0], [38.6, 637.0], [38.7, 637.0], [38.8, 637.0], [38.9, 638.0], [39.0, 638.0], [39.1, 638.0], [39.2, 638.0], [39.3, 639.0], [39.4, 639.0], [39.5, 639.0], [39.6, 640.0], [39.7, 640.0], [39.8, 640.0], [39.9, 641.0], [40.0, 641.0], [40.1, 641.0], [40.2, 642.0], [40.3, 642.0], [40.4, 642.0], [40.5, 643.0], [40.6, 643.0], [40.7, 643.0], [40.8, 643.0], [40.9, 644.0], [41.0, 644.0], [41.1, 644.0], [41.2, 645.0], [41.3, 645.0], [41.4, 645.0], [41.5, 645.0], [41.6, 646.0], [41.7, 646.0], [41.8, 646.0], [41.9, 646.0], [42.0, 647.0], [42.1, 647.0], [42.2, 647.0], [42.3, 648.0], [42.4, 648.0], [42.5, 648.0], [42.6, 648.0], [42.7, 649.0], [42.8, 649.0], [42.9, 649.0], [43.0, 649.0], [43.1, 650.0], [43.2, 650.0], [43.3, 650.0], [43.4, 650.0], [43.5, 651.0], [43.6, 651.0], [43.7, 651.0], [43.8, 651.0], [43.9, 652.0], [44.0, 652.0], [44.1, 652.0], [44.2, 652.0], [44.3, 653.0], [44.4, 653.0], [44.5, 653.0], [44.6, 654.0], [44.7, 654.0], [44.8, 654.0], [44.9, 654.0], [45.0, 655.0], [45.1, 655.0], [45.2, 655.0], [45.3, 655.0], [45.4, 656.0], [45.5, 656.0], [45.6, 656.0], [45.7, 656.0], [45.8, 657.0], [45.9, 657.0], [46.0, 657.0], [46.1, 657.0], [46.2, 658.0], [46.3, 658.0], [46.4, 658.0], [46.5, 658.0], [46.6, 659.0], [46.7, 659.0], [46.8, 659.0], [46.9, 659.0], [47.0, 660.0], [47.1, 660.0], [47.2, 660.0], [47.3, 660.0], [47.4, 661.0], [47.5, 661.0], [47.6, 661.0], [47.7, 662.0], [47.8, 662.0], [47.9, 662.0], [48.0, 662.0], [48.1, 663.0], [48.2, 663.0], [48.3, 663.0], [48.4, 663.0], [48.5, 664.0], [48.6, 664.0], [48.7, 664.0], [48.8, 664.0], [48.9, 665.0], [49.0, 665.0], [49.1, 665.0], [49.2, 665.0], [49.3, 666.0], [49.4, 666.0], [49.5, 666.0], [49.6, 666.0], [49.7, 667.0], [49.8, 667.0], [49.9, 667.0], [50.0, 667.0], [50.1, 668.0], [50.2, 668.0], [50.3, 668.0], [50.4, 669.0], [50.5, 669.0], [50.6, 669.0], [50.7, 669.0], [50.8, 670.0], [50.9, 670.0], [51.0, 670.0], [51.1, 670.0], [51.2, 670.0], [51.3, 671.0], [51.4, 671.0], [51.5, 671.0], [51.6, 671.0], [51.7, 672.0], [51.8, 672.0], [51.9, 672.0], [52.0, 672.0], [52.1, 673.0], [52.2, 673.0], [52.3, 673.0], [52.4, 673.0], [52.5, 674.0], [52.6, 674.0], [52.7, 674.0], [52.8, 674.0], [52.9, 674.0], [53.0, 675.0], [53.1, 675.0], [53.2, 675.0], [53.3, 675.0], [53.4, 676.0], [53.5, 676.0], [53.6, 676.0], [53.7, 676.0], [53.8, 677.0], [53.9, 677.0], [54.0, 677.0], [54.1, 677.0], [54.2, 678.0], [54.3, 678.0], [54.4, 678.0], [54.5, 679.0], [54.6, 679.0], [54.7, 679.0], [54.8, 679.0], [54.9, 679.0], [55.0, 680.0], [55.1, 680.0], [55.2, 680.0], [55.3, 680.0], [55.4, 681.0], [55.5, 681.0], [55.6, 681.0], [55.7, 681.0], [55.8, 682.0], [55.9, 682.0], [56.0, 682.0], [56.1, 682.0], [56.2, 683.0], [56.3, 683.0], [56.4, 683.0], [56.5, 683.0], [56.6, 684.0], [56.7, 684.0], [56.8, 684.0], [56.9, 684.0], [57.0, 684.0], [57.1, 685.0], [57.2, 685.0], [57.3, 685.0], [57.4, 685.0], [57.5, 686.0], [57.6, 686.0], [57.7, 686.0], [57.8, 686.0], [57.9, 686.0], [58.0, 687.0], [58.1, 687.0], [58.2, 687.0], [58.3, 687.0], [58.4, 688.0], [58.5, 688.0], [58.6, 688.0], [58.7, 688.0], [58.8, 689.0], [58.9, 689.0], [59.0, 689.0], [59.1, 689.0], [59.2, 689.0], [59.3, 690.0], [59.4, 690.0], [59.5, 690.0], [59.6, 690.0], [59.7, 691.0], [59.8, 691.0], [59.9, 691.0], [60.0, 691.0], [60.1, 691.0], [60.2, 692.0], [60.3, 692.0], [60.4, 692.0], [60.5, 692.0], [60.6, 693.0], [60.7, 693.0], [60.8, 693.0], [60.9, 693.0], [61.0, 693.0], [61.1, 694.0], [61.2, 694.0], [61.3, 694.0], [61.4, 694.0], [61.5, 695.0], [61.6, 695.0], [61.7, 695.0], [61.8, 695.0], [61.9, 695.0], [62.0, 696.0], [62.1, 696.0], [62.2, 696.0], [62.3, 696.0], [62.4, 696.0], [62.5, 697.0], [62.6, 697.0], [62.7, 697.0], [62.8, 697.0], [62.9, 698.0], [63.0, 698.0], [63.1, 698.0], [63.2, 698.0], [63.3, 698.0], [63.4, 699.0], [63.5, 699.0], [63.6, 699.0], [63.7, 699.0], [63.8, 700.0], [63.9, 700.0], [64.0, 700.0], [64.1, 700.0], [64.2, 701.0], [64.3, 701.0], [64.4, 701.0], [64.5, 701.0], [64.6, 702.0], [64.7, 702.0], [64.8, 702.0], [64.9, 702.0], [65.0, 702.0], [65.1, 703.0], [65.2, 703.0], [65.3, 703.0], [65.4, 703.0], [65.5, 704.0], [65.6, 704.0], [65.7, 704.0], [65.8, 704.0], [65.9, 704.0], [66.0, 705.0], [66.1, 705.0], [66.2, 705.0], [66.3, 705.0], [66.4, 706.0], [66.5, 706.0], [66.6, 706.0], [66.7, 706.0], [66.8, 706.0], [66.9, 707.0], [67.0, 707.0], [67.1, 707.0], [67.2, 707.0], [67.3, 708.0], [67.4, 708.0], [67.5, 708.0], [67.6, 708.0], [67.7, 709.0], [67.8, 709.0], [67.9, 709.0], [68.0, 709.0], [68.1, 709.0], [68.2, 710.0], [68.3, 710.0], [68.4, 710.0], [68.5, 711.0], [68.6, 711.0], [68.7, 711.0], [68.8, 711.0], [68.9, 712.0], [69.0, 712.0], [69.1, 712.0], [69.2, 712.0], [69.3, 713.0], [69.4, 713.0], [69.5, 713.0], [69.6, 713.0], [69.7, 714.0], [69.8, 714.0], [69.9, 714.0], [70.0, 714.0], [70.1, 715.0], [70.2, 715.0], [70.3, 715.0], [70.4, 715.0], [70.5, 715.0], [70.6, 716.0], [70.7, 716.0], [70.8, 716.0], [70.9, 716.0], [71.0, 717.0], [71.1, 717.0], [71.2, 717.0], [71.3, 717.0], [71.4, 718.0], [71.5, 718.0], [71.6, 718.0], [71.7, 718.0], [71.8, 719.0], [71.9, 719.0], [72.0, 719.0], [72.1, 719.0], [72.2, 720.0], [72.3, 720.0], [72.4, 720.0], [72.5, 720.0], [72.6, 721.0], [72.7, 721.0], [72.8, 721.0], [72.9, 721.0], [73.0, 721.0], [73.1, 722.0], [73.2, 722.0], [73.3, 722.0], [73.4, 722.0], [73.5, 723.0], [73.6, 723.0], [73.7, 723.0], [73.8, 723.0], [73.9, 723.0], [74.0, 724.0], [74.1, 724.0], [74.2, 724.0], [74.3, 724.0], [74.4, 725.0], [74.5, 725.0], [74.6, 725.0], [74.7, 726.0], [74.8, 726.0], [74.9, 726.0], [75.0, 726.0], [75.1, 726.0], [75.2, 727.0], [75.3, 727.0], [75.4, 727.0], [75.5, 728.0], [75.6, 728.0], [75.7, 728.0], [75.8, 728.0], [75.9, 729.0], [76.0, 729.0], [76.1, 729.0], [76.2, 729.0], [76.3, 730.0], [76.4, 730.0], [76.5, 730.0], [76.6, 730.0], [76.7, 731.0], [76.8, 731.0], [76.9, 731.0], [77.0, 732.0], [77.1, 732.0], [77.2, 732.0], [77.3, 732.0], [77.4, 733.0], [77.5, 733.0], [77.6, 733.0], [77.7, 733.0], [77.8, 734.0], [77.9, 734.0], [78.0, 734.0], [78.1, 735.0], [78.2, 735.0], [78.3, 735.0], [78.4, 735.0], [78.5, 736.0], [78.6, 736.0], [78.7, 736.0], [78.8, 737.0], [78.9, 737.0], [79.0, 737.0], [79.1, 737.0], [79.2, 738.0], [79.3, 738.0], [79.4, 738.0], [79.5, 739.0], [79.6, 739.0], [79.7, 739.0], [79.8, 740.0], [79.9, 740.0], [80.0, 740.0], [80.1, 741.0], [80.2, 741.0], [80.3, 741.0], [80.4, 742.0], [80.5, 742.0], [80.6, 742.0], [80.7, 743.0], [80.8, 743.0], [80.9, 743.0], [81.0, 744.0], [81.1, 744.0], [81.2, 744.0], [81.3, 745.0], [81.4, 745.0], [81.5, 745.0], [81.6, 746.0], [81.7, 746.0], [81.8, 746.0], [81.9, 747.0], [82.0, 747.0], [82.1, 748.0], [82.2, 748.0], [82.3, 748.0], [82.4, 749.0], [82.5, 749.0], [82.6, 750.0], [82.7, 750.0], [82.8, 750.0], [82.9, 751.0], [83.0, 751.0], [83.1, 751.0], [83.2, 752.0], [83.3, 752.0], [83.4, 753.0], [83.5, 753.0], [83.6, 753.0], [83.7, 754.0], [83.8, 754.0], [83.9, 755.0], [84.0, 755.0], [84.1, 755.0], [84.2, 756.0], [84.3, 757.0], [84.4, 757.0], [84.5, 758.0], [84.6, 758.0], [84.7, 758.0], [84.8, 759.0], [84.9, 759.0], [85.0, 760.0], [85.1, 760.0], [85.2, 761.0], [85.3, 761.0], [85.4, 762.0], [85.5, 762.0], [85.6, 763.0], [85.7, 763.0], [85.8, 764.0], [85.9, 764.0], [86.0, 765.0], [86.1, 765.0], [86.2, 766.0], [86.3, 766.0], [86.4, 767.0], [86.5, 767.0], [86.6, 768.0], [86.7, 768.0], [86.8, 769.0], [86.9, 769.0], [87.0, 770.0], [87.1, 770.0], [87.2, 771.0], [87.3, 771.0], [87.4, 772.0], [87.5, 773.0], [87.6, 773.0], [87.7, 774.0], [87.8, 774.0], [87.9, 775.0], [88.0, 776.0], [88.1, 776.0], [88.2, 777.0], [88.3, 778.0], [88.4, 778.0], [88.5, 779.0], [88.6, 780.0], [88.7, 780.0], [88.8, 781.0], [88.9, 782.0], [89.0, 782.0], [89.1, 783.0], [89.2, 784.0], [89.3, 784.0], [89.4, 785.0], [89.5, 786.0], [89.6, 786.0], [89.7, 787.0], [89.8, 788.0], [89.9, 788.0], [90.0, 789.0], [90.1, 790.0], [90.2, 791.0], [90.3, 791.0], [90.4, 792.0], [90.5, 793.0], [90.6, 793.0], [90.7, 794.0], [90.8, 795.0], [90.9, 796.0], [91.0, 796.0], [91.1, 797.0], [91.2, 798.0], [91.3, 799.0], [91.4, 800.0], [91.5, 801.0], [91.6, 801.0], [91.7, 802.0], [91.8, 803.0], [91.9, 804.0], [92.0, 805.0], [92.1, 806.0], [92.2, 807.0], [92.3, 808.0], [92.4, 809.0], [92.5, 810.0], [92.6, 811.0], [92.7, 812.0], [92.8, 813.0], [92.9, 814.0], [93.0, 815.0], [93.1, 817.0], [93.2, 818.0], [93.3, 819.0], [93.4, 820.0], [93.5, 821.0], [93.6, 823.0], [93.7, 824.0], [93.8, 826.0], [93.9, 826.0], [94.0, 828.0], [94.1, 829.0], [94.2, 831.0], [94.3, 832.0], [94.4, 833.0], [94.5, 835.0], [94.6, 836.0], [94.7, 838.0], [94.8, 840.0], [94.9, 843.0], [95.0, 844.0], [95.1, 846.0], [95.2, 848.0], [95.3, 850.0], [95.4, 853.0], [95.5, 856.0], [95.6, 859.0], [95.7, 861.0], [95.8, 864.0], [95.9, 867.0], [96.0, 870.0], [96.1, 874.0], [96.2, 878.0], [96.3, 882.0], [96.4, 886.0], [96.5, 890.0], [96.6, 894.0], [96.7, 899.0], [96.8, 903.0], [96.9, 907.0], [97.0, 911.0], [97.1, 916.0], [97.2, 922.0], [97.3, 926.0], [97.4, 933.0], [97.5, 940.0], [97.6, 949.0], [97.7, 959.0], [97.8, 970.0], [97.9, 984.0], [98.0, 1005.0], [98.1, 1029.0], [98.2, 1047.0], [98.3, 1070.0], [98.4, 1084.0], [98.5, 1100.0], [98.6, 1121.0], [98.7, 1161.0], [98.8, 1193.0], [98.9, 1229.0], [99.0, 1259.0], [99.1, 1284.0], [99.2, 1306.0], [99.3, 1326.0], [99.4, 1345.0], [99.5, 1366.0], [99.6, 1388.0], [99.7, 1423.0], [99.8, 1453.0], [99.9, 1538.0]], "isOverall": false, "label": "GET employee by id", "isController": false}, {"data": [[0.0, 6.0], [0.1, 8.0], [0.2, 9.0], [0.3, 9.0], [0.4, 10.0], [0.5, 10.0], [0.6, 11.0], [0.7, 12.0], [0.8, 12.0], [0.9, 13.0], [1.0, 14.0], [1.1, 15.0], [1.2, 16.0], [1.3, 17.0], [1.4, 18.0], [1.5, 19.0], [1.6, 21.0], [1.7, 23.0], [1.8, 24.0], [1.9, 26.0], [2.0, 29.0], [2.1, 32.0], [2.2, 36.0], [2.3, 40.0], [2.4, 45.0], [2.5, 50.0], [2.6, 55.0], [2.7, 61.0], [2.8, 69.0], [2.9, 83.0], [3.0, 92.0], [3.1, 98.0], [3.2, 107.0], [3.3, 114.0], [3.4, 123.0], [3.5, 134.0], [3.6, 140.0], [3.7, 147.0], [3.8, 153.0], [3.9, 160.0], [4.0, 166.0], [4.1, 172.0], [4.2, 178.0], [4.3, 183.0], [4.4, 187.0], [4.5, 194.0], [4.6, 198.0], [4.7, 204.0], [4.8, 209.0], [4.9, 214.0], [5.0, 221.0], [5.1, 227.0], [5.2, 234.0], [5.3, 240.0], [5.4, 246.0], [5.5, 251.0], [5.6, 257.0], [5.7, 263.0], [5.8, 268.0], [5.9, 273.0], [6.0, 278.0], [6.1, 283.0], [6.2, 287.0], [6.3, 291.0], [6.4, 295.0], [6.5, 298.0], [6.6, 301.0], [6.7, 304.0], [6.8, 308.0], [6.9, 312.0], [7.0, 316.0], [7.1, 320.0], [7.2, 323.0], [7.3, 327.0], [7.4, 332.0], [7.5, 336.0], [7.6, 341.0], [7.7, 345.0], [7.8, 349.0], [7.9, 354.0], [8.0, 358.0], [8.1, 362.0], [8.2, 366.0], [8.3, 371.0], [8.4, 377.0], [8.5, 381.0], [8.6, 384.0], [8.7, 386.0], [8.8, 390.0], [8.9, 393.0], [9.0, 397.0], [9.1, 400.0], [9.2, 403.0], [9.3, 406.0], [9.4, 410.0], [9.5, 413.0], [9.6, 415.0], [9.7, 419.0], [9.8, 423.0], [9.9, 426.0], [10.0, 430.0], [10.1, 434.0], [10.2, 438.0], [10.3, 441.0], [10.4, 443.0], [10.5, 446.0], [10.6, 449.0], [10.7, 451.0], [10.8, 453.0], [10.9, 455.0], [11.0, 457.0], [11.1, 459.0], [11.2, 461.0], [11.3, 463.0], [11.4, 465.0], [11.5, 466.0], [11.6, 468.0], [11.7, 471.0], [11.8, 473.0], [11.9, 474.0], [12.0, 476.0], [12.1, 478.0], [12.2, 479.0], [12.3, 481.0], [12.4, 483.0], [12.5, 484.0], [12.6, 486.0], [12.7, 488.0], [12.8, 489.0], [12.9, 490.0], [13.0, 492.0], [13.1, 493.0], [13.2, 495.0], [13.3, 497.0], [13.4, 498.0], [13.5, 500.0], [13.6, 501.0], [13.7, 503.0], [13.8, 504.0], [13.9, 506.0], [14.0, 508.0], [14.1, 509.0], [14.2, 511.0], [14.3, 512.0], [14.4, 514.0], [14.5, 515.0], [14.6, 517.0], [14.7, 519.0], [14.8, 520.0], [14.9, 522.0], [15.0, 524.0], [15.1, 526.0], [15.2, 527.0], [15.3, 529.0], [15.4, 531.0], [15.5, 532.0], [15.6, 533.0], [15.7, 535.0], [15.8, 536.0], [15.9, 537.0], [16.0, 539.0], [16.1, 540.0], [16.2, 541.0], [16.3, 543.0], [16.4, 543.0], [16.5, 545.0], [16.6, 546.0], [16.7, 548.0], [16.8, 549.0], [16.9, 550.0], [17.0, 551.0], [17.1, 553.0], [17.2, 554.0], [17.3, 555.0], [17.4, 556.0], [17.5, 557.0], [17.6, 558.0], [17.7, 559.0], [17.8, 560.0], [17.9, 561.0], [18.0, 562.0], [18.1, 563.0], [18.2, 564.0], [18.3, 564.0], [18.4, 565.0], [18.5, 566.0], [18.6, 566.0], [18.7, 567.0], [18.8, 568.0], [18.9, 569.0], [19.0, 569.0], [19.1, 570.0], [19.2, 571.0], [19.3, 571.0], [19.4, 572.0], [19.5, 573.0], [19.6, 573.0], [19.7, 574.0], [19.8, 575.0], [19.9, 576.0], [20.0, 577.0], [20.1, 577.0], [20.2, 578.0], [20.3, 579.0], [20.4, 580.0], [20.5, 580.0], [20.6, 581.0], [20.7, 582.0], [20.8, 583.0], [20.9, 583.0], [21.0, 584.0], [21.1, 585.0], [21.2, 585.0], [21.3, 586.0], [21.4, 586.0], [21.5, 587.0], [21.6, 588.0], [21.7, 589.0], [21.8, 589.0], [21.9, 590.0], [22.0, 590.0], [22.1, 591.0], [22.2, 592.0], [22.3, 592.0], [22.4, 593.0], [22.5, 594.0], [22.6, 594.0], [22.7, 595.0], [22.8, 595.0], [22.9, 596.0], [23.0, 596.0], [23.1, 597.0], [23.2, 597.0], [23.3, 598.0], [23.4, 599.0], [23.5, 599.0], [23.6, 600.0], [23.7, 600.0], [23.8, 600.0], [23.9, 601.0], [24.0, 601.0], [24.1, 602.0], [24.2, 602.0], [24.3, 603.0], [24.4, 603.0], [24.5, 604.0], [24.6, 604.0], [24.7, 604.0], [24.8, 605.0], [24.9, 605.0], [25.0, 606.0], [25.1, 606.0], [25.2, 607.0], [25.3, 607.0], [25.4, 607.0], [25.5, 608.0], [25.6, 608.0], [25.7, 609.0], [25.8, 609.0], [25.9, 610.0], [26.0, 610.0], [26.1, 611.0], [26.2, 611.0], [26.3, 611.0], [26.4, 612.0], [26.5, 612.0], [26.6, 612.0], [26.7, 613.0], [26.8, 613.0], [26.9, 613.0], [27.0, 614.0], [27.1, 614.0], [27.2, 614.0], [27.3, 615.0], [27.4, 615.0], [27.5, 616.0], [27.6, 616.0], [27.7, 616.0], [27.8, 616.0], [27.9, 617.0], [28.0, 617.0], [28.1, 618.0], [28.2, 618.0], [28.3, 618.0], [28.4, 619.0], [28.5, 619.0], [28.6, 619.0], [28.7, 620.0], [28.8, 620.0], [28.9, 621.0], [29.0, 621.0], [29.1, 622.0], [29.2, 622.0], [29.3, 622.0], [29.4, 623.0], [29.5, 623.0], [29.6, 623.0], [29.7, 624.0], [29.8, 624.0], [29.9, 624.0], [30.0, 625.0], [30.1, 625.0], [30.2, 625.0], [30.3, 626.0], [30.4, 626.0], [30.5, 626.0], [30.6, 627.0], [30.7, 627.0], [30.8, 627.0], [30.9, 628.0], [31.0, 628.0], [31.1, 628.0], [31.2, 629.0], [31.3, 629.0], [31.4, 629.0], [31.5, 630.0], [31.6, 630.0], [31.7, 630.0], [31.8, 631.0], [31.9, 631.0], [32.0, 631.0], [32.1, 632.0], [32.2, 632.0], [32.3, 632.0], [32.4, 633.0], [32.5, 633.0], [32.6, 633.0], [32.7, 634.0], [32.8, 634.0], [32.9, 634.0], [33.0, 635.0], [33.1, 635.0], [33.2, 636.0], [33.3, 636.0], [33.4, 636.0], [33.5, 636.0], [33.6, 637.0], [33.7, 637.0], [33.8, 637.0], [33.9, 638.0], [34.0, 638.0], [34.1, 638.0], [34.2, 639.0], [34.3, 639.0], [34.4, 639.0], [34.5, 640.0], [34.6, 640.0], [34.7, 640.0], [34.8, 641.0], [34.9, 641.0], [35.0, 641.0], [35.1, 641.0], [35.2, 642.0], [35.3, 642.0], [35.4, 642.0], [35.5, 643.0], [35.6, 643.0], [35.7, 643.0], [35.8, 644.0], [35.9, 644.0], [36.0, 644.0], [36.1, 644.0], [36.2, 645.0], [36.3, 645.0], [36.4, 645.0], [36.5, 646.0], [36.6, 646.0], [36.7, 646.0], [36.8, 647.0], [36.9, 647.0], [37.0, 647.0], [37.1, 647.0], [37.2, 648.0], [37.3, 648.0], [37.4, 648.0], [37.5, 649.0], [37.6, 649.0], [37.7, 649.0], [37.8, 650.0], [37.9, 650.0], [38.0, 650.0], [38.1, 650.0], [38.2, 651.0], [38.3, 651.0], [38.4, 651.0], [38.5, 651.0], [38.6, 652.0], [38.7, 652.0], [38.8, 652.0], [38.9, 652.0], [39.0, 653.0], [39.1, 653.0], [39.2, 653.0], [39.3, 653.0], [39.4, 654.0], [39.5, 654.0], [39.6, 655.0], [39.7, 655.0], [39.8, 655.0], [39.9, 655.0], [40.0, 656.0], [40.1, 656.0], [40.2, 656.0], [40.3, 656.0], [40.4, 657.0], [40.5, 657.0], [40.6, 657.0], [40.7, 658.0], [40.8, 658.0], [40.9, 658.0], [41.0, 659.0], [41.1, 659.0], [41.2, 659.0], [41.3, 659.0], [41.4, 660.0], [41.5, 660.0], [41.6, 660.0], [41.7, 660.0], [41.8, 661.0], [41.9, 661.0], [42.0, 661.0], [42.1, 662.0], [42.2, 662.0], [42.3, 662.0], [42.4, 662.0], [42.5, 663.0], [42.6, 663.0], [42.7, 663.0], [42.8, 663.0], [42.9, 664.0], [43.0, 664.0], [43.1, 664.0], [43.2, 664.0], [43.3, 665.0], [43.4, 665.0], [43.5, 665.0], [43.6, 665.0], [43.7, 666.0], [43.8, 666.0], [43.9, 666.0], [44.0, 666.0], [44.1, 667.0], [44.2, 667.0], [44.3, 667.0], [44.4, 667.0], [44.5, 667.0], [44.6, 668.0], [44.7, 668.0], [44.8, 668.0], [44.9, 668.0], [45.0, 669.0], [45.1, 669.0], [45.2, 669.0], [45.3, 669.0], [45.4, 670.0], [45.5, 670.0], [45.6, 670.0], [45.7, 670.0], [45.8, 671.0], [45.9, 671.0], [46.0, 671.0], [46.1, 671.0], [46.2, 672.0], [46.3, 672.0], [46.4, 672.0], [46.5, 672.0], [46.6, 673.0], [46.7, 673.0], [46.8, 673.0], [46.9, 673.0], [47.0, 674.0], [47.1, 674.0], [47.2, 674.0], [47.3, 674.0], [47.4, 674.0], [47.5, 675.0], [47.6, 675.0], [47.7, 675.0], [47.8, 676.0], [47.9, 676.0], [48.0, 676.0], [48.1, 676.0], [48.2, 676.0], [48.3, 677.0], [48.4, 677.0], [48.5, 677.0], [48.6, 677.0], [48.7, 678.0], [48.8, 678.0], [48.9, 678.0], [49.0, 678.0], [49.1, 679.0], [49.2, 679.0], [49.3, 679.0], [49.4, 679.0], [49.5, 680.0], [49.6, 680.0], [49.7, 680.0], [49.8, 680.0], [49.9, 680.0], [50.0, 681.0], [50.1, 681.0], [50.2, 681.0], [50.3, 681.0], [50.4, 681.0], [50.5, 682.0], [50.6, 682.0], [50.7, 682.0], [50.8, 682.0], [50.9, 683.0], [51.0, 683.0], [51.1, 683.0], [51.2, 683.0], [51.3, 684.0], [51.4, 684.0], [51.5, 684.0], [51.6, 684.0], [51.7, 685.0], [51.8, 685.0], [51.9, 685.0], [52.0, 685.0], [52.1, 685.0], [52.2, 686.0], [52.3, 686.0], [52.4, 686.0], [52.5, 686.0], [52.6, 687.0], [52.7, 687.0], [52.8, 687.0], [52.9, 687.0], [53.0, 688.0], [53.1, 688.0], [53.2, 688.0], [53.3, 688.0], [53.4, 689.0], [53.5, 689.0], [53.6, 689.0], [53.7, 689.0], [53.8, 690.0], [53.9, 690.0], [54.0, 690.0], [54.1, 690.0], [54.2, 690.0], [54.3, 691.0], [54.4, 691.0], [54.5, 691.0], [54.6, 691.0], [54.7, 691.0], [54.8, 692.0], [54.9, 692.0], [55.0, 692.0], [55.1, 692.0], [55.2, 693.0], [55.3, 693.0], [55.4, 693.0], [55.5, 693.0], [55.6, 694.0], [55.7, 694.0], [55.8, 694.0], [55.9, 694.0], [56.0, 695.0], [56.1, 695.0], [56.2, 695.0], [56.3, 695.0], [56.4, 695.0], [56.5, 696.0], [56.6, 696.0], [56.7, 696.0], [56.8, 696.0], [56.9, 697.0], [57.0, 697.0], [57.1, 697.0], [57.2, 697.0], [57.3, 698.0], [57.4, 698.0], [57.5, 698.0], [57.6, 698.0], [57.7, 698.0], [57.8, 699.0], [57.9, 699.0], [58.0, 699.0], [58.1, 699.0], [58.2, 700.0], [58.3, 700.0], [58.4, 700.0], [58.5, 700.0], [58.6, 701.0], [58.7, 701.0], [58.8, 701.0], [58.9, 701.0], [59.0, 701.0], [59.1, 702.0], [59.2, 702.0], [59.3, 702.0], [59.4, 702.0], [59.5, 703.0], [59.6, 703.0], [59.7, 703.0], [59.8, 703.0], [59.9, 703.0], [60.0, 704.0], [60.1, 704.0], [60.2, 704.0], [60.3, 704.0], [60.4, 705.0], [60.5, 705.0], [60.6, 705.0], [60.7, 705.0], [60.8, 705.0], [60.9, 706.0], [61.0, 706.0], [61.1, 706.0], [61.2, 707.0], [61.3, 707.0], [61.4, 707.0], [61.5, 707.0], [61.6, 708.0], [61.7, 708.0], [61.8, 708.0], [61.9, 708.0], [62.0, 708.0], [62.1, 709.0], [62.2, 709.0], [62.3, 709.0], [62.4, 709.0], [62.5, 709.0], [62.6, 710.0], [62.7, 710.0], [62.8, 710.0], [62.9, 710.0], [63.0, 711.0], [63.1, 711.0], [63.2, 711.0], [63.3, 711.0], [63.4, 712.0], [63.5, 712.0], [63.6, 712.0], [63.7, 712.0], [63.8, 712.0], [63.9, 713.0], [64.0, 713.0], [64.1, 713.0], [64.2, 713.0], [64.3, 714.0], [64.4, 714.0], [64.5, 714.0], [64.6, 714.0], [64.7, 714.0], [64.8, 715.0], [64.9, 715.0], [65.0, 715.0], [65.1, 715.0], [65.2, 716.0], [65.3, 716.0], [65.4, 716.0], [65.5, 716.0], [65.6, 717.0], [65.7, 717.0], [65.8, 717.0], [65.9, 717.0], [66.0, 717.0], [66.1, 718.0], [66.2, 718.0], [66.3, 718.0], [66.4, 718.0], [66.5, 718.0], [66.6, 719.0], [66.7, 719.0], [66.8, 719.0], [66.9, 719.0], [67.0, 720.0], [67.1, 720.0], [67.2, 720.0], [67.3, 720.0], [67.4, 720.0], [67.5, 721.0], [67.6, 721.0], [67.7, 721.0], [67.8, 721.0], [67.9, 722.0], [68.0, 722.0], [68.1, 722.0], [68.2, 722.0], [68.3, 723.0], [68.4, 723.0], [68.5, 723.0], [68.6, 723.0], [68.7, 723.0], [68.8, 724.0], [68.9, 724.0], [69.0, 724.0], [69.1, 725.0], [69.2, 725.0], [69.3, 725.0], [69.4, 725.0], [69.5, 726.0], [69.6, 726.0], [69.7, 726.0], [69.8, 726.0], [69.9, 727.0], [70.0, 727.0], [70.1, 727.0], [70.2, 727.0], [70.3, 727.0], [70.4, 728.0], [70.5, 728.0], [70.6, 728.0], [70.7, 729.0], [70.8, 729.0], [70.9, 729.0], [71.0, 729.0], [71.1, 729.0], [71.2, 730.0], [71.3, 730.0], [71.4, 730.0], [71.5, 730.0], [71.6, 731.0], [71.7, 731.0], [71.8, 731.0], [71.9, 731.0], [72.0, 732.0], [72.1, 732.0], [72.2, 732.0], [72.3, 732.0], [72.4, 733.0], [72.5, 733.0], [72.6, 733.0], [72.7, 733.0], [72.8, 733.0], [72.9, 734.0], [73.0, 734.0], [73.1, 734.0], [73.2, 734.0], [73.3, 735.0], [73.4, 735.0], [73.5, 735.0], [73.6, 735.0], [73.7, 736.0], [73.8, 736.0], [73.9, 736.0], [74.0, 736.0], [74.1, 737.0], [74.2, 737.0], [74.3, 737.0], [74.4, 737.0], [74.5, 737.0], [74.6, 738.0], [74.7, 738.0], [74.8, 738.0], [74.9, 739.0], [75.0, 739.0], [75.1, 739.0], [75.2, 739.0], [75.3, 740.0], [75.4, 740.0], [75.5, 740.0], [75.6, 740.0], [75.7, 740.0], [75.8, 741.0], [75.9, 741.0], [76.0, 741.0], [76.1, 742.0], [76.2, 742.0], [76.3, 742.0], [76.4, 742.0], [76.5, 743.0], [76.6, 743.0], [76.7, 743.0], [76.8, 744.0], [76.9, 744.0], [77.0, 744.0], [77.1, 744.0], [77.2, 745.0], [77.3, 745.0], [77.4, 745.0], [77.5, 746.0], [77.6, 746.0], [77.7, 746.0], [77.8, 747.0], [77.9, 747.0], [78.0, 747.0], [78.1, 747.0], [78.2, 748.0], [78.3, 748.0], [78.4, 748.0], [78.5, 749.0], [78.6, 749.0], [78.7, 749.0], [78.8, 750.0], [78.9, 750.0], [79.0, 750.0], [79.1, 751.0], [79.2, 751.0], [79.3, 751.0], [79.4, 752.0], [79.5, 752.0], [79.6, 752.0], [79.7, 753.0], [79.8, 753.0], [79.9, 753.0], [80.0, 754.0], [80.1, 754.0], [80.2, 754.0], [80.3, 755.0], [80.4, 755.0], [80.5, 755.0], [80.6, 756.0], [80.7, 756.0], [80.8, 756.0], [80.9, 757.0], [81.0, 757.0], [81.1, 757.0], [81.2, 758.0], [81.3, 758.0], [81.4, 758.0], [81.5, 759.0], [81.6, 759.0], [81.7, 759.0], [81.8, 760.0], [81.9, 760.0], [82.0, 760.0], [82.1, 761.0], [82.2, 761.0], [82.3, 762.0], [82.4, 762.0], [82.5, 763.0], [82.6, 763.0], [82.7, 763.0], [82.8, 764.0], [82.9, 764.0], [83.0, 764.0], [83.1, 765.0], [83.2, 765.0], [83.3, 766.0], [83.4, 766.0], [83.5, 767.0], [83.6, 767.0], [83.7, 768.0], [83.8, 768.0], [83.9, 769.0], [84.0, 769.0], [84.1, 769.0], [84.2, 770.0], [84.3, 770.0], [84.4, 771.0], [84.5, 771.0], [84.6, 772.0], [84.7, 772.0], [84.8, 773.0], [84.9, 773.0], [85.0, 774.0], [85.1, 774.0], [85.2, 775.0], [85.3, 775.0], [85.4, 775.0], [85.5, 776.0], [85.6, 776.0], [85.7, 777.0], [85.8, 777.0], [85.9, 778.0], [86.0, 778.0], [86.1, 779.0], [86.2, 779.0], [86.3, 780.0], [86.4, 780.0], [86.5, 781.0], [86.6, 782.0], [86.7, 782.0], [86.8, 783.0], [86.9, 783.0], [87.0, 784.0], [87.1, 785.0], [87.2, 785.0], [87.3, 786.0], [87.4, 786.0], [87.5, 787.0], [87.6, 788.0], [87.7, 788.0], [87.8, 789.0], [87.9, 789.0], [88.0, 790.0], [88.1, 790.0], [88.2, 791.0], [88.3, 792.0], [88.4, 792.0], [88.5, 793.0], [88.6, 794.0], [88.7, 794.0], [88.8, 795.0], [88.9, 795.0], [89.0, 796.0], [89.1, 797.0], [89.2, 797.0], [89.3, 798.0], [89.4, 799.0], [89.5, 799.0], [89.6, 800.0], [89.7, 801.0], [89.8, 802.0], [89.9, 802.0], [90.0, 803.0], [90.1, 804.0], [90.2, 805.0], [90.3, 805.0], [90.4, 806.0], [90.5, 807.0], [90.6, 808.0], [90.7, 809.0], [90.8, 809.0], [90.9, 810.0], [91.0, 811.0], [91.1, 812.0], [91.2, 813.0], [91.3, 814.0], [91.4, 815.0], [91.5, 815.0], [91.6, 816.0], [91.7, 817.0], [91.8, 818.0], [91.9, 819.0], [92.0, 820.0], [92.1, 820.0], [92.2, 821.0], [92.3, 822.0], [92.4, 823.0], [92.5, 824.0], [92.6, 825.0], [92.7, 826.0], [92.8, 827.0], [92.9, 828.0], [93.0, 829.0], [93.1, 830.0], [93.2, 831.0], [93.3, 832.0], [93.4, 833.0], [93.5, 834.0], [93.6, 835.0], [93.7, 837.0], [93.8, 838.0], [93.9, 839.0], [94.0, 841.0], [94.1, 842.0], [94.2, 844.0], [94.3, 845.0], [94.4, 846.0], [94.5, 848.0], [94.6, 850.0], [94.7, 852.0], [94.8, 854.0], [94.9, 855.0], [95.0, 857.0], [95.1, 860.0], [95.2, 862.0], [95.3, 864.0], [95.4, 867.0], [95.5, 869.0], [95.6, 872.0], [95.7, 874.0], [95.8, 877.0], [95.9, 879.0], [96.0, 882.0], [96.1, 885.0], [96.2, 887.0], [96.3, 890.0], [96.4, 893.0], [96.5, 896.0], [96.6, 898.0], [96.7, 902.0], [96.8, 906.0], [96.9, 910.0], [97.0, 914.0], [97.1, 920.0], [97.2, 925.0], [97.3, 931.0], [97.4, 936.0], [97.5, 941.0], [97.6, 948.0], [97.7, 958.0], [97.8, 967.0], [97.9, 979.0], [98.0, 992.0], [98.1, 1009.0], [98.2, 1032.0], [98.3, 1059.0], [98.4, 1077.0], [98.5, 1096.0], [98.6, 1110.0], [98.7, 1126.0], [98.8, 1163.0], [98.9, 1192.0], [99.0, 1244.0], [99.1, 1274.0], [99.2, 1301.0], [99.3, 1328.0], [99.4, 1350.0], [99.5, 1369.0], [99.6, 1401.0], [99.7, 1428.0], [99.8, 1464.0], [99.9, 1533.0]], "isOverall": false, "label": "POST employee", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 39771.0, "series": [{"data": [[0.0, 637.0], [2100.0, 3.0], [2200.0, 3.0], [600.0, 5904.0], [700.0, 14748.0], [200.0, 626.0], [800.0, 10007.0], [900.0, 2309.0], [1000.0, 494.0], [1100.0, 196.0], [300.0, 784.0], [1200.0, 152.0], [1300.0, 129.0], [1400.0, 160.0], [1500.0, 101.0], [100.0, 653.0], [400.0, 1008.0], [1600.0, 19.0], [1700.0, 7.0], [1800.0, 2.0], [1900.0, 1.0], [500.0, 2055.0], [2000.0, 2.0]], "isOverall": false, "label": "GET All employees", "isController": false}, {"data": [[0.0, 39771.0], [36100.0, 1.0], [35600.0, 1.0], [35700.0, 1.0], [35800.0, 1.0], [35900.0, 1.0], [600.0, 2.0], [200.0, 44.0], [800.0, 1.0], [1000.0, 2.0], [300.0, 28.0], [19300.0, 3.0], [19200.0, 1.0], [19400.0, 1.0], [19700.0, 1.0], [19500.0, 1.0], [100.0, 105.0], [400.0, 24.0], [500.0, 11.0]], "isOverall": false, "label": "GET thread name", "isController": false}, {"data": [[0.0, 1448.0], [2100.0, 4.0], [600.0, 14541.0], [2600.0, 1.0], [700.0, 11040.0], [3100.0, 1.0], [200.0, 789.0], [800.0, 2144.0], [900.0, 500.0], [1000.0, 212.0], [1100.0, 129.0], [300.0, 1109.0], [1200.0, 145.0], [1300.0, 186.0], [1400.0, 84.0], [1500.0, 32.0], [100.0, 587.0], [400.0, 2014.0], [1600.0, 9.0], [1700.0, 1.0], [1800.0, 2.0], [1900.0, 2.0], [500.0, 5015.0], [2000.0, 5.0]], "isOverall": false, "label": "GET employee by id", "isController": false}, {"data": [[0.0, 1253.0], [2100.0, 2.0], [2200.0, 1.0], [600.0, 13821.0], [700.0, 12555.0], [200.0, 772.0], [800.0, 2844.0], [900.0, 563.0], [1000.0, 196.0], [1100.0, 152.0], [300.0, 1006.0], [1200.0, 113.0], [1300.0, 157.0], [1400.0, 108.0], [1500.0, 30.0], [100.0, 601.0], [400.0, 1760.0], [1600.0, 10.0], [1700.0, 2.0], [1800.0, 3.0], [1900.0, 3.0], [500.0, 4043.0], [2000.0, 5.0]], "isOverall": false, "label": "POST employee", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 36100.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 260.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 104634.0, "series": [{"data": [[0.0, 55106.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 104634.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 260.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 91.28476307453637, "minX": 1.73470878E12, "maxY": 200.0, "series": [{"data": [[1.73470914E12, 180.6902774306423], [1.73470896E12, 200.0], [1.73470902E12, 200.0], [1.73470884E12, 199.18510988060106], [1.7347089E12, 200.0], [1.7347092E12, 126.18459990530361], [1.73470878E12, 91.28476307453637], [1.73470908E12, 195.10842444968875]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7347092E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 3.962962962962963, "minX": 1.0, "maxY": 812.4629629629624, "series": [{"data": [[2.0, 79.5], [3.0, 75.25], [4.0, 130.2], [5.0, 195.0], [6.0, 102.92307692307692], [7.0, 68.08333333333334], [8.0, 61.120000000000005], [9.0, 81.86274509803921], [10.0, 69.73076923076923], [11.0, 77.73333333333332], [12.0, 86.17073170731709], [13.0, 75.18750000000001], [14.0, 74.89999999999998], [15.0, 81.14285714285714], [16.0, 92.64864864864865], [17.0, 90.48275862068965], [18.0, 87.58333333333334], [19.0, 93.2333333333333], [20.0, 79.27272727272727], [21.0, 90.87179487179486], [22.0, 115.8529411764706], [23.0, 135.7096774193548], [24.0, 179.0344827586207], [25.0, 161.48000000000005], [26.0, 147.58333333333331], [27.0, 209.44827586206895], [28.0, 137.12], [29.0, 171.23999999999998], [30.0, 188.99999999999997], [31.0, 207.3076923076923], [32.0, 188.60869565217394], [33.0, 209.57692307692315], [34.0, 203.00000000000003], [35.0, 250.77272727272725], [36.0, 233.80000000000004], [37.0, 223.39130434782606], [38.0, 269.70588235294116], [39.0, 228.16666666666669], [40.0, 225.03703703703704], [41.0, 202.3235294117647], [42.0, 216.52173913043478], [43.0, 240.72500000000002], [44.0, 285.4545454545455], [45.0, 271.1818181818182], [46.0, 292.25925925925935], [47.0, 263.9], [48.0, 285.76], [49.0, 265.7837837837837], [50.0, 266.75862068965523], [51.0, 265.11999999999995], [52.0, 302.7906976744186], [53.0, 267.53846153846155], [54.0, 305.88095238095235], [55.0, 257.9047619047619], [56.0, 275.6923076923077], [57.0, 302.42307692307696], [58.0, 304.19047619047615], [59.0, 318.7391304347827], [60.0, 357.55172413793093], [61.0, 399.47499999999997], [62.0, 353.46666666666675], [63.0, 290.9130434782609], [64.0, 311.0416666666667], [65.0, 445.02040816326524], [66.0, 292.19047619047615], [67.0, 434.0512820512821], [68.0, 495.3272727272727], [69.0, 411.5428571428571], [70.0, 388.7419354838709], [71.0, 375.8749999999999], [72.0, 312.90909090909093], [73.0, 351.8400000000001], [74.0, 354.27272727272725], [75.0, 357.1538461538462], [76.0, 378.6774193548387], [77.0, 450.7187499999999], [78.0, 455.59375000000006], [79.0, 460.9384615384616], [80.0, 440.85714285714283], [81.0, 419.0], [82.0, 374.16666666666674], [83.0, 426.54687499999983], [84.0, 388.20000000000005], [85.0, 414.88], [86.0, 395.4285714285715], [87.0, 416.9130434782609], [88.0, 419.00000000000006], [89.0, 417.34210526315786], [90.0, 369.22033898305074], [91.0, 471.72307692307686], [92.0, 418.3947368421052], [93.0, 409.89285714285717], [94.0, 383.67999999999995], [95.0, 440.60526315789474], [96.0, 470.59322033898303], [97.0, 429.66666666666663], [98.0, 396.3793103448275], [99.0, 498.58666666666653], [100.0, 455.59322033898303], [101.0, 486.04], [102.0, 437.2631578947369], [103.0, 475.5500000000001], [104.0, 535.7380952380955], [105.0, 434.71875000000006], [106.0, 446.55555555555566], [107.0, 441.92], [108.0, 513.9142857142858], [109.0, 543.3780487804878], [110.0, 522.7358490566035], [111.0, 505.3421052631578], [112.0, 521.470588235294], [113.0, 540.1935483870967], [114.0, 557.357142857143], [115.0, 516.0714285714286], [116.0, 544.7384615384616], [117.0, 542.1200000000001], [118.0, 543.0000000000001], [119.0, 570.4166666666666], [120.0, 583.923076923077], [121.0, 543.8484848484848], [122.0, 579.8999999999997], [123.0, 560.9666666666666], [124.0, 583.5641025641024], [125.0, 615.595744680851], [126.0, 594.2105263157894], [127.0, 564.0454545454545], [128.0, 590.8194444444445], [129.0, 604.3170731707319], [130.0, 578.4204545454543], [131.0, 628.666666666667], [132.0, 639.1066666666662], [133.0, 575.0526315789474], [134.0, 601.9302325581394], [135.0, 578.5409836065573], [136.0, 574.8571428571428], [137.0, 634.0188679245284], [138.0, 647.0571428571427], [139.0, 557.3], [140.0, 602.4666666666666], [141.0, 565.8846153846155], [142.0, 582.6538461538461], [143.0, 666.5131578947368], [144.0, 656.3642857142855], [145.0, 657.9387755102042], [146.0, 668.8936170212767], [147.0, 696.0249999999996], [148.0, 638.5389610389608], [149.0, 684.7787610619467], [150.0, 556.8461538461538], [151.0, 583.4772727272727], [152.0, 648.4791666666666], [153.0, 576.0399999999998], [154.0, 744.6395348837208], [155.0, 619.8918918918919], [156.0, 617.047619047619], [157.0, 672.0000000000003], [158.0, 690.8524096385544], [159.0, 651.0754716981129], [160.0, 632.4509803921569], [161.0, 697.2424242424242], [162.0, 664.7314814814815], [163.0, 783.3437500000002], [164.0, 710.2206896551725], [165.0, 681.2156862745101], [166.0, 733.9182389937105], [167.0, 690.1739130434783], [168.0, 739.599033816425], [169.0, 795.7042253521124], [170.0, 775.9999999999999], [171.0, 762.9765624999993], [172.0, 740.6440677966102], [173.0, 773.8489208633092], [174.0, 788.9354838709675], [175.0, 753.2336956521739], [176.0, 804.9473684210525], [177.0, 725.925925925926], [178.0, 745.2372881355935], [179.0, 751.1225382932167], [180.0, 805.3125000000001], [181.0, 739.1280000000004], [182.0, 750.4736842105261], [183.0, 644.12], [184.0, 797.3015075376877], [185.0, 769.3384615384616], [186.0, 773.2114537444935], [187.0, 792.0616509926858], [188.0, 776.3227848101263], [189.0, 779.0135135135133], [190.0, 812.4629629629624], [191.0, 774.5652173913046], [192.0, 811.847259658581], [193.0, 799.4856459330148], [194.0, 812.0398009950245], [195.0, 794.5795297372063], [196.0, 766.782608695652], [197.0, 796.2999999999997], [198.0, 784.9462365591402], [199.0, 705.446153846154], [200.0, 791.8874131678954], [1.0, 55.0]], "isOverall": false, "label": "GET All employees", "isController": false}, {"data": [[178.5271749999975, 732.4190500000002]], "isOverall": false, "label": "GET All employees-Aggregated", "isController": false}, {"data": [[2.0, 9.0], [3.0, 5.0], [4.0, 86.66666666666667], [5.0, 68.66666666666666], [6.0, 5.307692307692308], [7.0, 6.173913043478261], [8.0, 5.079999999999999], [9.0, 6.192307692307691], [10.0, 5.038461538461537], [11.0, 6.241379310344827], [12.0, 6.634146341463416], [13.0, 5.766666666666667], [14.0, 5.65625], [15.0, 6.0285714285714285], [16.0, 8.687500000000002], [17.0, 6.138888888888888], [18.0, 6.727272727272726], [19.0, 6.379310344827585], [20.0, 5.970588235294118], [21.0, 6.342105263157894], [22.0, 7.02857142857143], [23.0, 6.25], [24.0, 28.3076923076923], [25.0, 4.714285714285714], [26.0, 143.81818181818184], [27.0, 7.0], [28.0, 6.499999999999999], [29.0, 6.730769230769231], [30.0, 5.380952380952381], [31.0, 6.071428571428572], [32.0, 5.090909090909091], [33.0, 3.962962962962963], [34.0, 4.999999999999999], [35.0, 6.8181818181818175], [36.0, 5.4], [37.0, 6.391304347826087], [38.0, 5.0], [39.0, 5.379310344827585], [40.0, 7.3703703703703685], [41.0, 5.6060606060606055], [42.0, 4.541666666666667], [43.0, 8.405405405405405], [44.0, 14.4054054054054], [45.0, 5.0476190476190474], [46.0, 5.185185185185183], [47.0, 5.55], [48.0, 8.555555555555555], [49.0, 5.314285714285714], [50.0, 5.357142857142858], [51.0, 5.666666666666666], [52.0, 6.307692307692309], [53.0, 8.566666666666668], [54.0, 6.853658536585366], [55.0, 5.428571428571428], [56.0, 6.346153846153848], [57.0, 5.639999999999999], [58.0, 5.999999999999999], [59.0, 7.260869565217391], [60.0, 5.620689655172414], [61.0, 5.280487804878048], [62.0, 6.547619047619048], [63.0, 6.75], [64.0, 6.269230769230767], [65.0, 5.553191489361703], [66.0, 7.1], [67.0, 6.8999999999999995], [68.0, 6.12962962962963], [69.0, 5.971428571428571], [70.0, 6.419354838709678], [71.0, 5.44], [72.0, 6.681818181818182], [73.0, 5.8], [74.0, 7.045454545454545], [75.0, 6.423076923076922], [76.0, 5.281250000000002], [77.0, 4.375], [78.0, 7.393939393939393], [79.0, 5.781250000000001], [80.0, 5.151515151515152], [81.0, 5.758620689655172], [82.0, 8.919999999999996], [83.0, 4.523809523809525], [84.0, 6.433333333333333], [85.0, 5.080000000000001], [86.0, 11.571428571428575], [87.0, 6.333333333333333], [88.0, 8.578947368421051], [89.0, 4.871794871794872], [90.0, 5.474576271186441], [91.0, 6.6461538461538465], [92.0, 18.717948717948715], [93.0, 4.888888888888888], [94.0, 6.038461538461539], [95.0, 12.972222222222223], [96.0, 15.758064516129032], [97.0, 5.436363636363637], [98.0, 5.724137931034481], [99.0, 5.210526315789475], [100.0, 5.603448275862067], [101.0, 4.8235294117647065], [102.0, 6.944444444444445], [103.0, 5.589743589743589], [104.0, 5.372093023255815], [105.0, 4.78125], [106.0, 6.333333333333334], [107.0, 5.960000000000001], [108.0, 5.694444444444444], [109.0, 5.6951219512195115], [110.0, 5.3461538461538485], [111.0, 6.124999999999999], [112.0, 5.46], [113.0, 4.818181818181818], [114.0, 4.888888888888889], [115.0, 5.384615384615384], [116.0, 6.234375], [117.0, 12.72549019607843], [118.0, 4.655172413793103], [119.0, 5.6], [120.0, 5.186046511627906], [121.0, 6.323529411764706], [122.0, 5.458333333333332], [123.0, 5.100000000000001], [124.0, 6.846153846153846], [125.0, 4.895833333333334], [126.0, 6.0588235294117645], [127.0, 6.695652173913044], [128.0, 5.366197183098591], [129.0, 5.523809523809525], [130.0, 6.340909090909091], [131.0, 5.583333333333333], [132.0, 6.592105263157897], [133.0, 5.6739130434782625], [134.0, 5.651685393258426], [135.0, 5.017241379310347], [136.0, 5.805555555555557], [137.0, 5.584905660377359], [138.0, 37.33333333333336], [139.0, 7.708333333333332], [140.0, 7.103448275862069], [141.0, 5.5], [142.0, 4.974025974025974], [143.0, 4.701298701298702], [144.0, 5.170212765957446], [145.0, 4.938775510204082], [146.0, 5.21220159151193], [147.0, 6.987500000000001], [148.0, 5.77631578947369], [149.0, 9.070175438596497], [150.0, 6.097560975609755], [151.0, 4.794871794871794], [152.0, 5.038461538461537], [153.0, 5.913043478260869], [154.0, 11.924731182795695], [155.0, 6.199999999999999], [156.0, 17.88095238095238], [157.0, 20.733333333333327], [158.0, 32.15243902439024], [159.0, 42.21126760563379], [160.0, 14.484848484848484], [161.0, 6.484848484848486], [162.0, 40.23853211009174], [163.0, 17.56842105263157], [164.0, 10.714285714285714], [165.0, 23.019801980198032], [166.0, 134.33532934131728], [167.0, 82.2], [168.0, 8.58], [169.0, 6.742857142857144], [170.0, 5.490909090909091], [171.0, 8.802325581395353], [172.0, 5.31858407079646], [173.0, 6.521739130434782], [174.0, 5.989247311827955], [175.0, 213.05347593582889], [176.0, 423.82403433476395], [177.0, 5.777777777777778], [178.0, 5.769491525423728], [179.0, 6.131004366812227], [180.0, 5.21164021164021], [181.0, 6.0395256916996045], [182.0, 10.443820224719099], [183.0, 6.1923076923076925], [184.0, 12.715006305170249], [185.0, 5.046875000000001], [186.0, 5.882743362831851], [187.0, 7.40354535974975], [188.0, 5.4873417721518996], [189.0, 5.909090909090908], [190.0, 5.597701149425287], [191.0, 5.543650793650791], [192.0, 6.089108910891097], [193.0, 6.311163895486937], [194.0, 6.396984924623117], [195.0, 5.665745856353586], [196.0, 8.795698924731182], [197.0, 5.682539682539677], [198.0, 5.329787234042552], [199.0, 6.761904761904763], [200.0, 14.6176059414592], [1.0, 34.0]], "isOverall": false, "label": "GET thread name", "isController": false}, {"data": [[178.52410000000097, 15.883699999999948]], "isOverall": false, "label": "GET thread name-Aggregated", "isController": false}, {"data": [[2.0, 74.33333333333334], [3.0, 30.666666666666664], [4.0, 92.0], [5.0, 54.24999999999999], [6.0, 9.52941176470588], [7.0, 8.454545454545455], [8.0, 8.916666666666666], [9.0, 9.019230769230772], [10.0, 8.954545454545453], [11.0, 8.000000000000002], [12.0, 11.64864864864865], [13.0, 16.176470588235293], [14.0, 15.035714285714285], [15.0, 19.447368421052637], [16.0, 31.111111111111107], [17.0, 20.379310344827584], [18.0, 21.631578947368425], [19.0, 24.107142857142865], [20.0, 30.166666666666668], [21.0, 28.634146341463417], [22.0, 36.49999999999999], [23.0, 52.83333333333332], [24.0, 57.52777777777778], [25.0, 83.08695652173914], [26.0, 132.21428571428572], [27.0, 67.65217391304348], [28.0, 51.76923076923077], [29.0, 75.09375000000001], [30.0, 79.28], [31.0, 92.13793103448275], [32.0, 123.21428571428571], [33.0, 66.72727272727272], [34.0, 65.86206896551724], [35.0, 89.59259259259258], [36.0, 141.7272727272727], [37.0, 98.91176470588233], [38.0, 110.85714285714286], [39.0, 125.70588235294119], [40.0, 97.23529411764706], [41.0, 98.2972972972973], [42.0, 106.99999999999997], [43.0, 155.79411764705887], [44.0, 157.42857142857144], [45.0, 176.76923076923077], [46.0, 180.03703703703707], [47.0, 172.58823529411768], [48.0, 174.26923076923075], [49.0, 172.80645161290323], [50.0, 176.46875], [51.0, 165.54838709677418], [52.0, 205.33333333333334], [53.0, 171.0967741935484], [54.0, 211.41666666666669], [55.0, 152.15384615384616], [56.0, 186.3103448275862], [57.0, 234.33333333333334], [58.0, 173.74074074074073], [59.0, 231.5], [60.0, 210.3870967741936], [61.0, 276.7058823529413], [62.0, 274.1219512195122], [63.0, 192.62068965517238], [64.0, 215.95], [65.0, 314.9555555555556], [66.0, 195.92307692307693], [67.0, 315.3571428571428], [68.0, 354.96923076923065], [69.0, 279.78378378378386], [70.0, 290.9090909090909], [71.0, 252.5909090909091], [72.0, 224.45833333333331], [73.0, 275.10714285714283], [74.0, 257.1176470588236], [75.0, 248.32000000000005], [76.0, 287.75000000000017], [77.0, 325.38235294117646], [78.0, 310.5000000000001], [79.0, 367.241379310345], [80.0, 335.44444444444434], [81.0, 289.21874999999994], [82.0, 273.6666666666667], [83.0, 344.04918032786884], [84.0, 246.97142857142853], [85.0, 301.75999999999993], [86.0, 329.5], [87.0, 327.00000000000006], [88.0, 335.52941176470586], [89.0, 306.18181818181824], [90.0, 301.5820895522389], [91.0, 375.8541666666667], [92.0, 323.52941176470586], [93.0, 350.36585365853665], [94.0, 294.8095238095238], [95.0, 369.82222222222225], [96.0, 335.50000000000006], [97.0, 321.50000000000006], [98.0, 292.4736842105263], [99.0, 392.4285714285714], [100.0, 346.2833333333333], [101.0, 366.8730158730159], [102.0, 338.62500000000006], [103.0, 407.72727272727275], [104.0, 434.75], [105.0, 324.4583333333333], [106.0, 355.83720930232556], [107.0, 323.8214285714285], [108.0, 412.6875], [109.0, 440.36470588235284], [110.0, 417.92380952380944], [111.0, 417.06818181818187], [112.0, 428.9565217391305], [113.0, 453.72727272727263], [114.0, 407.7666666666666], [115.0, 409.53125], [116.0, 422.5423728813559], [117.0, 461.6545454545456], [118.0, 444.96774193548384], [119.0, 474.5909090909091], [120.0, 502.3809523809524], [121.0, 411.8205128205129], [122.0, 477.0566037735849], [123.0, 472.22727272727275], [124.0, 486.0769230769231], [125.0, 503.7894736842105], [126.0, 467.24], [127.0, 481.07142857142856], [128.0, 482.6962025316455], [129.0, 502.6176470588235], [130.0, 499.125], [131.0, 506.75949367088606], [132.0, 539.083333333333], [133.0, 478.16483516483504], [134.0, 495.3111111111112], [135.0, 491.6885245901641], [136.0, 481.67500000000007], [137.0, 561.2745098039214], [138.0, 531.4615384615383], [139.0, 426.79999999999995], [140.0, 500.32432432432427], [141.0, 520.8571428571429], [142.0, 485.1728395061728], [143.0, 554.4024390243904], [144.0, 552.1102941176468], [145.0, 510.38297872340416], [146.0, 548.9399477806791], [147.0, 567.329411764706], [148.0, 531.9496855345907], [149.0, 630.2976190476188], [150.0, 454.47368421052624], [151.0, 452.6142857142857], [152.0, 560.7096774193552], [153.0, 472.35], [154.0, 602.4166666666666], [155.0, 611.4000000000001], [156.0, 483.1111111111112], [157.0, 508.4306220095694], [158.0, 579.1703470031545], [159.0, 567.0333333333334], [160.0, 517.5142857142856], [161.0, 632.5789473684212], [162.0, 598.8691588785044], [163.0, 705.0114942528737], [164.0, 601.274647887324], [165.0, 623.593220338983], [166.0, 576.8076923076919], [167.0, 595.9090909090909], [168.0, 633.8605769230766], [169.0, 679.3508771929825], [170.0, 651.3823529411762], [171.0, 653.9058823529415], [172.0, 646.1186440677966], [173.0, 674.3658536585364], [174.0, 652.5477386934675], [175.0, 637.2613065326633], [176.0, 678.1983122362868], [177.0, 636.9999999999999], [178.0, 645.110714285714], [179.0, 642.8351409978306], [180.0, 685.4829545454542], [181.0, 640.6705882352942], [182.0, 640.1569148936173], [183.0, 553.1379310344827], [184.0, 668.4237500000007], [185.0, 695.3461538461539], [186.0, 675.7903930131001], [187.0, 685.7029598308683], [188.0, 671.1564625850344], [189.0, 669.0763052208838], [190.0, 696.2224824355974], [191.0, 670.4186046511634], [192.0, 717.0890099909163], [193.0, 702.5837320574163], [194.0, 724.9315789473685], [195.0, 699.8811475409841], [196.0, 653.7558139534885], [197.0, 684.401960784314], [198.0, 695.3877551020407], [199.0, 625.7678571428569], [200.0, 700.4064220183502], [1.0, 7.0]], "isOverall": false, "label": "GET employee by id", "isController": false}, {"data": [[178.5302750000007, 634.9486250000004]], "isOverall": false, "label": "GET employee by id-Aggregated", "isController": false}, {"data": [[2.0, 73.33333333333333], [3.0, 33.0], [4.0, 63.4], [5.0, 74.0], [6.0, 16.4375], [7.0, 28.190476190476186], [8.0, 11.36], [9.0, 12.867924528301884], [10.0, 15.380952380952381], [11.0, 11.823529411764707], [12.0, 16.775], [13.0, 23.366666666666667], [14.0, 21.677419354838708], [15.0, 24.36111111111111], [16.0, 34.03030303030303], [17.0, 27.93548387096774], [18.0, 33.13157894736843], [19.0, 39.666666666666664], [20.0, 25.3], [21.0, 33.47727272727273], [22.0, 57.425], [23.0, 64.69565217391305], [24.0, 55.25714285714287], [25.0, 74.86363636363635], [26.0, 94.70000000000002], [27.0, 78.95454545454544], [28.0, 70.46428571428571], [29.0, 76.875], [30.0, 95.23076923076923], [31.0, 110.35135135135133], [32.0, 131.91304347826082], [33.0, 131.875], [34.0, 119.03571428571429], [35.0, 121.8064516129032], [36.0, 156.61538461538464], [37.0, 124.32000000000001], [38.0, 148.34482758620686], [39.0, 140.31249999999997], [40.0, 115.51612903225806], [41.0, 113.5128205128205], [42.0, 125.17241379310349], [43.0, 173.9642857142857], [44.0, 168.86486486486487], [45.0, 181.44000000000003], [46.0, 181.96666666666664], [47.0, 187.04999999999998], [48.0, 165.77272727272728], [49.0, 178.37500000000003], [50.0, 167.8333333333333], [51.0, 152.66666666666663], [52.0, 203.0810810810811], [53.0, 184.24], [54.0, 216.07894736842098], [55.0, 166.50000000000003], [56.0, 202.85714285714283], [57.0, 228.51851851851853], [58.0, 193.42857142857142], [59.0, 234.25], [60.0, 228.31707317073173], [61.0, 284.88461538461536], [62.0, 273.87499999999994], [63.0, 201.2692307692308], [64.0, 217.42105263157896], [65.0, 306.8363636363637], [66.0, 219.9565217391304], [67.0, 331.0], [68.0, 348.84285714285716], [69.0, 304.28125], [70.0, 293.44], [71.0, 267.1666666666667], [72.0, 219.70370370370372], [73.0, 265.4], [74.0, 266.55], [75.0, 255.44827586206895], [76.0, 300.1428571428571], [77.0, 318.08333333333337], [78.0, 346.04761904761904], [79.0, 367.34042553191495], [80.0, 324.7560975609756], [81.0, 332.16666666666674], [82.0, 290.1904761904762], [83.0, 361.3962264150944], [84.0, 280.875], [85.0, 334.45098039215685], [86.0, 342.7307692307692], [87.0, 332.9259259259258], [88.0, 343.1904761904762], [89.0, 326.2564102564102], [90.0, 311.56363636363636], [91.0, 381.23188405797106], [92.0, 330.9285714285715], [93.0, 331.7307692307692], [94.0, 298.66666666666674], [95.0, 373.2368421052632], [96.0, 351.0571428571427], [97.0, 346.9038461538463], [98.0, 301.74999999999994], [99.0, 406.9041095890412], [100.0, 354.676923076923], [101.0, 402.3392857142858], [102.0, 333.46153846153857], [103.0, 418.2799999999999], [104.0, 443.82926829268285], [105.0, 347.02857142857147], [106.0, 385.02941176470597], [107.0, 348.2857142857143], [108.0, 403.88571428571424], [109.0, 453.8842105263159], [110.0, 427.2727272727272], [111.0, 432.2702702702703], [112.0, 445.9090909090909], [113.0, 463.54285714285703], [114.0, 437.1333333333334], [115.0, 442.578947368421], [116.0, 439.8771929824561], [117.0, 495.00000000000006], [118.0, 453.7857142857144], [119.0, 487.63636363636374], [120.0, 486.26666666666654], [121.0, 444.08108108108115], [122.0, 493.3018867924528], [123.0, 507.56521739130443], [124.0, 479.5], [125.0, 507.88636363636374], [126.0, 510.107142857143], [127.0, 479.1724137931035], [128.0, 486.04347826086956], [129.0, 538.0], [130.0, 491.3972602739727], [131.0, 514.1647058823534], [132.0, 553.0506329113925], [133.0, 493.93548387096797], [134.0, 522.4767441860464], [135.0, 485.79032258064507], [136.0, 504.7], [137.0, 558.2407407407408], [138.0, 538.5641025641027], [139.0, 490.0416666666667], [140.0, 507.90625000000006], [141.0, 482.15], [142.0, 518.8611111111109], [143.0, 592.7380952380951], [144.0, 558.9041095890411], [145.0, 570.2888888888889], [146.0, 578.5297297297295], [147.0, 578.0843373493977], [148.0, 560.6168831168832], [149.0, 618.6111111111113], [150.0, 465.4999999999999], [151.0, 496.46268656716416], [152.0, 582.5166666666667], [153.0, 558.6666666666666], [154.0, 686.9032258064517], [155.0, 616.8235294117649], [156.0, 561.1666666666665], [157.0, 601.7534883720932], [158.0, 613.6656441717791], [159.0, 593.3392857142856], [160.0, 584.6166666666664], [161.0, 688.5106382978722], [162.0, 585.1340206185565], [163.0, 680.5643564356435], [164.0, 629.134831460674], [165.0, 587.6630434782605], [166.0, 563.0967741935484], [167.0, 598.7272727272729], [168.0, 650.7452830188681], [169.0, 723.7272727272725], [170.0, 681.6354166666667], [171.0, 666.1380597014928], [172.0, 652.4655172413793], [173.0, 705.131386861314], [174.0, 693.6288659793817], [175.0, 691.8404255319149], [176.0, 698.832635983263], [177.0, 682.8], [178.0, 661.6524822695038], [179.0, 649.6393088552916], [180.0, 703.2425742574254], [181.0, 651.4918699186994], [182.0, 671.9051490514909], [183.0, 555.7777777777777], [184.0, 707.8657465495606], [185.0, 737.9024390243903], [186.0, 668.024122807018], [187.0, 704.4228751311647], [188.0, 691.2875], [189.0, 676.4655870445345], [190.0, 717.1856148491879], [191.0, 678.7603305785123], [192.0, 726.3417951042611], [193.0, 719.1201923076925], [194.0, 725.8115942028986], [195.0, 709.3856749311299], [196.0, 666.381443298969], [197.0, 707.5749999999999], [198.0, 726.7374999999998], [199.0, 667.7777777777779], [200.0, 712.8078955412898], [1.0, 8.0]], "isOverall": false, "label": "POST employee", "isController": false}, {"data": [[178.52887500000114, 649.6012999999948]], "isOverall": false, "label": "POST employee-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 200.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 56355.833333333336, "minX": 1.73470878E12, "maxY": 479075.05, "series": [{"data": [[1.73470914E12, 415229.5], [1.73470896E12, 421228.9], [1.73470902E12, 440713.2833333333], [1.73470884E12, 479075.05], [1.7347089E12, 459057.48333333334], [1.7347092E12, 355340.7833333333], [1.73470878E12, 315615.06666666665], [1.73470908E12, 430111.5]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.73470914E12, 72812.71666666666], [1.73470896E12, 73887.13333333333], [1.73470902E12, 77489.93333333333], [1.73470884E12, 84058.23333333334], [1.7347089E12, 80543.25], [1.7347092E12, 61437.1], [1.73470878E12, 56355.833333333336], [1.73470908E12, 75601.81666666667]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7347092E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 6.3154440154440055, "minX": 1.73470878E12, "maxY": 834.9813102498533, "series": [{"data": [[1.73470914E12, 778.407296650719], [1.73470896E12, 834.9813102498533], [1.73470902E12, 808.1090430532037], [1.73470884E12, 738.6211438474872], [1.7347089E12, 775.7101554029639], [1.7347092E12, 596.8551195727887], [1.73470878E12, 401.82508600158644], [1.73470908E12, 810.0833975346683]], "isOverall": false, "label": "GET All employees", "isController": false}, {"data": [[1.73470914E12, 34.94795836669335], [1.73470896E12, 6.37955485522948], [1.73470902E12, 40.60244131455379], [1.73470884E12, 7.162232204561154], [1.7347089E12, 6.483107497741633], [1.7347092E12, 17.767576709350074], [1.73470878E12, 7.211616161616178], [1.73470908E12, 6.3154440154440055]], "isOverall": false, "label": "GET thread name", "isController": false}, {"data": [[1.73470914E12, 665.2713085234095], [1.73470896E12, 740.5786052009465], [1.73470902E12, 709.6674802853953], [1.73470884E12, 652.6918685121099], [1.7347089E12, 684.9877344877345], [1.7347092E12, 480.95906845448025], [1.73470878E12, 313.7321848081446], [1.73470908E12, 715.7214093184416]], "isOverall": false, "label": "GET employee by id", "isController": false}, {"data": [[1.73470914E12, 687.3219219219219], [1.73470896E12, 750.4980314960634], [1.73470902E12, 725.4351259872142], [1.73470884E12, 668.4354447905865], [1.7347089E12, 697.798591040465], [1.7347092E12, 506.3836627768519], [1.73470878E12, 325.9443447037695], [1.73470908E12, 723.4051973051011]], "isOverall": false, "label": "POST employee", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7347092E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 6.312355212355204, "minX": 1.73470878E12, "maxY": 834.7273263820584, "series": [{"data": [[1.73470914E12, 778.1279904306207], [1.73470896E12, 834.7273263820584], [1.73470902E12, 807.740364730213], [1.73470884E12, 738.3740034662039], [1.7347089E12, 775.4627755692068], [1.7347092E12, 596.5465521244498], [1.73470878E12, 401.567081238423], [1.73470908E12, 809.7906394453016]], "isOverall": false, "label": "GET All employees", "isController": false}, {"data": [[1.73470914E12, 34.944755804643684], [1.73470896E12, 6.376403387827434], [1.73470902E12, 40.59774647887334], [1.73470884E12, 7.156703524533528], [1.7347089E12, 6.479855465221309], [1.7347092E12, 17.763952645566466], [1.73470878E12, 7.2010101010101], [1.73470908E12, 6.312355212355204]], "isOverall": false, "label": "GET thread name", "isController": false}, {"data": [[1.73470914E12, 665.1442577030817], [1.73470896E12, 740.45449172577], [1.73470902E12, 709.3957942170492], [1.73470884E12, 652.5717993079563], [1.7347089E12, 684.8448773448765], [1.7347092E12, 480.77840508115855], [1.73470878E12, 313.60062646828453], [1.73470908E12, 715.604736234114]], "isOverall": false, "label": "GET employee by id", "isController": false}, {"data": [[1.73470914E12, 687.1655655655643], [1.73470896E12, 750.3659448818872], [1.73470902E12, 725.2860097781138], [1.73470884E12, 668.2907580477658], [1.7347089E12, 697.650108381505], [1.7347092E12, 506.24267682781726], [1.73470878E12, 325.80174403693303], [1.73470908E12, 723.2667949951876]], "isOverall": false, "label": "POST employee", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7347092E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.73470878E12, "maxY": 33.959436619718225, "series": [{"data": [[1.73470914E12, 0.006778309409888358], [1.73470896E12, 0.003541215817430653], [1.73470902E12, 0.006204173716864083], [1.73470884E12, 0.0], [1.7347089E12, 0.0], [1.7347092E12, 0.022057116322266104], [1.73470878E12, 0.0], [1.73470908E12, 0.009052388289676387]], "isOverall": false, "label": "GET All employees", "isController": false}, {"data": [[1.73470914E12, 27.470576461168896], [1.73470896E12, 0.241087256253694], [1.73470902E12, 33.959436619718225], [1.73470884E12, 0.4471319972356602], [1.7347089E12, 0.22836495031616974], [1.7347092E12, 0.767818313602322], [1.73470878E12, 0.7053030303030302], [1.73470908E12, 0.21081081081081052]], "isOverall": false, "label": "GET thread name", "isController": false}, {"data": [[1.73470914E12, 4.0016006402560935E-4], [1.73470896E12, 0.0], [1.73470902E12, 3.755163349605698E-4], [1.73470884E12, 0.0], [1.7347089E12, 0.0], [1.7347092E12, 0.017407668783815534], [1.73470878E12, 0.0], [1.73470908E12, 3.8505968425105804E-4]], "isOverall": false, "label": "GET employee by id", "isController": false}, {"data": [[1.73470914E12, 0.0], [1.73470896E12, 0.0], [1.73470902E12, 0.0], [1.73470884E12, 0.0], [1.7347089E12, 0.0], [1.7347092E12, 0.0], [1.73470878E12, 0.0], [1.73470908E12, 0.0]], "isOverall": false, "label": "POST employee", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7347092E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.73470878E12, "maxY": 36142.0, "series": [{"data": [[1.73470914E12, 19730.0], [1.73470896E12, 3128.0], [1.73470902E12, 36142.0], [1.73470884E12, 1814.0], [1.7347089E12, 2149.0], [1.7347092E12, 1582.0], [1.73470878E12, 1405.0], [1.73470908E12, 2111.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.73470914E12, 1.0], [1.73470896E12, 1.0], [1.73470902E12, 1.0], [1.73470884E12, 1.0], [1.7347089E12, 1.0], [1.7347092E12, 1.0], [1.73470878E12, 1.0], [1.73470908E12, 1.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.73470914E12, 827.0], [1.73470896E12, 932.0], [1.73470902E12, 844.0], [1.73470884E12, 814.0], [1.7347089E12, 813.0], [1.7347092E12, 706.0], [1.73470878E12, 588.0], [1.73470908E12, 836.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.73470914E12, 1102.8700000000208], [1.73470896E12, 1357.0], [1.73470902E12, 1278.9600000000064], [1.73470884E12, 1018.9900000000016], [1.7347089E12, 1038.9900000000016], [1.7347092E12, 933.0], [1.73470878E12, 794.0], [1.73470908E12, 1004.9800000000032]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.73470914E12, 661.0], [1.73470896E12, 697.0], [1.73470902E12, 708.0], [1.73470884E12, 644.0], [1.7347089E12, 676.0], [1.7347092E12, 472.0], [1.73470878E12, 224.0], [1.73470908E12, 714.0]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.73470914E12, 876.0], [1.73470896E12, 1080.0], [1.73470902E12, 890.0], [1.73470884E12, 866.0], [1.7347089E12, 857.0], [1.7347092E12, 766.0], [1.73470878E12, 667.0], [1.73470908E12, 875.0]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7347092E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 10.0, "minX": 17.0, "maxY": 1249.0, "series": [{"data": [[17.0, 94.0], [53.0, 10.0], [171.0, 1021.0], [179.0, 444.0], [223.0, 1249.0], [225.0, 146.0], [231.0, 301.0], [236.0, 810.0], [239.0, 1116.0], [235.0, 405.0], [237.0, 246.0], [246.0, 966.5], [242.0, 364.0], [245.0, 190.0], [254.0, 821.5], [270.0, 970.5], [264.0, 905.0], [266.0, 995.5], [271.0, 1142.0], [262.0, 105.0], [256.0, 637.0], [282.0, 720.0], [284.0, 895.5], [275.0, 818.0], [286.0, 753.0], [280.0, 741.0], [272.0, 551.5], [289.0, 911.0], [301.0, 795.0], [295.0, 788.0], [290.0, 709.0], [288.0, 671.5], [292.0, 397.5], [298.0, 611.5], [302.0, 487.5], [299.0, 530.0], [300.0, 624.5], [294.0, 581.5], [317.0, 302.0], [311.0, 162.0], [309.0, 704.0], [308.0, 480.0], [315.0, 595.0], [306.0, 582.0], [307.0, 728.0], [304.0, 595.0], [312.0, 678.0], [318.0, 612.5], [319.0, 678.0], [314.0, 598.5], [313.0, 704.0], [332.0, 506.0], [321.0, 687.0], [329.0, 665.0], [327.0, 656.0], [320.0, 739.5], [326.0, 714.0], [324.0, 507.0], [333.0, 614.0], [334.0, 765.0], [323.0, 695.0], [322.0, 504.0], [335.0, 553.0], [331.0, 550.0], [330.0, 749.5], [328.0, 716.0], [351.0, 669.0], [337.0, 688.0], [341.0, 539.5], [345.0, 664.0], [344.0, 591.0], [338.0, 610.5], [342.0, 370.5], [343.0, 734.0], [336.0, 635.0], [340.0, 584.0], [339.0, 630.0], [350.0, 650.0], [349.0, 743.0], [348.0, 699.0], [346.0, 685.0], [347.0, 690.0], [364.0, 681.0], [359.0, 685.0], [357.0, 670.0], [356.0, 719.0], [352.0, 665.0], [367.0, 685.0], [360.0, 679.0], [361.0, 720.0], [366.0, 701.0], [365.0, 701.0], [355.0, 711.0], [354.0, 707.0], [353.0, 701.0], [363.0, 738.0], [362.0, 694.0], [358.0, 722.0], [381.0, 599.5], [368.0, 663.0], [372.0, 289.0], [370.0, 610.0], [369.0, 695.0], [376.0, 671.0], [383.0, 640.0], [380.0, 649.0], [371.0, 693.0], [377.0, 671.0], [378.0, 659.0], [379.0, 638.0], [375.0, 664.0], [373.0, 707.0], [396.0, 625.0], [389.0, 547.0], [398.0, 633.5], [388.0, 662.0], [386.0, 681.5], [385.0, 672.0], [387.0, 650.0], [397.0, 616.0], [399.0, 665.0], [393.0, 644.5], [395.0, 636.0], [394.0, 635.5], [392.0, 658.0], [384.0, 648.0], [390.0, 646.0], [391.0, 636.0], [402.0, 664.5], [400.0, 569.0], [410.0, 619.0], [406.0, 575.0], [415.0, 623.0], [408.0, 666.5], [412.0, 629.0], [409.0, 618.0], [405.0, 624.0], [404.0, 691.5], [411.0, 619.0], [407.0, 637.0], [401.0, 650.0], [431.0, 614.0], [416.0, 583.5], [423.0, 582.0], [428.0, 559.0], [426.0, 604.0], [419.0, 582.0], [422.0, 571.0], [421.0, 599.0], [441.0, 46.0], [434.0, 79.5], [443.0, 519.0], [437.0, 581.5], [445.0, 591.0], [438.0, 613.5], [456.0, 575.0], [467.0, 18.0], [507.0, 26.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 507.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 10.0, "minX": 17.0, "maxY": 1249.0, "series": [{"data": [[17.0, 94.0], [53.0, 10.0], [171.0, 1017.0], [179.0, 444.0], [223.0, 1249.0], [225.0, 146.0], [231.0, 301.0], [236.0, 810.0], [239.0, 1116.0], [235.0, 405.0], [237.0, 246.0], [246.0, 966.5], [242.0, 364.0], [245.0, 189.0], [254.0, 821.5], [270.0, 970.0], [264.0, 905.0], [266.0, 995.5], [271.0, 1141.0], [262.0, 105.0], [256.0, 637.0], [282.0, 720.0], [284.0, 895.0], [275.0, 818.0], [286.0, 753.0], [280.0, 741.0], [272.0, 551.5], [289.0, 911.0], [301.0, 795.0], [295.0, 788.0], [290.0, 709.0], [288.0, 671.5], [292.0, 397.0], [298.0, 609.0], [302.0, 487.5], [299.0, 530.0], [300.0, 624.5], [294.0, 581.5], [317.0, 302.0], [311.0, 162.0], [309.0, 704.0], [308.0, 480.0], [315.0, 594.5], [306.0, 582.0], [307.0, 728.0], [304.0, 595.0], [312.0, 678.0], [318.0, 612.0], [319.0, 678.0], [314.0, 598.5], [313.0, 704.0], [332.0, 506.0], [321.0, 687.0], [329.0, 665.0], [327.0, 656.0], [320.0, 739.0], [326.0, 714.0], [324.0, 507.0], [333.0, 614.0], [334.0, 765.0], [323.0, 695.0], [322.0, 503.5], [335.0, 553.0], [331.0, 550.0], [330.0, 749.0], [328.0, 716.0], [351.0, 669.0], [337.0, 687.5], [341.0, 538.5], [345.0, 664.0], [344.0, 591.0], [338.0, 610.5], [342.0, 370.0], [343.0, 734.0], [336.0, 635.0], [340.0, 584.0], [339.0, 630.0], [350.0, 650.0], [349.0, 743.0], [348.0, 699.0], [346.0, 684.5], [347.0, 690.0], [364.0, 681.0], [359.0, 685.0], [357.0, 670.0], [356.0, 719.0], [352.0, 665.0], [367.0, 685.0], [360.0, 679.0], [361.0, 720.0], [366.0, 701.0], [365.0, 701.0], [355.0, 711.0], [354.0, 707.0], [353.0, 701.0], [363.0, 738.0], [362.0, 694.0], [358.0, 721.0], [381.0, 599.0], [368.0, 663.0], [372.0, 289.0], [370.0, 609.5], [369.0, 695.0], [376.0, 671.0], [383.0, 640.0], [380.0, 649.0], [371.0, 693.0], [377.0, 671.0], [378.0, 659.0], [379.0, 638.0], [375.0, 663.0], [373.0, 706.0], [396.0, 625.0], [389.0, 547.0], [398.0, 633.5], [388.0, 662.0], [386.0, 681.0], [385.0, 672.0], [387.0, 650.0], [397.0, 616.0], [399.0, 665.0], [393.0, 644.5], [395.0, 636.0], [394.0, 635.5], [392.0, 657.5], [384.0, 648.0], [390.0, 646.0], [391.0, 635.0], [402.0, 664.5], [400.0, 569.0], [410.0, 619.0], [406.0, 575.0], [415.0, 621.0], [408.0, 666.0], [412.0, 627.5], [409.0, 618.0], [405.0, 624.0], [404.0, 691.0], [411.0, 619.0], [407.0, 637.0], [401.0, 650.0], [431.0, 613.0], [416.0, 583.5], [423.0, 582.0], [428.0, 558.5], [426.0, 603.0], [419.0, 582.0], [422.0, 571.0], [421.0, 599.0], [441.0, 44.0], [434.0, 79.0], [443.0, 519.0], [437.0, 581.0], [445.0, 591.0], [438.0, 613.5], [456.0, 575.0], [467.0, 18.0], [507.0, 26.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 507.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 260.8333333333333, "minX": 1.73470878E12, "maxY": 385.5833333333333, "series": [{"data": [[1.73470914E12, 333.0833333333333], [1.73470896E12, 338.6], [1.73470902E12, 354.8], [1.73470884E12, 385.5833333333333], [1.7347089E12, 369.15], [1.7347092E12, 278.8], [1.73470878E12, 260.8333333333333], [1.73470908E12, 345.81666666666666]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7347092E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 257.81666666666666, "minX": 1.73470878E12, "maxY": 385.26666666666665, "series": [{"data": [[1.73470914E12, 333.4166666666667], [1.73470896E12, 338.6], [1.73470902E12, 354.8], [1.73470884E12, 385.26666666666665], [1.7347089E12, 369.15], [1.7347092E12, 281.6], [1.73470878E12, 257.81666666666666], [1.73470908E12, 346.01666666666665]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7347092E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 62.983333333333334, "minX": 1.73470878E12, "maxY": 96.46666666666667, "series": [{"data": [[1.73470914E12, 83.26666666666667], [1.73470896E12, 84.61666666666666], [1.73470902E12, 88.75], [1.73470884E12, 96.46666666666667], [1.7347089E12, 92.25], [1.7347092E12, 68.98333333333333], [1.73470878E12, 66.0], [1.73470908E12, 86.33333333333333]], "isOverall": false, "label": "GET thread name-success", "isController": false}, {"data": [[1.73470914E12, 83.6], [1.73470896E12, 84.71666666666667], [1.73470902E12, 88.65], [1.73470884E12, 96.16666666666667], [1.7347089E12, 92.23333333333333], [1.7347092E12, 71.78333333333333], [1.73470878E12, 62.983333333333334], [1.73470908E12, 86.53333333333333]], "isOverall": false, "label": "GET All employees-success", "isController": false}, {"data": [[1.73470914E12, 83.25], [1.73470896E12, 84.66666666666667], [1.73470902E12, 88.63333333333334], [1.73470884E12, 96.3], [1.7347089E12, 92.26666666666667], [1.7347092E12, 69.98333333333333], [1.73470878E12, 64.98333333333333], [1.73470908E12, 86.58333333333333]], "isOverall": false, "label": "POST employee-success", "isController": false}, {"data": [[1.73470914E12, 83.3], [1.73470896E12, 84.6], [1.73470902E12, 88.76666666666667], [1.73470884E12, 96.33333333333333], [1.7347089E12, 92.4], [1.7347092E12, 70.85], [1.73470878E12, 63.85], [1.73470908E12, 86.56666666666666]], "isOverall": false, "label": "GET employee by id-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7347092E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 257.81666666666666, "minX": 1.73470878E12, "maxY": 385.26666666666665, "series": [{"data": [[1.73470914E12, 333.4166666666667], [1.73470896E12, 338.6], [1.73470902E12, 354.8], [1.73470884E12, 385.26666666666665], [1.7347089E12, 369.15], [1.7347092E12, 281.6], [1.73470878E12, 257.81666666666666], [1.73470908E12, 346.01666666666665]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7347092E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

