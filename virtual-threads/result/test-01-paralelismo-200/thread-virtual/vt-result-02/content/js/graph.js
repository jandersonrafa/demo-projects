/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 1424.0, "series": [{"data": [[0.0, 19.0], [0.1, 23.0], [0.2, 25.0], [0.3, 27.0], [0.4, 27.0], [0.5, 28.0], [0.6, 28.0], [0.7, 29.0], [0.8, 29.0], [0.9, 30.0], [1.0, 30.0], [1.1, 30.0], [1.2, 31.0], [1.3, 31.0], [1.4, 31.0], [1.5, 32.0], [1.6, 32.0], [1.7, 33.0], [1.8, 33.0], [1.9, 34.0], [2.0, 34.0], [2.1, 35.0], [2.2, 35.0], [2.3, 35.0], [2.4, 36.0], [2.5, 37.0], [2.6, 37.0], [2.7, 38.0], [2.8, 38.0], [2.9, 39.0], [3.0, 40.0], [3.1, 40.0], [3.2, 41.0], [3.3, 41.0], [3.4, 42.0], [3.5, 42.0], [3.6, 43.0], [3.7, 44.0], [3.8, 45.0], [3.9, 45.0], [4.0, 46.0], [4.1, 47.0], [4.2, 47.0], [4.3, 48.0], [4.4, 49.0], [4.5, 50.0], [4.6, 51.0], [4.7, 52.0], [4.8, 53.0], [4.9, 54.0], [5.0, 55.0], [5.1, 56.0], [5.2, 56.0], [5.3, 57.0], [5.4, 58.0], [5.5, 59.0], [5.6, 60.0], [5.7, 62.0], [5.8, 63.0], [5.9, 64.0], [6.0, 65.0], [6.1, 66.0], [6.2, 68.0], [6.3, 70.0], [6.4, 71.0], [6.5, 72.0], [6.6, 74.0], [6.7, 76.0], [6.8, 78.0], [6.9, 80.0], [7.0, 83.0], [7.1, 85.0], [7.2, 90.0], [7.3, 93.0], [7.4, 100.0], [7.5, 105.0], [7.6, 108.0], [7.7, 111.0], [7.8, 113.0], [7.9, 115.0], [8.0, 117.0], [8.1, 119.0], [8.2, 121.0], [8.3, 122.0], [8.4, 124.0], [8.5, 125.0], [8.6, 126.0], [8.7, 128.0], [8.8, 129.0], [8.9, 130.0], [9.0, 132.0], [9.1, 133.0], [9.2, 134.0], [9.3, 136.0], [9.4, 137.0], [9.5, 138.0], [9.6, 139.0], [9.7, 141.0], [9.8, 142.0], [9.9, 143.0], [10.0, 145.0], [10.1, 146.0], [10.2, 148.0], [10.3, 150.0], [10.4, 151.0], [10.5, 153.0], [10.6, 155.0], [10.7, 158.0], [10.8, 160.0], [10.9, 162.0], [11.0, 164.0], [11.1, 166.0], [11.2, 167.0], [11.3, 169.0], [11.4, 171.0], [11.5, 173.0], [11.6, 174.0], [11.7, 175.0], [11.8, 177.0], [11.9, 178.0], [12.0, 180.0], [12.1, 182.0], [12.2, 183.0], [12.3, 184.0], [12.4, 186.0], [12.5, 187.0], [12.6, 189.0], [12.7, 190.0], [12.8, 191.0], [12.9, 193.0], [13.0, 194.0], [13.1, 195.0], [13.2, 197.0], [13.3, 199.0], [13.4, 201.0], [13.5, 202.0], [13.6, 204.0], [13.7, 205.0], [13.8, 206.0], [13.9, 208.0], [14.0, 209.0], [14.1, 210.0], [14.2, 211.0], [14.3, 212.0], [14.4, 213.0], [14.5, 216.0], [14.6, 217.0], [14.7, 219.0], [14.8, 221.0], [14.9, 222.0], [15.0, 224.0], [15.1, 225.0], [15.2, 227.0], [15.3, 228.0], [15.4, 230.0], [15.5, 232.0], [15.6, 233.0], [15.7, 235.0], [15.8, 237.0], [15.9, 239.0], [16.0, 241.0], [16.1, 242.0], [16.2, 244.0], [16.3, 246.0], [16.4, 247.0], [16.5, 248.0], [16.6, 250.0], [16.7, 251.0], [16.8, 252.0], [16.9, 254.0], [17.0, 255.0], [17.1, 256.0], [17.2, 258.0], [17.3, 260.0], [17.4, 261.0], [17.5, 263.0], [17.6, 264.0], [17.7, 265.0], [17.8, 266.0], [17.9, 268.0], [18.0, 269.0], [18.1, 271.0], [18.2, 272.0], [18.3, 273.0], [18.4, 275.0], [18.5, 276.0], [18.6, 277.0], [18.7, 279.0], [18.8, 280.0], [18.9, 281.0], [19.0, 282.0], [19.1, 283.0], [19.2, 284.0], [19.3, 285.0], [19.4, 286.0], [19.5, 288.0], [19.6, 288.0], [19.7, 290.0], [19.8, 291.0], [19.9, 292.0], [20.0, 293.0], [20.1, 294.0], [20.2, 295.0], [20.3, 297.0], [20.4, 298.0], [20.5, 299.0], [20.6, 300.0], [20.7, 301.0], [20.8, 302.0], [20.9, 303.0], [21.0, 304.0], [21.1, 306.0], [21.2, 306.0], [21.3, 307.0], [21.4, 309.0], [21.5, 310.0], [21.6, 311.0], [21.7, 312.0], [21.8, 313.0], [21.9, 314.0], [22.0, 315.0], [22.1, 316.0], [22.2, 317.0], [22.3, 318.0], [22.4, 319.0], [22.5, 320.0], [22.6, 321.0], [22.7, 322.0], [22.8, 324.0], [22.9, 325.0], [23.0, 326.0], [23.1, 327.0], [23.2, 328.0], [23.3, 328.0], [23.4, 329.0], [23.5, 330.0], [23.6, 331.0], [23.7, 332.0], [23.8, 333.0], [23.9, 334.0], [24.0, 336.0], [24.1, 337.0], [24.2, 338.0], [24.3, 338.0], [24.4, 339.0], [24.5, 341.0], [24.6, 342.0], [24.7, 343.0], [24.8, 345.0], [24.9, 346.0], [25.0, 347.0], [25.1, 348.0], [25.2, 349.0], [25.3, 351.0], [25.4, 352.0], [25.5, 353.0], [25.6, 354.0], [25.7, 355.0], [25.8, 356.0], [25.9, 358.0], [26.0, 359.0], [26.1, 360.0], [26.2, 361.0], [26.3, 362.0], [26.4, 363.0], [26.5, 365.0], [26.6, 366.0], [26.7, 367.0], [26.8, 369.0], [26.9, 370.0], [27.0, 371.0], [27.1, 372.0], [27.2, 374.0], [27.3, 375.0], [27.4, 376.0], [27.5, 377.0], [27.6, 378.0], [27.7, 380.0], [27.8, 381.0], [27.9, 382.0], [28.0, 382.0], [28.1, 383.0], [28.2, 384.0], [28.3, 385.0], [28.4, 386.0], [28.5, 387.0], [28.6, 388.0], [28.7, 389.0], [28.8, 390.0], [28.9, 390.0], [29.0, 391.0], [29.1, 392.0], [29.2, 393.0], [29.3, 393.0], [29.4, 394.0], [29.5, 395.0], [29.6, 395.0], [29.7, 396.0], [29.8, 397.0], [29.9, 397.0], [30.0, 398.0], [30.1, 398.0], [30.2, 399.0], [30.3, 400.0], [30.4, 400.0], [30.5, 401.0], [30.6, 402.0], [30.7, 402.0], [30.8, 402.0], [30.9, 403.0], [31.0, 404.0], [31.1, 404.0], [31.2, 405.0], [31.3, 405.0], [31.4, 406.0], [31.5, 406.0], [31.6, 407.0], [31.7, 407.0], [31.8, 408.0], [31.9, 409.0], [32.0, 409.0], [32.1, 410.0], [32.2, 410.0], [32.3, 410.0], [32.4, 411.0], [32.5, 411.0], [32.6, 412.0], [32.7, 413.0], [32.8, 413.0], [32.9, 414.0], [33.0, 414.0], [33.1, 414.0], [33.2, 415.0], [33.3, 415.0], [33.4, 416.0], [33.5, 416.0], [33.6, 417.0], [33.7, 417.0], [33.8, 418.0], [33.9, 418.0], [34.0, 418.0], [34.1, 419.0], [34.2, 419.0], [34.3, 420.0], [34.4, 420.0], [34.5, 420.0], [34.6, 421.0], [34.7, 421.0], [34.8, 421.0], [34.9, 422.0], [35.0, 422.0], [35.1, 422.0], [35.2, 423.0], [35.3, 423.0], [35.4, 423.0], [35.5, 424.0], [35.6, 424.0], [35.7, 424.0], [35.8, 424.0], [35.9, 425.0], [36.0, 425.0], [36.1, 425.0], [36.2, 426.0], [36.3, 426.0], [36.4, 426.0], [36.5, 427.0], [36.6, 427.0], [36.7, 427.0], [36.8, 428.0], [36.9, 428.0], [37.0, 428.0], [37.1, 429.0], [37.2, 429.0], [37.3, 429.0], [37.4, 429.0], [37.5, 430.0], [37.6, 430.0], [37.7, 430.0], [37.8, 431.0], [37.9, 431.0], [38.0, 431.0], [38.1, 432.0], [38.2, 432.0], [38.3, 432.0], [38.4, 432.0], [38.5, 433.0], [38.6, 433.0], [38.7, 433.0], [38.8, 434.0], [38.9, 434.0], [39.0, 434.0], [39.1, 435.0], [39.2, 435.0], [39.3, 435.0], [39.4, 435.0], [39.5, 436.0], [39.6, 436.0], [39.7, 436.0], [39.8, 436.0], [39.9, 437.0], [40.0, 437.0], [40.1, 437.0], [40.2, 437.0], [40.3, 438.0], [40.4, 438.0], [40.5, 438.0], [40.6, 438.0], [40.7, 438.0], [40.8, 439.0], [40.9, 439.0], [41.0, 439.0], [41.1, 439.0], [41.2, 440.0], [41.3, 440.0], [41.4, 440.0], [41.5, 440.0], [41.6, 441.0], [41.7, 441.0], [41.8, 441.0], [41.9, 441.0], [42.0, 441.0], [42.1, 442.0], [42.2, 442.0], [42.3, 442.0], [42.4, 442.0], [42.5, 443.0], [42.6, 443.0], [42.7, 443.0], [42.8, 443.0], [42.9, 444.0], [43.0, 444.0], [43.1, 444.0], [43.2, 444.0], [43.3, 445.0], [43.4, 445.0], [43.5, 445.0], [43.6, 445.0], [43.7, 445.0], [43.8, 446.0], [43.9, 446.0], [44.0, 446.0], [44.1, 446.0], [44.2, 447.0], [44.3, 447.0], [44.4, 447.0], [44.5, 447.0], [44.6, 448.0], [44.7, 448.0], [44.8, 448.0], [44.9, 448.0], [45.0, 448.0], [45.1, 448.0], [45.2, 449.0], [45.3, 449.0], [45.4, 449.0], [45.5, 449.0], [45.6, 449.0], [45.7, 450.0], [45.8, 450.0], [45.9, 450.0], [46.0, 450.0], [46.1, 450.0], [46.2, 451.0], [46.3, 451.0], [46.4, 451.0], [46.5, 451.0], [46.6, 452.0], [46.7, 452.0], [46.8, 452.0], [46.9, 452.0], [47.0, 452.0], [47.1, 453.0], [47.2, 453.0], [47.3, 453.0], [47.4, 453.0], [47.5, 453.0], [47.6, 453.0], [47.7, 454.0], [47.8, 454.0], [47.9, 454.0], [48.0, 454.0], [48.1, 455.0], [48.2, 455.0], [48.3, 455.0], [48.4, 455.0], [48.5, 455.0], [48.6, 456.0], [48.7, 456.0], [48.8, 456.0], [48.9, 456.0], [49.0, 456.0], [49.1, 457.0], [49.2, 457.0], [49.3, 457.0], [49.4, 457.0], [49.5, 457.0], [49.6, 458.0], [49.7, 458.0], [49.8, 458.0], [49.9, 458.0], [50.0, 458.0], [50.1, 459.0], [50.2, 459.0], [50.3, 459.0], [50.4, 459.0], [50.5, 459.0], [50.6, 460.0], [50.7, 460.0], [50.8, 460.0], [50.9, 460.0], [51.0, 460.0], [51.1, 461.0], [51.2, 461.0], [51.3, 461.0], [51.4, 461.0], [51.5, 461.0], [51.6, 462.0], [51.7, 462.0], [51.8, 462.0], [51.9, 462.0], [52.0, 462.0], [52.1, 463.0], [52.2, 463.0], [52.3, 463.0], [52.4, 463.0], [52.5, 463.0], [52.6, 463.0], [52.7, 464.0], [52.8, 464.0], [52.9, 464.0], [53.0, 464.0], [53.1, 464.0], [53.2, 465.0], [53.3, 465.0], [53.4, 465.0], [53.5, 465.0], [53.6, 465.0], [53.7, 465.0], [53.8, 466.0], [53.9, 466.0], [54.0, 466.0], [54.1, 466.0], [54.2, 466.0], [54.3, 466.0], [54.4, 467.0], [54.5, 467.0], [54.6, 467.0], [54.7, 467.0], [54.8, 467.0], [54.9, 467.0], [55.0, 468.0], [55.1, 468.0], [55.2, 468.0], [55.3, 468.0], [55.4, 468.0], [55.5, 469.0], [55.6, 469.0], [55.7, 469.0], [55.8, 469.0], [55.9, 469.0], [56.0, 469.0], [56.1, 470.0], [56.2, 470.0], [56.3, 470.0], [56.4, 470.0], [56.5, 470.0], [56.6, 470.0], [56.7, 471.0], [56.8, 471.0], [56.9, 471.0], [57.0, 471.0], [57.1, 471.0], [57.2, 471.0], [57.3, 472.0], [57.4, 472.0], [57.5, 472.0], [57.6, 472.0], [57.7, 472.0], [57.8, 472.0], [57.9, 473.0], [58.0, 473.0], [58.1, 473.0], [58.2, 473.0], [58.3, 473.0], [58.4, 474.0], [58.5, 474.0], [58.6, 474.0], [58.7, 474.0], [58.8, 474.0], [58.9, 474.0], [59.0, 475.0], [59.1, 475.0], [59.2, 475.0], [59.3, 475.0], [59.4, 475.0], [59.5, 475.0], [59.6, 476.0], [59.7, 476.0], [59.8, 476.0], [59.9, 476.0], [60.0, 476.0], [60.1, 476.0], [60.2, 476.0], [60.3, 477.0], [60.4, 477.0], [60.5, 477.0], [60.6, 477.0], [60.7, 477.0], [60.8, 477.0], [60.9, 478.0], [61.0, 478.0], [61.1, 478.0], [61.2, 478.0], [61.3, 478.0], [61.4, 478.0], [61.5, 479.0], [61.6, 479.0], [61.7, 479.0], [61.8, 479.0], [61.9, 479.0], [62.0, 480.0], [62.1, 480.0], [62.2, 480.0], [62.3, 480.0], [62.4, 480.0], [62.5, 480.0], [62.6, 481.0], [62.7, 481.0], [62.8, 481.0], [62.9, 481.0], [63.0, 481.0], [63.1, 481.0], [63.2, 481.0], [63.3, 482.0], [63.4, 482.0], [63.5, 482.0], [63.6, 482.0], [63.7, 482.0], [63.8, 483.0], [63.9, 483.0], [64.0, 483.0], [64.1, 483.0], [64.2, 483.0], [64.3, 483.0], [64.4, 484.0], [64.5, 484.0], [64.6, 484.0], [64.7, 484.0], [64.8, 484.0], [64.9, 484.0], [65.0, 484.0], [65.1, 485.0], [65.2, 485.0], [65.3, 485.0], [65.4, 485.0], [65.5, 485.0], [65.6, 486.0], [65.7, 486.0], [65.8, 486.0], [65.9, 486.0], [66.0, 486.0], [66.1, 486.0], [66.2, 487.0], [66.3, 487.0], [66.4, 487.0], [66.5, 487.0], [66.6, 487.0], [66.7, 487.0], [66.8, 488.0], [66.9, 488.0], [67.0, 488.0], [67.1, 488.0], [67.2, 488.0], [67.3, 489.0], [67.4, 489.0], [67.5, 489.0], [67.6, 489.0], [67.7, 489.0], [67.8, 490.0], [67.9, 490.0], [68.0, 490.0], [68.1, 490.0], [68.2, 490.0], [68.3, 490.0], [68.4, 491.0], [68.5, 491.0], [68.6, 491.0], [68.7, 491.0], [68.8, 491.0], [68.9, 492.0], [69.0, 492.0], [69.1, 492.0], [69.2, 492.0], [69.3, 492.0], [69.4, 493.0], [69.5, 493.0], [69.6, 493.0], [69.7, 493.0], [69.8, 493.0], [69.9, 493.0], [70.0, 494.0], [70.1, 494.0], [70.2, 494.0], [70.3, 494.0], [70.4, 494.0], [70.5, 495.0], [70.6, 495.0], [70.7, 495.0], [70.8, 495.0], [70.9, 495.0], [71.0, 495.0], [71.1, 496.0], [71.2, 496.0], [71.3, 496.0], [71.4, 496.0], [71.5, 496.0], [71.6, 497.0], [71.7, 497.0], [71.8, 497.0], [71.9, 497.0], [72.0, 497.0], [72.1, 498.0], [72.2, 498.0], [72.3, 498.0], [72.4, 498.0], [72.5, 498.0], [72.6, 499.0], [72.7, 499.0], [72.8, 499.0], [72.9, 499.0], [73.0, 499.0], [73.1, 499.0], [73.2, 500.0], [73.3, 500.0], [73.4, 500.0], [73.5, 500.0], [73.6, 500.0], [73.7, 501.0], [73.8, 501.0], [73.9, 501.0], [74.0, 501.0], [74.1, 502.0], [74.2, 502.0], [74.3, 502.0], [74.4, 502.0], [74.5, 503.0], [74.6, 503.0], [74.7, 503.0], [74.8, 503.0], [74.9, 503.0], [75.0, 504.0], [75.1, 504.0], [75.2, 504.0], [75.3, 504.0], [75.4, 504.0], [75.5, 505.0], [75.6, 505.0], [75.7, 505.0], [75.8, 505.0], [75.9, 505.0], [76.0, 506.0], [76.1, 506.0], [76.2, 506.0], [76.3, 506.0], [76.4, 507.0], [76.5, 507.0], [76.6, 507.0], [76.7, 507.0], [76.8, 508.0], [76.9, 508.0], [77.0, 508.0], [77.1, 508.0], [77.2, 509.0], [77.3, 509.0], [77.4, 509.0], [77.5, 509.0], [77.6, 510.0], [77.7, 510.0], [77.8, 510.0], [77.9, 510.0], [78.0, 511.0], [78.1, 511.0], [78.2, 511.0], [78.3, 511.0], [78.4, 511.0], [78.5, 512.0], [78.6, 512.0], [78.7, 512.0], [78.8, 512.0], [78.9, 512.0], [79.0, 513.0], [79.1, 513.0], [79.2, 513.0], [79.3, 514.0], [79.4, 514.0], [79.5, 514.0], [79.6, 514.0], [79.7, 515.0], [79.8, 515.0], [79.9, 515.0], [80.0, 515.0], [80.1, 516.0], [80.2, 516.0], [80.3, 516.0], [80.4, 516.0], [80.5, 517.0], [80.6, 517.0], [80.7, 517.0], [80.8, 517.0], [80.9, 518.0], [81.0, 518.0], [81.1, 518.0], [81.2, 519.0], [81.3, 519.0], [81.4, 519.0], [81.5, 520.0], [81.6, 520.0], [81.7, 520.0], [81.8, 521.0], [81.9, 521.0], [82.0, 521.0], [82.1, 521.0], [82.2, 522.0], [82.3, 522.0], [82.4, 522.0], [82.5, 523.0], [82.6, 523.0], [82.7, 523.0], [82.8, 524.0], [82.9, 524.0], [83.0, 524.0], [83.1, 525.0], [83.2, 525.0], [83.3, 525.0], [83.4, 526.0], [83.5, 526.0], [83.6, 526.0], [83.7, 527.0], [83.8, 527.0], [83.9, 527.0], [84.0, 528.0], [84.1, 528.0], [84.2, 528.0], [84.3, 528.0], [84.4, 529.0], [84.5, 529.0], [84.6, 529.0], [84.7, 530.0], [84.8, 530.0], [84.9, 530.0], [85.0, 531.0], [85.1, 531.0], [85.2, 531.0], [85.3, 532.0], [85.4, 532.0], [85.5, 532.0], [85.6, 533.0], [85.7, 533.0], [85.8, 534.0], [85.9, 534.0], [86.0, 534.0], [86.1, 535.0], [86.2, 535.0], [86.3, 535.0], [86.4, 536.0], [86.5, 536.0], [86.6, 536.0], [86.7, 537.0], [86.8, 537.0], [86.9, 537.0], [87.0, 538.0], [87.1, 538.0], [87.2, 539.0], [87.3, 539.0], [87.4, 539.0], [87.5, 540.0], [87.6, 540.0], [87.7, 541.0], [87.8, 541.0], [87.9, 541.0], [88.0, 542.0], [88.1, 542.0], [88.2, 543.0], [88.3, 543.0], [88.4, 544.0], [88.5, 544.0], [88.6, 545.0], [88.7, 545.0], [88.8, 546.0], [88.9, 546.0], [89.0, 547.0], [89.1, 547.0], [89.2, 547.0], [89.3, 548.0], [89.4, 548.0], [89.5, 549.0], [89.6, 549.0], [89.7, 550.0], [89.8, 550.0], [89.9, 551.0], [90.0, 551.0], [90.1, 552.0], [90.2, 552.0], [90.3, 553.0], [90.4, 553.0], [90.5, 554.0], [90.6, 554.0], [90.7, 555.0], [90.8, 556.0], [90.9, 556.0], [91.0, 557.0], [91.1, 558.0], [91.2, 558.0], [91.3, 559.0], [91.4, 559.0], [91.5, 560.0], [91.6, 561.0], [91.7, 561.0], [91.8, 562.0], [91.9, 562.0], [92.0, 563.0], [92.1, 563.0], [92.2, 564.0], [92.3, 565.0], [92.4, 565.0], [92.5, 566.0], [92.6, 567.0], [92.7, 568.0], [92.8, 569.0], [92.9, 570.0], [93.0, 570.0], [93.1, 571.0], [93.2, 572.0], [93.3, 573.0], [93.4, 573.0], [93.5, 574.0], [93.6, 575.0], [93.7, 576.0], [93.8, 576.0], [93.9, 577.0], [94.0, 578.0], [94.1, 579.0], [94.2, 580.0], [94.3, 581.0], [94.4, 582.0], [94.5, 583.0], [94.6, 584.0], [94.7, 585.0], [94.8, 586.0], [94.9, 587.0], [95.0, 588.0], [95.1, 589.0], [95.2, 589.0], [95.3, 590.0], [95.4, 591.0], [95.5, 593.0], [95.6, 594.0], [95.7, 595.0], [95.8, 596.0], [95.9, 597.0], [96.0, 598.0], [96.1, 600.0], [96.2, 601.0], [96.3, 603.0], [96.4, 604.0], [96.5, 606.0], [96.6, 607.0], [96.7, 609.0], [96.8, 611.0], [96.9, 612.0], [97.0, 614.0], [97.1, 617.0], [97.2, 619.0], [97.3, 621.0], [97.4, 625.0], [97.5, 627.0], [97.6, 631.0], [97.7, 634.0], [97.8, 637.0], [97.9, 642.0], [98.0, 645.0], [98.1, 650.0], [98.2, 656.0], [98.3, 666.0], [98.4, 677.0], [98.5, 686.0], [98.6, 698.0], [98.7, 713.0], [98.8, 745.0], [98.9, 782.0], [99.0, 814.0], [99.1, 833.0], [99.2, 847.0], [99.3, 862.0], [99.4, 874.0], [99.5, 890.0], [99.6, 911.0], [99.7, 928.0], [99.8, 959.0], [99.9, 1002.0]], "isOverall": false, "label": "GET All employees", "isController": false}, {"data": [[0.0, 1.0], [0.1, 1.0], [0.2, 2.0], [0.3, 2.0], [0.4, 2.0], [0.5, 2.0], [0.6, 2.0], [0.7, 2.0], [0.8, 2.0], [0.9, 2.0], [1.0, 2.0], [1.1, 2.0], [1.2, 2.0], [1.3, 2.0], [1.4, 2.0], [1.5, 2.0], [1.6, 2.0], [1.7, 2.0], [1.8, 2.0], [1.9, 2.0], [2.0, 2.0], [2.1, 2.0], [2.2, 2.0], [2.3, 2.0], [2.4, 2.0], [2.5, 2.0], [2.6, 2.0], [2.7, 2.0], [2.8, 2.0], [2.9, 2.0], [3.0, 2.0], [3.1, 2.0], [3.2, 2.0], [3.3, 2.0], [3.4, 2.0], [3.5, 2.0], [3.6, 2.0], [3.7, 2.0], [3.8, 2.0], [3.9, 2.0], [4.0, 2.0], [4.1, 2.0], [4.2, 2.0], [4.3, 2.0], [4.4, 2.0], [4.5, 2.0], [4.6, 2.0], [4.7, 2.0], [4.8, 2.0], [4.9, 2.0], [5.0, 2.0], [5.1, 2.0], [5.2, 2.0], [5.3, 2.0], [5.4, 2.0], [5.5, 2.0], [5.6, 2.0], [5.7, 2.0], [5.8, 2.0], [5.9, 2.0], [6.0, 2.0], [6.1, 2.0], [6.2, 2.0], [6.3, 2.0], [6.4, 2.0], [6.5, 2.0], [6.6, 2.0], [6.7, 2.0], [6.8, 2.0], [6.9, 2.0], [7.0, 2.0], [7.1, 2.0], [7.2, 2.0], [7.3, 3.0], [7.4, 3.0], [7.5, 3.0], [7.6, 3.0], [7.7, 3.0], [7.8, 3.0], [7.9, 3.0], [8.0, 3.0], [8.1, 3.0], [8.2, 3.0], [8.3, 3.0], [8.4, 3.0], [8.5, 3.0], [8.6, 3.0], [8.7, 3.0], [8.8, 3.0], [8.9, 3.0], [9.0, 3.0], [9.1, 3.0], [9.2, 3.0], [9.3, 3.0], [9.4, 3.0], [9.5, 3.0], [9.6, 3.0], [9.7, 3.0], [9.8, 3.0], [9.9, 3.0], [10.0, 3.0], [10.1, 3.0], [10.2, 3.0], [10.3, 3.0], [10.4, 3.0], [10.5, 3.0], [10.6, 3.0], [10.7, 3.0], [10.8, 3.0], [10.9, 3.0], [11.0, 3.0], [11.1, 3.0], [11.2, 3.0], [11.3, 3.0], [11.4, 3.0], [11.5, 3.0], [11.6, 3.0], [11.7, 3.0], [11.8, 3.0], [11.9, 3.0], [12.0, 3.0], [12.1, 3.0], [12.2, 3.0], [12.3, 3.0], [12.4, 3.0], [12.5, 3.0], [12.6, 3.0], [12.7, 3.0], [12.8, 3.0], [12.9, 3.0], [13.0, 3.0], [13.1, 3.0], [13.2, 3.0], [13.3, 3.0], [13.4, 3.0], [13.5, 3.0], [13.6, 3.0], [13.7, 3.0], [13.8, 3.0], [13.9, 3.0], [14.0, 3.0], [14.1, 3.0], [14.2, 3.0], [14.3, 3.0], [14.4, 3.0], [14.5, 3.0], [14.6, 3.0], [14.7, 3.0], [14.8, 3.0], [14.9, 3.0], [15.0, 3.0], [15.1, 3.0], [15.2, 3.0], [15.3, 3.0], [15.4, 3.0], [15.5, 3.0], [15.6, 3.0], [15.7, 3.0], [15.8, 3.0], [15.9, 3.0], [16.0, 3.0], [16.1, 3.0], [16.2, 3.0], [16.3, 3.0], [16.4, 3.0], [16.5, 3.0], [16.6, 3.0], [16.7, 3.0], [16.8, 3.0], [16.9, 3.0], [17.0, 3.0], [17.1, 3.0], [17.2, 3.0], [17.3, 3.0], [17.4, 3.0], [17.5, 3.0], [17.6, 3.0], [17.7, 3.0], [17.8, 3.0], [17.9, 3.0], [18.0, 3.0], [18.1, 3.0], [18.2, 3.0], [18.3, 3.0], [18.4, 3.0], [18.5, 3.0], [18.6, 3.0], [18.7, 3.0], [18.8, 3.0], [18.9, 3.0], [19.0, 3.0], [19.1, 3.0], [19.2, 3.0], [19.3, 3.0], [19.4, 3.0], [19.5, 3.0], [19.6, 3.0], [19.7, 3.0], [19.8, 3.0], [19.9, 3.0], [20.0, 3.0], [20.1, 3.0], [20.2, 3.0], [20.3, 3.0], [20.4, 3.0], [20.5, 3.0], [20.6, 3.0], [20.7, 3.0], [20.8, 3.0], [20.9, 3.0], [21.0, 3.0], [21.1, 3.0], [21.2, 3.0], [21.3, 3.0], [21.4, 3.0], [21.5, 3.0], [21.6, 3.0], [21.7, 3.0], [21.8, 3.0], [21.9, 3.0], [22.0, 3.0], [22.1, 3.0], [22.2, 3.0], [22.3, 3.0], [22.4, 3.0], [22.5, 3.0], [22.6, 3.0], [22.7, 3.0], [22.8, 3.0], [22.9, 3.0], [23.0, 3.0], [23.1, 3.0], [23.2, 3.0], [23.3, 3.0], [23.4, 3.0], [23.5, 3.0], [23.6, 3.0], [23.7, 3.0], [23.8, 3.0], [23.9, 3.0], [24.0, 3.0], [24.1, 3.0], [24.2, 3.0], [24.3, 3.0], [24.4, 3.0], [24.5, 3.0], [24.6, 3.0], [24.7, 3.0], [24.8, 3.0], [24.9, 3.0], [25.0, 3.0], [25.1, 3.0], [25.2, 3.0], [25.3, 4.0], [25.4, 4.0], [25.5, 4.0], [25.6, 4.0], [25.7, 4.0], [25.8, 4.0], [25.9, 4.0], [26.0, 4.0], [26.1, 4.0], [26.2, 4.0], [26.3, 4.0], [26.4, 4.0], [26.5, 4.0], [26.6, 4.0], [26.7, 4.0], [26.8, 4.0], [26.9, 4.0], [27.0, 4.0], [27.1, 4.0], [27.2, 4.0], [27.3, 4.0], [27.4, 4.0], [27.5, 4.0], [27.6, 4.0], [27.7, 4.0], [27.8, 4.0], [27.9, 4.0], [28.0, 4.0], [28.1, 4.0], [28.2, 4.0], [28.3, 4.0], [28.4, 4.0], [28.5, 4.0], [28.6, 4.0], [28.7, 4.0], [28.8, 4.0], [28.9, 4.0], [29.0, 4.0], [29.1, 4.0], [29.2, 4.0], [29.3, 4.0], [29.4, 4.0], [29.5, 4.0], [29.6, 4.0], [29.7, 4.0], [29.8, 4.0], [29.9, 4.0], [30.0, 4.0], [30.1, 4.0], [30.2, 4.0], [30.3, 4.0], [30.4, 4.0], [30.5, 4.0], [30.6, 4.0], [30.7, 4.0], [30.8, 4.0], [30.9, 4.0], [31.0, 4.0], [31.1, 4.0], [31.2, 4.0], [31.3, 4.0], [31.4, 4.0], [31.5, 4.0], [31.6, 4.0], [31.7, 4.0], [31.8, 4.0], [31.9, 4.0], [32.0, 4.0], [32.1, 4.0], [32.2, 4.0], [32.3, 4.0], [32.4, 4.0], [32.5, 4.0], [32.6, 4.0], [32.7, 4.0], [32.8, 4.0], [32.9, 4.0], [33.0, 4.0], [33.1, 4.0], [33.2, 4.0], [33.3, 4.0], [33.4, 4.0], [33.5, 4.0], [33.6, 4.0], [33.7, 4.0], [33.8, 4.0], [33.9, 4.0], [34.0, 4.0], [34.1, 4.0], [34.2, 4.0], [34.3, 4.0], [34.4, 4.0], [34.5, 4.0], [34.6, 4.0], [34.7, 4.0], [34.8, 4.0], [34.9, 4.0], [35.0, 4.0], [35.1, 4.0], [35.2, 4.0], [35.3, 4.0], [35.4, 4.0], [35.5, 4.0], [35.6, 4.0], [35.7, 4.0], [35.8, 4.0], [35.9, 4.0], [36.0, 4.0], [36.1, 4.0], [36.2, 4.0], [36.3, 4.0], [36.4, 4.0], [36.5, 4.0], [36.6, 4.0], [36.7, 4.0], [36.8, 4.0], [36.9, 4.0], [37.0, 4.0], [37.1, 4.0], [37.2, 4.0], [37.3, 4.0], [37.4, 4.0], [37.5, 4.0], [37.6, 4.0], [37.7, 4.0], [37.8, 4.0], [37.9, 4.0], [38.0, 4.0], [38.1, 4.0], [38.2, 4.0], [38.3, 4.0], [38.4, 4.0], [38.5, 4.0], [38.6, 4.0], [38.7, 4.0], [38.8, 4.0], [38.9, 4.0], [39.0, 4.0], [39.1, 4.0], [39.2, 4.0], [39.3, 4.0], [39.4, 4.0], [39.5, 4.0], [39.6, 4.0], [39.7, 4.0], [39.8, 4.0], [39.9, 4.0], [40.0, 4.0], [40.1, 4.0], [40.2, 4.0], [40.3, 4.0], [40.4, 4.0], [40.5, 4.0], [40.6, 4.0], [40.7, 4.0], [40.8, 4.0], [40.9, 4.0], [41.0, 4.0], [41.1, 4.0], [41.2, 4.0], [41.3, 4.0], [41.4, 4.0], [41.5, 4.0], [41.6, 4.0], [41.7, 4.0], [41.8, 4.0], [41.9, 4.0], [42.0, 4.0], [42.1, 5.0], [42.2, 5.0], [42.3, 5.0], [42.4, 5.0], [42.5, 5.0], [42.6, 5.0], [42.7, 5.0], [42.8, 5.0], [42.9, 5.0], [43.0, 5.0], [43.1, 5.0], [43.2, 5.0], [43.3, 5.0], [43.4, 5.0], [43.5, 5.0], [43.6, 5.0], [43.7, 5.0], [43.8, 5.0], [43.9, 5.0], [44.0, 5.0], [44.1, 5.0], [44.2, 5.0], [44.3, 5.0], [44.4, 5.0], [44.5, 5.0], [44.6, 5.0], [44.7, 5.0], [44.8, 5.0], [44.9, 5.0], [45.0, 5.0], [45.1, 5.0], [45.2, 5.0], [45.3, 5.0], [45.4, 5.0], [45.5, 5.0], [45.6, 5.0], [45.7, 5.0], [45.8, 5.0], [45.9, 5.0], [46.0, 5.0], [46.1, 5.0], [46.2, 5.0], [46.3, 5.0], [46.4, 5.0], [46.5, 5.0], [46.6, 5.0], [46.7, 5.0], [46.8, 5.0], [46.9, 5.0], [47.0, 5.0], [47.1, 5.0], [47.2, 5.0], [47.3, 5.0], [47.4, 5.0], [47.5, 5.0], [47.6, 5.0], [47.7, 5.0], [47.8, 5.0], [47.9, 5.0], [48.0, 5.0], [48.1, 5.0], [48.2, 5.0], [48.3, 5.0], [48.4, 5.0], [48.5, 5.0], [48.6, 5.0], [48.7, 5.0], [48.8, 5.0], [48.9, 5.0], [49.0, 5.0], [49.1, 5.0], [49.2, 5.0], [49.3, 5.0], [49.4, 5.0], [49.5, 5.0], [49.6, 5.0], [49.7, 5.0], [49.8, 5.0], [49.9, 5.0], [50.0, 5.0], [50.1, 5.0], [50.2, 5.0], [50.3, 5.0], [50.4, 5.0], [50.5, 5.0], [50.6, 5.0], [50.7, 5.0], [50.8, 5.0], [50.9, 5.0], [51.0, 5.0], [51.1, 5.0], [51.2, 5.0], [51.3, 5.0], [51.4, 5.0], [51.5, 5.0], [51.6, 5.0], [51.7, 5.0], [51.8, 5.0], [51.9, 5.0], [52.0, 5.0], [52.1, 5.0], [52.2, 5.0], [52.3, 5.0], [52.4, 5.0], [52.5, 5.0], [52.6, 5.0], [52.7, 5.0], [52.8, 5.0], [52.9, 5.0], [53.0, 5.0], [53.1, 5.0], [53.2, 5.0], [53.3, 5.0], [53.4, 5.0], [53.5, 5.0], [53.6, 5.0], [53.7, 5.0], [53.8, 5.0], [53.9, 5.0], [54.0, 5.0], [54.1, 5.0], [54.2, 5.0], [54.3, 5.0], [54.4, 5.0], [54.5, 5.0], [54.6, 5.0], [54.7, 5.0], [54.8, 5.0], [54.9, 5.0], [55.0, 6.0], [55.1, 6.0], [55.2, 6.0], [55.3, 6.0], [55.4, 6.0], [55.5, 6.0], [55.6, 6.0], [55.7, 6.0], [55.8, 6.0], [55.9, 6.0], [56.0, 6.0], [56.1, 6.0], [56.2, 6.0], [56.3, 6.0], [56.4, 6.0], [56.5, 6.0], [56.6, 6.0], [56.7, 6.0], [56.8, 6.0], [56.9, 6.0], [57.0, 6.0], [57.1, 6.0], [57.2, 6.0], [57.3, 6.0], [57.4, 6.0], [57.5, 6.0], [57.6, 6.0], [57.7, 6.0], [57.8, 6.0], [57.9, 6.0], [58.0, 6.0], [58.1, 6.0], [58.2, 6.0], [58.3, 6.0], [58.4, 6.0], [58.5, 6.0], [58.6, 6.0], [58.7, 6.0], [58.8, 6.0], [58.9, 6.0], [59.0, 6.0], [59.1, 6.0], [59.2, 6.0], [59.3, 6.0], [59.4, 6.0], [59.5, 6.0], [59.6, 6.0], [59.7, 6.0], [59.8, 6.0], [59.9, 6.0], [60.0, 6.0], [60.1, 6.0], [60.2, 6.0], [60.3, 6.0], [60.4, 6.0], [60.5, 6.0], [60.6, 6.0], [60.7, 6.0], [60.8, 6.0], [60.9, 6.0], [61.0, 6.0], [61.1, 6.0], [61.2, 6.0], [61.3, 6.0], [61.4, 6.0], [61.5, 6.0], [61.6, 6.0], [61.7, 6.0], [61.8, 6.0], [61.9, 6.0], [62.0, 6.0], [62.1, 6.0], [62.2, 6.0], [62.3, 6.0], [62.4, 6.0], [62.5, 6.0], [62.6, 6.0], [62.7, 6.0], [62.8, 6.0], [62.9, 6.0], [63.0, 6.0], [63.1, 6.0], [63.2, 6.0], [63.3, 6.0], [63.4, 6.0], [63.5, 6.0], [63.6, 6.0], [63.7, 6.0], [63.8, 6.0], [63.9, 6.0], [64.0, 6.0], [64.1, 6.0], [64.2, 6.0], [64.3, 6.0], [64.4, 6.0], [64.5, 6.0], [64.6, 6.0], [64.7, 7.0], [64.8, 7.0], [64.9, 7.0], [65.0, 7.0], [65.1, 7.0], [65.2, 7.0], [65.3, 7.0], [65.4, 7.0], [65.5, 7.0], [65.6, 7.0], [65.7, 7.0], [65.8, 7.0], [65.9, 7.0], [66.0, 7.0], [66.1, 7.0], [66.2, 7.0], [66.3, 7.0], [66.4, 7.0], [66.5, 7.0], [66.6, 7.0], [66.7, 7.0], [66.8, 7.0], [66.9, 7.0], [67.0, 7.0], [67.1, 7.0], [67.2, 7.0], [67.3, 7.0], [67.4, 7.0], [67.5, 7.0], [67.6, 7.0], [67.7, 7.0], [67.8, 7.0], [67.9, 7.0], [68.0, 7.0], [68.1, 7.0], [68.2, 7.0], [68.3, 7.0], [68.4, 7.0], [68.5, 7.0], [68.6, 7.0], [68.7, 7.0], [68.8, 7.0], [68.9, 7.0], [69.0, 7.0], [69.1, 7.0], [69.2, 7.0], [69.3, 7.0], [69.4, 7.0], [69.5, 7.0], [69.6, 7.0], [69.7, 7.0], [69.8, 7.0], [69.9, 7.0], [70.0, 7.0], [70.1, 7.0], [70.2, 7.0], [70.3, 7.0], [70.4, 7.0], [70.5, 7.0], [70.6, 7.0], [70.7, 7.0], [70.8, 7.0], [70.9, 7.0], [71.0, 7.0], [71.1, 7.0], [71.2, 7.0], [71.3, 7.0], [71.4, 7.0], [71.5, 7.0], [71.6, 7.0], [71.7, 7.0], [71.8, 7.0], [71.9, 7.0], [72.0, 7.0], [72.1, 7.0], [72.2, 7.0], [72.3, 7.0], [72.4, 7.0], [72.5, 7.0], [72.6, 7.0], [72.7, 8.0], [72.8, 8.0], [72.9, 8.0], [73.0, 8.0], [73.1, 8.0], [73.2, 8.0], [73.3, 8.0], [73.4, 8.0], [73.5, 8.0], [73.6, 8.0], [73.7, 8.0], [73.8, 8.0], [73.9, 8.0], [74.0, 8.0], [74.1, 8.0], [74.2, 8.0], [74.3, 8.0], [74.4, 8.0], [74.5, 8.0], [74.6, 8.0], [74.7, 8.0], [74.8, 8.0], [74.9, 8.0], [75.0, 8.0], [75.1, 8.0], [75.2, 8.0], [75.3, 8.0], [75.4, 8.0], [75.5, 8.0], [75.6, 8.0], [75.7, 8.0], [75.8, 8.0], [75.9, 8.0], [76.0, 8.0], [76.1, 8.0], [76.2, 8.0], [76.3, 8.0], [76.4, 8.0], [76.5, 8.0], [76.6, 8.0], [76.7, 8.0], [76.8, 8.0], [76.9, 8.0], [77.0, 8.0], [77.1, 8.0], [77.2, 8.0], [77.3, 8.0], [77.4, 8.0], [77.5, 8.0], [77.6, 8.0], [77.7, 8.0], [77.8, 8.0], [77.9, 8.0], [78.0, 8.0], [78.1, 8.0], [78.2, 8.0], [78.3, 8.0], [78.4, 8.0], [78.5, 8.0], [78.6, 8.0], [78.7, 8.0], [78.8, 8.0], [78.9, 8.0], [79.0, 8.0], [79.1, 8.0], [79.2, 8.0], [79.3, 8.0], [79.4, 8.0], [79.5, 9.0], [79.6, 9.0], [79.7, 9.0], [79.8, 9.0], [79.9, 9.0], [80.0, 9.0], [80.1, 9.0], [80.2, 9.0], [80.3, 9.0], [80.4, 9.0], [80.5, 9.0], [80.6, 9.0], [80.7, 9.0], [80.8, 9.0], [80.9, 9.0], [81.0, 9.0], [81.1, 9.0], [81.2, 9.0], [81.3, 9.0], [81.4, 9.0], [81.5, 9.0], [81.6, 9.0], [81.7, 9.0], [81.8, 9.0], [81.9, 9.0], [82.0, 9.0], [82.1, 9.0], [82.2, 9.0], [82.3, 9.0], [82.4, 9.0], [82.5, 9.0], [82.6, 9.0], [82.7, 9.0], [82.8, 9.0], [82.9, 9.0], [83.0, 9.0], [83.1, 9.0], [83.2, 9.0], [83.3, 9.0], [83.4, 9.0], [83.5, 9.0], [83.6, 9.0], [83.7, 9.0], [83.8, 9.0], [83.9, 9.0], [84.0, 9.0], [84.1, 9.0], [84.2, 9.0], [84.3, 9.0], [84.4, 9.0], [84.5, 10.0], [84.6, 10.0], [84.7, 10.0], [84.8, 10.0], [84.9, 10.0], [85.0, 10.0], [85.1, 10.0], [85.2, 10.0], [85.3, 10.0], [85.4, 10.0], [85.5, 10.0], [85.6, 10.0], [85.7, 10.0], [85.8, 10.0], [85.9, 10.0], [86.0, 10.0], [86.1, 10.0], [86.2, 10.0], [86.3, 10.0], [86.4, 10.0], [86.5, 10.0], [86.6, 10.0], [86.7, 10.0], [86.8, 10.0], [86.9, 10.0], [87.0, 10.0], [87.1, 10.0], [87.2, 10.0], [87.3, 10.0], [87.4, 10.0], [87.5, 10.0], [87.6, 10.0], [87.7, 10.0], [87.8, 10.0], [87.9, 10.0], [88.0, 10.0], [88.1, 11.0], [88.2, 11.0], [88.3, 11.0], [88.4, 11.0], [88.5, 11.0], [88.6, 11.0], [88.7, 11.0], [88.8, 11.0], [88.9, 11.0], [89.0, 11.0], [89.1, 11.0], [89.2, 11.0], [89.3, 11.0], [89.4, 11.0], [89.5, 11.0], [89.6, 11.0], [89.7, 11.0], [89.8, 11.0], [89.9, 11.0], [90.0, 11.0], [90.1, 11.0], [90.2, 11.0], [90.3, 11.0], [90.4, 11.0], [90.5, 11.0], [90.6, 11.0], [90.7, 11.0], [90.8, 12.0], [90.9, 12.0], [91.0, 12.0], [91.1, 12.0], [91.2, 12.0], [91.3, 12.0], [91.4, 12.0], [91.5, 12.0], [91.6, 12.0], [91.7, 12.0], [91.8, 12.0], [91.9, 12.0], [92.0, 12.0], [92.1, 12.0], [92.2, 12.0], [92.3, 12.0], [92.4, 12.0], [92.5, 12.0], [92.6, 12.0], [92.7, 12.0], [92.8, 13.0], [92.9, 13.0], [93.0, 13.0], [93.1, 13.0], [93.2, 13.0], [93.3, 13.0], [93.4, 13.0], [93.5, 13.0], [93.6, 13.0], [93.7, 13.0], [93.8, 13.0], [93.9, 13.0], [94.0, 13.0], [94.1, 14.0], [94.2, 14.0], [94.3, 14.0], [94.4, 14.0], [94.5, 14.0], [94.6, 14.0], [94.7, 14.0], [94.8, 14.0], [94.9, 14.0], [95.0, 14.0], [95.1, 14.0], [95.2, 15.0], [95.3, 15.0], [95.4, 15.0], [95.5, 15.0], [95.6, 15.0], [95.7, 15.0], [95.8, 15.0], [95.9, 15.0], [96.0, 16.0], [96.1, 16.0], [96.2, 16.0], [96.3, 16.0], [96.4, 16.0], [96.5, 16.0], [96.6, 16.0], [96.7, 17.0], [96.8, 17.0], [96.9, 17.0], [97.0, 17.0], [97.1, 18.0], [97.2, 18.0], [97.3, 18.0], [97.4, 18.0], [97.5, 19.0], [97.6, 19.0], [97.7, 19.0], [97.8, 20.0], [97.9, 20.0], [98.0, 21.0], [98.1, 21.0], [98.2, 22.0], [98.3, 22.0], [98.4, 23.0], [98.5, 24.0], [98.6, 25.0], [98.7, 27.0], [98.8, 28.0], [98.9, 31.0], [99.0, 33.0], [99.1, 35.0], [99.2, 37.0], [99.3, 41.0], [99.4, 44.0], [99.5, 49.0], [99.6, 54.0], [99.7, 63.0], [99.8, 93.0], [99.9, 136.0]], "isOverall": false, "label": "GET thread name", "isController": false}, {"data": [[0.0, 3.0], [0.1, 4.0], [0.2, 5.0], [0.3, 5.0], [0.4, 5.0], [0.5, 5.0], [0.6, 6.0], [0.7, 6.0], [0.8, 6.0], [0.9, 6.0], [1.0, 6.0], [1.1, 7.0], [1.2, 7.0], [1.3, 7.0], [1.4, 7.0], [1.5, 7.0], [1.6, 7.0], [1.7, 7.0], [1.8, 8.0], [1.9, 8.0], [2.0, 8.0], [2.1, 8.0], [2.2, 8.0], [2.3, 9.0], [2.4, 9.0], [2.5, 9.0], [2.6, 9.0], [2.7, 9.0], [2.8, 9.0], [2.9, 10.0], [3.0, 10.0], [3.1, 10.0], [3.2, 10.0], [3.3, 11.0], [3.4, 11.0], [3.5, 11.0], [3.6, 11.0], [3.7, 12.0], [3.8, 12.0], [3.9, 12.0], [4.0, 13.0], [4.1, 13.0], [4.2, 14.0], [4.3, 14.0], [4.4, 14.0], [4.5, 15.0], [4.6, 15.0], [4.7, 16.0], [4.8, 16.0], [4.9, 17.0], [5.0, 17.0], [5.1, 18.0], [5.2, 18.0], [5.3, 19.0], [5.4, 20.0], [5.5, 20.0], [5.6, 21.0], [5.7, 21.0], [5.8, 22.0], [5.9, 23.0], [6.0, 23.0], [6.1, 24.0], [6.2, 24.0], [6.3, 25.0], [6.4, 26.0], [6.5, 27.0], [6.6, 28.0], [6.7, 29.0], [6.8, 30.0], [6.9, 31.0], [7.0, 33.0], [7.1, 34.0], [7.2, 36.0], [7.3, 39.0], [7.4, 42.0], [7.5, 45.0], [7.6, 49.0], [7.7, 55.0], [7.8, 58.0], [7.9, 61.0], [8.0, 63.0], [8.1, 66.0], [8.2, 69.0], [8.3, 71.0], [8.4, 73.0], [8.5, 75.0], [8.6, 76.0], [8.7, 77.0], [8.8, 79.0], [8.9, 80.0], [9.0, 82.0], [9.1, 83.0], [9.2, 84.0], [9.3, 85.0], [9.4, 87.0], [9.5, 87.0], [9.6, 88.0], [9.7, 90.0], [9.8, 91.0], [9.9, 92.0], [10.0, 93.0], [10.1, 95.0], [10.2, 95.0], [10.3, 97.0], [10.4, 98.0], [10.5, 99.0], [10.6, 100.0], [10.7, 101.0], [10.8, 102.0], [10.9, 103.0], [11.0, 105.0], [11.1, 106.0], [11.2, 108.0], [11.3, 111.0], [11.4, 113.0], [11.5, 115.0], [11.6, 117.0], [11.7, 119.0], [11.8, 120.0], [11.9, 122.0], [12.0, 124.0], [12.1, 126.0], [12.2, 127.0], [12.3, 128.0], [12.4, 130.0], [12.5, 132.0], [12.6, 133.0], [12.7, 135.0], [12.8, 137.0], [12.9, 139.0], [13.0, 140.0], [13.1, 142.0], [13.2, 144.0], [13.3, 145.0], [13.4, 146.0], [13.5, 147.0], [13.6, 149.0], [13.7, 150.0], [13.8, 151.0], [13.9, 153.0], [14.0, 154.0], [14.1, 156.0], [14.2, 157.0], [14.3, 159.0], [14.4, 160.0], [14.5, 162.0], [14.6, 163.0], [14.7, 164.0], [14.8, 165.0], [14.9, 167.0], [15.0, 168.0], [15.1, 169.0], [15.2, 170.0], [15.3, 171.0], [15.4, 172.0], [15.5, 174.0], [15.6, 175.0], [15.7, 176.0], [15.8, 177.0], [15.9, 179.0], [16.0, 180.0], [16.1, 181.0], [16.2, 183.0], [16.3, 185.0], [16.4, 186.0], [16.5, 187.0], [16.6, 189.0], [16.7, 190.0], [16.8, 192.0], [16.9, 193.0], [17.0, 194.0], [17.1, 195.0], [17.2, 196.0], [17.3, 197.0], [17.4, 198.0], [17.5, 199.0], [17.6, 200.0], [17.7, 201.0], [17.8, 202.0], [17.9, 203.0], [18.0, 204.0], [18.1, 205.0], [18.2, 206.0], [18.3, 207.0], [18.4, 209.0], [18.5, 210.0], [18.6, 211.0], [18.7, 212.0], [18.8, 214.0], [18.9, 215.0], [19.0, 217.0], [19.1, 219.0], [19.2, 221.0], [19.3, 222.0], [19.4, 223.0], [19.5, 225.0], [19.6, 226.0], [19.7, 227.0], [19.8, 228.0], [19.9, 229.0], [20.0, 230.0], [20.1, 231.0], [20.2, 232.0], [20.3, 233.0], [20.4, 234.0], [20.5, 235.0], [20.6, 236.0], [20.7, 238.0], [20.8, 239.0], [20.9, 240.0], [21.0, 241.0], [21.1, 242.0], [21.2, 242.0], [21.3, 244.0], [21.4, 244.0], [21.5, 246.0], [21.6, 247.0], [21.7, 248.0], [21.8, 249.0], [21.9, 249.0], [22.0, 250.0], [22.1, 251.0], [22.2, 252.0], [22.3, 253.0], [22.4, 254.0], [22.5, 255.0], [22.6, 256.0], [22.7, 257.0], [22.8, 258.0], [22.9, 259.0], [23.0, 260.0], [23.1, 261.0], [23.2, 262.0], [23.3, 263.0], [23.4, 264.0], [23.5, 265.0], [23.6, 266.0], [23.7, 267.0], [23.8, 268.0], [23.9, 269.0], [24.0, 270.0], [24.1, 271.0], [24.2, 272.0], [24.3, 273.0], [24.4, 274.0], [24.5, 275.0], [24.6, 277.0], [24.7, 278.0], [24.8, 279.0], [24.9, 280.0], [25.0, 281.0], [25.1, 282.0], [25.2, 283.0], [25.3, 284.0], [25.4, 285.0], [25.5, 286.0], [25.6, 287.0], [25.7, 287.0], [25.8, 288.0], [25.9, 289.0], [26.0, 290.0], [26.1, 291.0], [26.2, 292.0], [26.3, 293.0], [26.4, 295.0], [26.5, 296.0], [26.6, 297.0], [26.7, 299.0], [26.8, 300.0], [26.9, 302.0], [27.0, 303.0], [27.1, 304.0], [27.2, 305.0], [27.3, 307.0], [27.4, 308.0], [27.5, 310.0], [27.6, 311.0], [27.7, 312.0], [27.8, 313.0], [27.9, 314.0], [28.0, 315.0], [28.1, 316.0], [28.2, 318.0], [28.3, 319.0], [28.4, 320.0], [28.5, 322.0], [28.6, 323.0], [28.7, 324.0], [28.8, 325.0], [28.9, 326.0], [29.0, 327.0], [29.1, 328.0], [29.2, 329.0], [29.3, 330.0], [29.4, 331.0], [29.5, 331.0], [29.6, 333.0], [29.7, 333.0], [29.8, 334.0], [29.9, 335.0], [30.0, 336.0], [30.1, 337.0], [30.2, 337.0], [30.3, 338.0], [30.4, 339.0], [30.5, 340.0], [30.6, 340.0], [30.7, 341.0], [30.8, 341.0], [30.9, 342.0], [31.0, 343.0], [31.1, 343.0], [31.2, 344.0], [31.3, 344.0], [31.4, 345.0], [31.5, 345.0], [31.6, 346.0], [31.7, 347.0], [31.8, 347.0], [31.9, 348.0], [32.0, 349.0], [32.1, 349.0], [32.2, 350.0], [32.3, 350.0], [32.4, 351.0], [32.5, 351.0], [32.6, 352.0], [32.7, 352.0], [32.8, 353.0], [32.9, 353.0], [33.0, 354.0], [33.1, 354.0], [33.2, 355.0], [33.3, 355.0], [33.4, 356.0], [33.5, 356.0], [33.6, 356.0], [33.7, 357.0], [33.8, 357.0], [33.9, 358.0], [34.0, 358.0], [34.1, 358.0], [34.2, 359.0], [34.3, 359.0], [34.4, 360.0], [34.5, 360.0], [34.6, 360.0], [34.7, 361.0], [34.8, 361.0], [34.9, 361.0], [35.0, 362.0], [35.1, 362.0], [35.2, 363.0], [35.3, 363.0], [35.4, 363.0], [35.5, 364.0], [35.6, 364.0], [35.7, 365.0], [35.8, 365.0], [35.9, 366.0], [36.0, 366.0], [36.1, 366.0], [36.2, 366.0], [36.3, 367.0], [36.4, 367.0], [36.5, 367.0], [36.6, 368.0], [36.7, 368.0], [36.8, 368.0], [36.9, 368.0], [37.0, 369.0], [37.1, 369.0], [37.2, 369.0], [37.3, 370.0], [37.4, 370.0], [37.5, 370.0], [37.6, 371.0], [37.7, 371.0], [37.8, 371.0], [37.9, 371.0], [38.0, 372.0], [38.1, 372.0], [38.2, 372.0], [38.3, 372.0], [38.4, 373.0], [38.5, 373.0], [38.6, 373.0], [38.7, 373.0], [38.8, 374.0], [38.9, 374.0], [39.0, 374.0], [39.1, 374.0], [39.2, 375.0], [39.3, 375.0], [39.4, 375.0], [39.5, 376.0], [39.6, 376.0], [39.7, 376.0], [39.8, 376.0], [39.9, 376.0], [40.0, 377.0], [40.1, 377.0], [40.2, 377.0], [40.3, 378.0], [40.4, 378.0], [40.5, 378.0], [40.6, 378.0], [40.7, 379.0], [40.8, 379.0], [40.9, 379.0], [41.0, 379.0], [41.1, 379.0], [41.2, 380.0], [41.3, 380.0], [41.4, 380.0], [41.5, 380.0], [41.6, 381.0], [41.7, 381.0], [41.8, 381.0], [41.9, 381.0], [42.0, 381.0], [42.1, 382.0], [42.2, 382.0], [42.3, 382.0], [42.4, 382.0], [42.5, 383.0], [42.6, 383.0], [42.7, 383.0], [42.8, 383.0], [42.9, 383.0], [43.0, 384.0], [43.1, 384.0], [43.2, 384.0], [43.3, 384.0], [43.4, 385.0], [43.5, 385.0], [43.6, 385.0], [43.7, 385.0], [43.8, 386.0], [43.9, 386.0], [44.0, 386.0], [44.1, 386.0], [44.2, 386.0], [44.3, 387.0], [44.4, 387.0], [44.5, 387.0], [44.6, 387.0], [44.7, 387.0], [44.8, 388.0], [44.9, 388.0], [45.0, 388.0], [45.1, 388.0], [45.2, 388.0], [45.3, 389.0], [45.4, 389.0], [45.5, 389.0], [45.6, 389.0], [45.7, 389.0], [45.8, 390.0], [45.9, 390.0], [46.0, 390.0], [46.1, 390.0], [46.2, 390.0], [46.3, 391.0], [46.4, 391.0], [46.5, 391.0], [46.6, 391.0], [46.7, 392.0], [46.8, 392.0], [46.9, 392.0], [47.0, 392.0], [47.1, 392.0], [47.2, 393.0], [47.3, 393.0], [47.4, 393.0], [47.5, 393.0], [47.6, 393.0], [47.7, 393.0], [47.8, 394.0], [47.9, 394.0], [48.0, 394.0], [48.1, 394.0], [48.2, 394.0], [48.3, 395.0], [48.4, 395.0], [48.5, 395.0], [48.6, 395.0], [48.7, 395.0], [48.8, 396.0], [48.9, 396.0], [49.0, 396.0], [49.1, 396.0], [49.2, 396.0], [49.3, 397.0], [49.4, 397.0], [49.5, 397.0], [49.6, 397.0], [49.7, 397.0], [49.8, 398.0], [49.9, 398.0], [50.0, 398.0], [50.1, 398.0], [50.2, 398.0], [50.3, 398.0], [50.4, 399.0], [50.5, 399.0], [50.6, 399.0], [50.7, 399.0], [50.8, 399.0], [50.9, 399.0], [51.0, 400.0], [51.1, 400.0], [51.2, 400.0], [51.3, 400.0], [51.4, 400.0], [51.5, 401.0], [51.6, 401.0], [51.7, 401.0], [51.8, 401.0], [51.9, 401.0], [52.0, 401.0], [52.1, 402.0], [52.2, 402.0], [52.3, 402.0], [52.4, 402.0], [52.5, 402.0], [52.6, 402.0], [52.7, 403.0], [52.8, 403.0], [52.9, 403.0], [53.0, 403.0], [53.1, 403.0], [53.2, 403.0], [53.3, 404.0], [53.4, 404.0], [53.5, 404.0], [53.6, 404.0], [53.7, 404.0], [53.8, 404.0], [53.9, 405.0], [54.0, 405.0], [54.1, 405.0], [54.2, 405.0], [54.3, 405.0], [54.4, 405.0], [54.5, 406.0], [54.6, 406.0], [54.7, 406.0], [54.8, 406.0], [54.9, 406.0], [55.0, 406.0], [55.1, 407.0], [55.2, 407.0], [55.3, 407.0], [55.4, 407.0], [55.5, 407.0], [55.6, 407.0], [55.7, 407.0], [55.8, 408.0], [55.9, 408.0], [56.0, 408.0], [56.1, 408.0], [56.2, 408.0], [56.3, 408.0], [56.4, 409.0], [56.5, 409.0], [56.6, 409.0], [56.7, 409.0], [56.8, 409.0], [56.9, 409.0], [57.0, 409.0], [57.1, 409.0], [57.2, 410.0], [57.3, 410.0], [57.4, 410.0], [57.5, 410.0], [57.6, 410.0], [57.7, 410.0], [57.8, 410.0], [57.9, 411.0], [58.0, 411.0], [58.1, 411.0], [58.2, 411.0], [58.3, 411.0], [58.4, 411.0], [58.5, 412.0], [58.6, 412.0], [58.7, 412.0], [58.8, 412.0], [58.9, 412.0], [59.0, 412.0], [59.1, 413.0], [59.2, 413.0], [59.3, 413.0], [59.4, 413.0], [59.5, 413.0], [59.6, 413.0], [59.7, 414.0], [59.8, 414.0], [59.9, 414.0], [60.0, 414.0], [60.1, 414.0], [60.2, 414.0], [60.3, 414.0], [60.4, 415.0], [60.5, 415.0], [60.6, 415.0], [60.7, 415.0], [60.8, 415.0], [60.9, 416.0], [61.0, 416.0], [61.1, 416.0], [61.2, 416.0], [61.3, 416.0], [61.4, 416.0], [61.5, 416.0], [61.6, 417.0], [61.7, 417.0], [61.8, 417.0], [61.9, 417.0], [62.0, 417.0], [62.1, 417.0], [62.2, 418.0], [62.3, 418.0], [62.4, 418.0], [62.5, 418.0], [62.6, 418.0], [62.7, 418.0], [62.8, 418.0], [62.9, 419.0], [63.0, 419.0], [63.1, 419.0], [63.2, 419.0], [63.3, 419.0], [63.4, 419.0], [63.5, 420.0], [63.6, 420.0], [63.7, 420.0], [63.8, 420.0], [63.9, 420.0], [64.0, 420.0], [64.1, 421.0], [64.2, 421.0], [64.3, 421.0], [64.4, 421.0], [64.5, 421.0], [64.6, 421.0], [64.7, 422.0], [64.8, 422.0], [64.9, 422.0], [65.0, 422.0], [65.1, 422.0], [65.2, 423.0], [65.3, 423.0], [65.4, 423.0], [65.5, 423.0], [65.6, 423.0], [65.7, 423.0], [65.8, 424.0], [65.9, 424.0], [66.0, 424.0], [66.1, 424.0], [66.2, 424.0], [66.3, 424.0], [66.4, 425.0], [66.5, 425.0], [66.6, 425.0], [66.7, 425.0], [66.8, 425.0], [66.9, 425.0], [67.0, 425.0], [67.1, 426.0], [67.2, 426.0], [67.3, 426.0], [67.4, 426.0], [67.5, 426.0], [67.6, 426.0], [67.7, 427.0], [67.8, 427.0], [67.9, 427.0], [68.0, 427.0], [68.1, 427.0], [68.2, 427.0], [68.3, 428.0], [68.4, 428.0], [68.5, 428.0], [68.6, 428.0], [68.7, 428.0], [68.8, 428.0], [68.9, 429.0], [69.0, 429.0], [69.1, 429.0], [69.2, 429.0], [69.3, 429.0], [69.4, 429.0], [69.5, 429.0], [69.6, 430.0], [69.7, 430.0], [69.8, 430.0], [69.9, 430.0], [70.0, 430.0], [70.1, 430.0], [70.2, 431.0], [70.3, 431.0], [70.4, 431.0], [70.5, 431.0], [70.6, 431.0], [70.7, 431.0], [70.8, 432.0], [70.9, 432.0], [71.0, 432.0], [71.1, 432.0], [71.2, 432.0], [71.3, 432.0], [71.4, 433.0], [71.5, 433.0], [71.6, 433.0], [71.7, 433.0], [71.8, 433.0], [71.9, 434.0], [72.0, 434.0], [72.1, 434.0], [72.2, 434.0], [72.3, 434.0], [72.4, 434.0], [72.5, 434.0], [72.6, 435.0], [72.7, 435.0], [72.8, 435.0], [72.9, 435.0], [73.0, 435.0], [73.1, 435.0], [73.2, 436.0], [73.3, 436.0], [73.4, 436.0], [73.5, 436.0], [73.6, 436.0], [73.7, 436.0], [73.8, 437.0], [73.9, 437.0], [74.0, 437.0], [74.1, 437.0], [74.2, 437.0], [74.3, 437.0], [74.4, 438.0], [74.5, 438.0], [74.6, 438.0], [74.7, 438.0], [74.8, 438.0], [74.9, 439.0], [75.0, 439.0], [75.1, 439.0], [75.2, 439.0], [75.3, 439.0], [75.4, 439.0], [75.5, 440.0], [75.6, 440.0], [75.7, 440.0], [75.8, 440.0], [75.9, 440.0], [76.0, 441.0], [76.1, 441.0], [76.2, 441.0], [76.3, 441.0], [76.4, 441.0], [76.5, 442.0], [76.6, 442.0], [76.7, 442.0], [76.8, 442.0], [76.9, 442.0], [77.0, 443.0], [77.1, 443.0], [77.2, 443.0], [77.3, 443.0], [77.4, 443.0], [77.5, 444.0], [77.6, 444.0], [77.7, 444.0], [77.8, 444.0], [77.9, 444.0], [78.0, 445.0], [78.1, 445.0], [78.2, 445.0], [78.3, 445.0], [78.4, 445.0], [78.5, 446.0], [78.6, 446.0], [78.7, 446.0], [78.8, 446.0], [78.9, 446.0], [79.0, 447.0], [79.1, 447.0], [79.2, 447.0], [79.3, 447.0], [79.4, 448.0], [79.5, 448.0], [79.6, 448.0], [79.7, 448.0], [79.8, 449.0], [79.9, 449.0], [80.0, 449.0], [80.1, 449.0], [80.2, 450.0], [80.3, 450.0], [80.4, 450.0], [80.5, 450.0], [80.6, 450.0], [80.7, 451.0], [80.8, 451.0], [80.9, 451.0], [81.0, 451.0], [81.1, 452.0], [81.2, 452.0], [81.3, 452.0], [81.4, 453.0], [81.5, 453.0], [81.6, 453.0], [81.7, 453.0], [81.8, 454.0], [81.9, 454.0], [82.0, 454.0], [82.1, 454.0], [82.2, 455.0], [82.3, 455.0], [82.4, 455.0], [82.5, 456.0], [82.6, 456.0], [82.7, 456.0], [82.8, 456.0], [82.9, 457.0], [83.0, 457.0], [83.1, 457.0], [83.2, 458.0], [83.3, 458.0], [83.4, 458.0], [83.5, 458.0], [83.6, 459.0], [83.7, 459.0], [83.8, 459.0], [83.9, 459.0], [84.0, 460.0], [84.1, 460.0], [84.2, 460.0], [84.3, 461.0], [84.4, 461.0], [84.5, 461.0], [84.6, 461.0], [84.7, 462.0], [84.8, 462.0], [84.9, 462.0], [85.0, 463.0], [85.1, 463.0], [85.2, 463.0], [85.3, 464.0], [85.4, 464.0], [85.5, 464.0], [85.6, 465.0], [85.7, 465.0], [85.8, 465.0], [85.9, 466.0], [86.0, 466.0], [86.1, 466.0], [86.2, 467.0], [86.3, 467.0], [86.4, 467.0], [86.5, 468.0], [86.6, 468.0], [86.7, 468.0], [86.8, 468.0], [86.9, 469.0], [87.0, 469.0], [87.1, 470.0], [87.2, 470.0], [87.3, 470.0], [87.4, 471.0], [87.5, 471.0], [87.6, 471.0], [87.7, 472.0], [87.8, 472.0], [87.9, 472.0], [88.0, 473.0], [88.1, 473.0], [88.2, 473.0], [88.3, 474.0], [88.4, 474.0], [88.5, 475.0], [88.6, 475.0], [88.7, 475.0], [88.8, 476.0], [88.9, 476.0], [89.0, 476.0], [89.1, 477.0], [89.2, 477.0], [89.3, 477.0], [89.4, 478.0], [89.5, 478.0], [89.6, 478.0], [89.7, 479.0], [89.8, 479.0], [89.9, 480.0], [90.0, 480.0], [90.1, 481.0], [90.2, 481.0], [90.3, 481.0], [90.4, 482.0], [90.5, 482.0], [90.6, 483.0], [90.7, 483.0], [90.8, 484.0], [90.9, 485.0], [91.0, 485.0], [91.1, 485.0], [91.2, 486.0], [91.3, 486.0], [91.4, 487.0], [91.5, 488.0], [91.6, 488.0], [91.7, 489.0], [91.8, 489.0], [91.9, 490.0], [92.0, 491.0], [92.1, 491.0], [92.2, 492.0], [92.3, 492.0], [92.4, 493.0], [92.5, 493.0], [92.6, 494.0], [92.7, 495.0], [92.8, 495.0], [92.9, 496.0], [93.0, 497.0], [93.1, 498.0], [93.2, 499.0], [93.3, 500.0], [93.4, 501.0], [93.5, 501.0], [93.6, 502.0], [93.7, 503.0], [93.8, 503.0], [93.9, 504.0], [94.0, 505.0], [94.1, 506.0], [94.2, 507.0], [94.3, 508.0], [94.4, 508.0], [94.5, 509.0], [94.6, 510.0], [94.7, 511.0], [94.8, 512.0], [94.9, 513.0], [95.0, 514.0], [95.1, 514.0], [95.2, 516.0], [95.3, 517.0], [95.4, 518.0], [95.5, 519.0], [95.6, 520.0], [95.7, 522.0], [95.8, 523.0], [95.9, 525.0], [96.0, 526.0], [96.1, 527.0], [96.2, 528.0], [96.3, 529.0], [96.4, 531.0], [96.5, 532.0], [96.6, 534.0], [96.7, 536.0], [96.8, 538.0], [96.9, 540.0], [97.0, 541.0], [97.1, 542.0], [97.2, 545.0], [97.3, 547.0], [97.4, 550.0], [97.5, 552.0], [97.6, 554.0], [97.7, 559.0], [97.8, 562.0], [97.9, 566.0], [98.0, 571.0], [98.1, 575.0], [98.2, 581.0], [98.3, 588.0], [98.4, 598.0], [98.5, 616.0], [98.6, 632.0], [98.7, 673.0], [98.8, 711.0], [98.9, 754.0], [99.0, 776.0], [99.1, 791.0], [99.2, 802.0], [99.3, 818.0], [99.4, 833.0], [99.5, 847.0], [99.6, 864.0], [99.7, 886.0], [99.8, 926.0], [99.9, 981.0]], "isOverall": false, "label": "GET employee by id", "isController": false}, {"data": [[0.0, 5.0], [0.1, 6.0], [0.2, 7.0], [0.3, 7.0], [0.4, 8.0], [0.5, 8.0], [0.6, 8.0], [0.7, 8.0], [0.8, 8.0], [0.9, 9.0], [1.0, 9.0], [1.1, 9.0], [1.2, 9.0], [1.3, 10.0], [1.4, 10.0], [1.5, 10.0], [1.6, 10.0], [1.7, 10.0], [1.8, 11.0], [1.9, 11.0], [2.0, 11.0], [2.1, 12.0], [2.2, 12.0], [2.3, 12.0], [2.4, 12.0], [2.5, 12.0], [2.6, 13.0], [2.7, 13.0], [2.8, 13.0], [2.9, 14.0], [3.0, 14.0], [3.1, 15.0], [3.2, 15.0], [3.3, 15.0], [3.4, 16.0], [3.5, 16.0], [3.6, 17.0], [3.7, 17.0], [3.8, 18.0], [3.9, 18.0], [4.0, 19.0], [4.1, 19.0], [4.2, 20.0], [4.3, 20.0], [4.4, 21.0], [4.5, 21.0], [4.6, 22.0], [4.7, 23.0], [4.8, 23.0], [4.9, 24.0], [5.0, 24.0], [5.1, 25.0], [5.2, 25.0], [5.3, 26.0], [5.4, 27.0], [5.5, 27.0], [5.6, 28.0], [5.7, 28.0], [5.8, 29.0], [5.9, 30.0], [6.0, 31.0], [6.1, 32.0], [6.2, 33.0], [6.3, 34.0], [6.4, 35.0], [6.5, 36.0], [6.6, 37.0], [6.7, 39.0], [6.8, 42.0], [6.9, 45.0], [7.0, 48.0], [7.1, 52.0], [7.2, 55.0], [7.3, 60.0], [7.4, 64.0], [7.5, 67.0], [7.6, 69.0], [7.7, 72.0], [7.8, 75.0], [7.9, 76.0], [8.0, 79.0], [8.1, 80.0], [8.2, 82.0], [8.3, 83.0], [8.4, 84.0], [8.5, 85.0], [8.6, 86.0], [8.7, 87.0], [8.8, 88.0], [8.9, 90.0], [9.0, 91.0], [9.1, 92.0], [9.2, 93.0], [9.3, 95.0], [9.4, 96.0], [9.5, 97.0], [9.6, 98.0], [9.7, 99.0], [9.8, 100.0], [9.9, 102.0], [10.0, 103.0], [10.1, 104.0], [10.2, 105.0], [10.3, 107.0], [10.4, 108.0], [10.5, 110.0], [10.6, 112.0], [10.7, 115.0], [10.8, 116.0], [10.9, 118.0], [11.0, 121.0], [11.1, 123.0], [11.2, 125.0], [11.3, 127.0], [11.4, 129.0], [11.5, 130.0], [11.6, 132.0], [11.7, 134.0], [11.8, 135.0], [11.9, 136.0], [12.0, 138.0], [12.1, 139.0], [12.2, 141.0], [12.3, 142.0], [12.4, 143.0], [12.5, 145.0], [12.6, 146.0], [12.7, 147.0], [12.8, 149.0], [12.9, 150.0], [13.0, 151.0], [13.1, 152.0], [13.2, 154.0], [13.3, 155.0], [13.4, 157.0], [13.5, 158.0], [13.6, 159.0], [13.7, 161.0], [13.8, 162.0], [13.9, 164.0], [14.0, 165.0], [14.1, 166.0], [14.2, 167.0], [14.3, 169.0], [14.4, 170.0], [14.5, 171.0], [14.6, 172.0], [14.7, 174.0], [14.8, 175.0], [14.9, 176.0], [15.0, 177.0], [15.1, 178.0], [15.2, 179.0], [15.3, 180.0], [15.4, 181.0], [15.5, 183.0], [15.6, 184.0], [15.7, 186.0], [15.8, 187.0], [15.9, 189.0], [16.0, 191.0], [16.1, 192.0], [16.2, 193.0], [16.3, 195.0], [16.4, 196.0], [16.5, 198.0], [16.6, 199.0], [16.7, 200.0], [16.8, 201.0], [16.9, 202.0], [17.0, 203.0], [17.1, 204.0], [17.2, 205.0], [17.3, 207.0], [17.4, 208.0], [17.5, 209.0], [17.6, 211.0], [17.7, 212.0], [17.8, 214.0], [17.9, 215.0], [18.0, 216.0], [18.1, 218.0], [18.2, 219.0], [18.3, 221.0], [18.4, 222.0], [18.5, 224.0], [18.6, 225.0], [18.7, 227.0], [18.8, 228.0], [18.9, 229.0], [19.0, 231.0], [19.1, 231.0], [19.2, 233.0], [19.3, 234.0], [19.4, 234.0], [19.5, 236.0], [19.6, 237.0], [19.7, 238.0], [19.8, 239.0], [19.9, 240.0], [20.0, 241.0], [20.1, 243.0], [20.2, 244.0], [20.3, 245.0], [20.4, 246.0], [20.5, 247.0], [20.6, 248.0], [20.7, 249.0], [20.8, 250.0], [20.9, 252.0], [21.0, 252.0], [21.1, 254.0], [21.2, 255.0], [21.3, 256.0], [21.4, 257.0], [21.5, 258.0], [21.6, 258.0], [21.7, 259.0], [21.8, 260.0], [21.9, 261.0], [22.0, 262.0], [22.1, 263.0], [22.2, 264.0], [22.3, 265.0], [22.4, 266.0], [22.5, 267.0], [22.6, 269.0], [22.7, 270.0], [22.8, 271.0], [22.9, 272.0], [23.0, 273.0], [23.1, 274.0], [23.2, 275.0], [23.3, 277.0], [23.4, 278.0], [23.5, 279.0], [23.6, 280.0], [23.7, 281.0], [23.8, 282.0], [23.9, 284.0], [24.0, 285.0], [24.1, 286.0], [24.2, 287.0], [24.3, 288.0], [24.4, 289.0], [24.5, 291.0], [24.6, 291.0], [24.7, 293.0], [24.8, 294.0], [24.9, 295.0], [25.0, 296.0], [25.1, 298.0], [25.2, 299.0], [25.3, 300.0], [25.4, 301.0], [25.5, 302.0], [25.6, 303.0], [25.7, 304.0], [25.8, 306.0], [25.9, 307.0], [26.0, 308.0], [26.1, 309.0], [26.2, 310.0], [26.3, 311.0], [26.4, 312.0], [26.5, 313.0], [26.6, 315.0], [26.7, 316.0], [26.8, 318.0], [26.9, 319.0], [27.0, 320.0], [27.1, 321.0], [27.2, 323.0], [27.3, 324.0], [27.4, 325.0], [27.5, 326.0], [27.6, 327.0], [27.7, 329.0], [27.8, 330.0], [27.9, 331.0], [28.0, 332.0], [28.1, 333.0], [28.2, 334.0], [28.3, 334.0], [28.4, 335.0], [28.5, 336.0], [28.6, 337.0], [28.7, 338.0], [28.8, 339.0], [28.9, 340.0], [29.0, 340.0], [29.1, 341.0], [29.2, 342.0], [29.3, 343.0], [29.4, 343.0], [29.5, 344.0], [29.6, 345.0], [29.7, 345.0], [29.8, 346.0], [29.9, 346.0], [30.0, 347.0], [30.1, 348.0], [30.2, 349.0], [30.3, 349.0], [30.4, 350.0], [30.5, 350.0], [30.6, 351.0], [30.7, 351.0], [30.8, 352.0], [30.9, 353.0], [31.0, 353.0], [31.1, 354.0], [31.2, 354.0], [31.3, 355.0], [31.4, 355.0], [31.5, 356.0], [31.6, 356.0], [31.7, 357.0], [31.8, 357.0], [31.9, 358.0], [32.0, 358.0], [32.1, 359.0], [32.2, 359.0], [32.3, 360.0], [32.4, 360.0], [32.5, 361.0], [32.6, 361.0], [32.7, 362.0], [32.8, 362.0], [32.9, 363.0], [33.0, 363.0], [33.1, 364.0], [33.2, 364.0], [33.3, 364.0], [33.4, 365.0], [33.5, 365.0], [33.6, 366.0], [33.7, 366.0], [33.8, 366.0], [33.9, 367.0], [34.0, 367.0], [34.1, 368.0], [34.2, 368.0], [34.3, 368.0], [34.4, 369.0], [34.5, 369.0], [34.6, 369.0], [34.7, 370.0], [34.8, 370.0], [34.9, 370.0], [35.0, 371.0], [35.1, 371.0], [35.2, 371.0], [35.3, 372.0], [35.4, 372.0], [35.5, 372.0], [35.6, 373.0], [35.7, 373.0], [35.8, 373.0], [35.9, 374.0], [36.0, 374.0], [36.1, 374.0], [36.2, 375.0], [36.3, 375.0], [36.4, 375.0], [36.5, 375.0], [36.6, 376.0], [36.7, 376.0], [36.8, 376.0], [36.9, 377.0], [37.0, 377.0], [37.1, 377.0], [37.2, 378.0], [37.3, 378.0], [37.4, 378.0], [37.5, 378.0], [37.6, 378.0], [37.7, 379.0], [37.8, 379.0], [37.9, 379.0], [38.0, 380.0], [38.1, 380.0], [38.2, 380.0], [38.3, 380.0], [38.4, 381.0], [38.5, 381.0], [38.6, 381.0], [38.7, 381.0], [38.8, 381.0], [38.9, 382.0], [39.0, 382.0], [39.1, 382.0], [39.2, 382.0], [39.3, 383.0], [39.4, 383.0], [39.5, 383.0], [39.6, 383.0], [39.7, 384.0], [39.8, 384.0], [39.9, 384.0], [40.0, 384.0], [40.1, 385.0], [40.2, 385.0], [40.3, 385.0], [40.4, 385.0], [40.5, 386.0], [40.6, 386.0], [40.7, 386.0], [40.8, 386.0], [40.9, 387.0], [41.0, 387.0], [41.1, 387.0], [41.2, 387.0], [41.3, 387.0], [41.4, 388.0], [41.5, 388.0], [41.6, 388.0], [41.7, 388.0], [41.8, 389.0], [41.9, 389.0], [42.0, 389.0], [42.1, 389.0], [42.2, 389.0], [42.3, 390.0], [42.4, 390.0], [42.5, 390.0], [42.6, 390.0], [42.7, 391.0], [42.8, 391.0], [42.9, 391.0], [43.0, 391.0], [43.1, 392.0], [43.2, 392.0], [43.3, 392.0], [43.4, 392.0], [43.5, 392.0], [43.6, 393.0], [43.7, 393.0], [43.8, 393.0], [43.9, 393.0], [44.0, 393.0], [44.1, 394.0], [44.2, 394.0], [44.3, 394.0], [44.4, 394.0], [44.5, 394.0], [44.6, 395.0], [44.7, 395.0], [44.8, 395.0], [44.9, 395.0], [45.0, 395.0], [45.1, 396.0], [45.2, 396.0], [45.3, 396.0], [45.4, 396.0], [45.5, 396.0], [45.6, 397.0], [45.7, 397.0], [45.8, 397.0], [45.9, 397.0], [46.0, 397.0], [46.1, 398.0], [46.2, 398.0], [46.3, 398.0], [46.4, 398.0], [46.5, 398.0], [46.6, 399.0], [46.7, 399.0], [46.8, 399.0], [46.9, 399.0], [47.0, 399.0], [47.1, 400.0], [47.2, 400.0], [47.3, 400.0], [47.4, 400.0], [47.5, 401.0], [47.6, 401.0], [47.7, 401.0], [47.8, 401.0], [47.9, 401.0], [48.0, 401.0], [48.1, 402.0], [48.2, 402.0], [48.3, 402.0], [48.4, 402.0], [48.5, 402.0], [48.6, 403.0], [48.7, 403.0], [48.8, 403.0], [48.9, 403.0], [49.0, 403.0], [49.1, 403.0], [49.2, 404.0], [49.3, 404.0], [49.4, 404.0], [49.5, 404.0], [49.6, 404.0], [49.7, 405.0], [49.8, 405.0], [49.9, 405.0], [50.0, 405.0], [50.1, 405.0], [50.2, 405.0], [50.3, 406.0], [50.4, 406.0], [50.5, 406.0], [50.6, 406.0], [50.7, 406.0], [50.8, 407.0], [50.9, 407.0], [51.0, 407.0], [51.1, 407.0], [51.2, 407.0], [51.3, 407.0], [51.4, 407.0], [51.5, 408.0], [51.6, 408.0], [51.7, 408.0], [51.8, 408.0], [51.9, 408.0], [52.0, 408.0], [52.1, 409.0], [52.2, 409.0], [52.3, 409.0], [52.4, 409.0], [52.5, 409.0], [52.6, 409.0], [52.7, 409.0], [52.8, 410.0], [52.9, 410.0], [53.0, 410.0], [53.1, 410.0], [53.2, 410.0], [53.3, 410.0], [53.4, 410.0], [53.5, 411.0], [53.6, 411.0], [53.7, 411.0], [53.8, 411.0], [53.9, 411.0], [54.0, 411.0], [54.1, 412.0], [54.2, 412.0], [54.3, 412.0], [54.4, 412.0], [54.5, 412.0], [54.6, 412.0], [54.7, 413.0], [54.8, 413.0], [54.9, 413.0], [55.0, 413.0], [55.1, 413.0], [55.2, 413.0], [55.3, 414.0], [55.4, 414.0], [55.5, 414.0], [55.6, 414.0], [55.7, 414.0], [55.8, 414.0], [55.9, 415.0], [56.0, 415.0], [56.1, 415.0], [56.2, 415.0], [56.3, 415.0], [56.4, 415.0], [56.5, 415.0], [56.6, 416.0], [56.7, 416.0], [56.8, 416.0], [56.9, 416.0], [57.0, 416.0], [57.1, 417.0], [57.2, 417.0], [57.3, 417.0], [57.4, 417.0], [57.5, 417.0], [57.6, 417.0], [57.7, 418.0], [57.8, 418.0], [57.9, 418.0], [58.0, 418.0], [58.1, 418.0], [58.2, 418.0], [58.3, 418.0], [58.4, 419.0], [58.5, 419.0], [58.6, 419.0], [58.7, 419.0], [58.8, 419.0], [58.9, 419.0], [59.0, 420.0], [59.1, 420.0], [59.2, 420.0], [59.3, 420.0], [59.4, 420.0], [59.5, 421.0], [59.6, 421.0], [59.7, 421.0], [59.8, 421.0], [59.9, 421.0], [60.0, 421.0], [60.1, 421.0], [60.2, 422.0], [60.3, 422.0], [60.4, 422.0], [60.5, 422.0], [60.6, 422.0], [60.7, 422.0], [60.8, 423.0], [60.9, 423.0], [61.0, 423.0], [61.1, 423.0], [61.2, 423.0], [61.3, 423.0], [61.4, 424.0], [61.5, 424.0], [61.6, 424.0], [61.7, 424.0], [61.8, 424.0], [61.9, 424.0], [62.0, 425.0], [62.1, 425.0], [62.2, 425.0], [62.3, 425.0], [62.4, 425.0], [62.5, 425.0], [62.6, 425.0], [62.7, 426.0], [62.8, 426.0], [62.9, 426.0], [63.0, 426.0], [63.1, 426.0], [63.2, 426.0], [63.3, 427.0], [63.4, 427.0], [63.5, 427.0], [63.6, 427.0], [63.7, 427.0], [63.8, 427.0], [63.9, 427.0], [64.0, 428.0], [64.1, 428.0], [64.2, 428.0], [64.3, 428.0], [64.4, 428.0], [64.5, 428.0], [64.6, 429.0], [64.7, 429.0], [64.8, 429.0], [64.9, 429.0], [65.0, 429.0], [65.1, 429.0], [65.2, 430.0], [65.3, 430.0], [65.4, 430.0], [65.5, 430.0], [65.6, 430.0], [65.7, 430.0], [65.8, 430.0], [65.9, 431.0], [66.0, 431.0], [66.1, 431.0], [66.2, 431.0], [66.3, 431.0], [66.4, 431.0], [66.5, 431.0], [66.6, 432.0], [66.7, 432.0], [66.8, 432.0], [66.9, 432.0], [67.0, 432.0], [67.1, 432.0], [67.2, 433.0], [67.3, 433.0], [67.4, 433.0], [67.5, 433.0], [67.6, 433.0], [67.7, 433.0], [67.8, 433.0], [67.9, 434.0], [68.0, 434.0], [68.1, 434.0], [68.2, 434.0], [68.3, 434.0], [68.4, 434.0], [68.5, 434.0], [68.6, 435.0], [68.7, 435.0], [68.8, 435.0], [68.9, 435.0], [69.0, 435.0], [69.1, 435.0], [69.2, 435.0], [69.3, 436.0], [69.4, 436.0], [69.5, 436.0], [69.6, 436.0], [69.7, 436.0], [69.8, 436.0], [69.9, 437.0], [70.0, 437.0], [70.1, 437.0], [70.2, 437.0], [70.3, 437.0], [70.4, 437.0], [70.5, 438.0], [70.6, 438.0], [70.7, 438.0], [70.8, 438.0], [70.9, 438.0], [71.0, 438.0], [71.1, 439.0], [71.2, 439.0], [71.3, 439.0], [71.4, 439.0], [71.5, 439.0], [71.6, 439.0], [71.7, 439.0], [71.8, 440.0], [71.9, 440.0], [72.0, 440.0], [72.1, 440.0], [72.2, 440.0], [72.3, 440.0], [72.4, 441.0], [72.5, 441.0], [72.6, 441.0], [72.7, 441.0], [72.8, 441.0], [72.9, 442.0], [73.0, 442.0], [73.1, 442.0], [73.2, 442.0], [73.3, 442.0], [73.4, 442.0], [73.5, 443.0], [73.6, 443.0], [73.7, 443.0], [73.8, 443.0], [73.9, 443.0], [74.0, 444.0], [74.1, 444.0], [74.2, 444.0], [74.3, 444.0], [74.4, 444.0], [74.5, 445.0], [74.6, 445.0], [74.7, 445.0], [74.8, 445.0], [74.9, 445.0], [75.0, 445.0], [75.1, 446.0], [75.2, 446.0], [75.3, 446.0], [75.4, 446.0], [75.5, 446.0], [75.6, 446.0], [75.7, 447.0], [75.8, 447.0], [75.9, 447.0], [76.0, 447.0], [76.1, 447.0], [76.2, 448.0], [76.3, 448.0], [76.4, 448.0], [76.5, 448.0], [76.6, 448.0], [76.7, 449.0], [76.8, 449.0], [76.9, 449.0], [77.0, 449.0], [77.1, 449.0], [77.2, 450.0], [77.3, 450.0], [77.4, 450.0], [77.5, 450.0], [77.6, 451.0], [77.7, 451.0], [77.8, 451.0], [77.9, 451.0], [78.0, 451.0], [78.1, 452.0], [78.2, 452.0], [78.3, 452.0], [78.4, 452.0], [78.5, 452.0], [78.6, 453.0], [78.7, 453.0], [78.8, 453.0], [78.9, 454.0], [79.0, 454.0], [79.1, 454.0], [79.2, 454.0], [79.3, 454.0], [79.4, 455.0], [79.5, 455.0], [79.6, 455.0], [79.7, 455.0], [79.8, 456.0], [79.9, 456.0], [80.0, 456.0], [80.1, 456.0], [80.2, 457.0], [80.3, 457.0], [80.4, 457.0], [80.5, 457.0], [80.6, 458.0], [80.7, 458.0], [80.8, 458.0], [80.9, 458.0], [81.0, 459.0], [81.1, 459.0], [81.2, 459.0], [81.3, 459.0], [81.4, 460.0], [81.5, 460.0], [81.6, 460.0], [81.7, 460.0], [81.8, 461.0], [81.9, 461.0], [82.0, 461.0], [82.1, 461.0], [82.2, 462.0], [82.3, 462.0], [82.4, 462.0], [82.5, 462.0], [82.6, 463.0], [82.7, 463.0], [82.8, 463.0], [82.9, 464.0], [83.0, 464.0], [83.1, 464.0], [83.2, 464.0], [83.3, 465.0], [83.4, 465.0], [83.5, 465.0], [83.6, 465.0], [83.7, 466.0], [83.8, 466.0], [83.9, 466.0], [84.0, 467.0], [84.1, 467.0], [84.2, 467.0], [84.3, 467.0], [84.4, 468.0], [84.5, 468.0], [84.6, 468.0], [84.7, 468.0], [84.8, 469.0], [84.9, 469.0], [85.0, 469.0], [85.1, 470.0], [85.2, 470.0], [85.3, 470.0], [85.4, 470.0], [85.5, 471.0], [85.6, 471.0], [85.7, 471.0], [85.8, 472.0], [85.9, 472.0], [86.0, 472.0], [86.1, 473.0], [86.2, 473.0], [86.3, 473.0], [86.4, 474.0], [86.5, 474.0], [86.6, 474.0], [86.7, 474.0], [86.8, 475.0], [86.9, 475.0], [87.0, 476.0], [87.1, 476.0], [87.2, 476.0], [87.3, 476.0], [87.4, 477.0], [87.5, 477.0], [87.6, 477.0], [87.7, 478.0], [87.8, 478.0], [87.9, 479.0], [88.0, 479.0], [88.1, 479.0], [88.2, 480.0], [88.3, 480.0], [88.4, 481.0], [88.5, 481.0], [88.6, 481.0], [88.7, 482.0], [88.8, 482.0], [88.9, 482.0], [89.0, 483.0], [89.1, 483.0], [89.2, 484.0], [89.3, 484.0], [89.4, 484.0], [89.5, 485.0], [89.6, 485.0], [89.7, 486.0], [89.8, 486.0], [89.9, 487.0], [90.0, 487.0], [90.1, 488.0], [90.2, 488.0], [90.3, 489.0], [90.4, 489.0], [90.5, 490.0], [90.6, 490.0], [90.7, 491.0], [90.8, 491.0], [90.9, 492.0], [91.0, 492.0], [91.1, 493.0], [91.2, 493.0], [91.3, 494.0], [91.4, 494.0], [91.5, 495.0], [91.6, 495.0], [91.7, 496.0], [91.8, 496.0], [91.9, 497.0], [92.0, 498.0], [92.1, 498.0], [92.2, 499.0], [92.3, 499.0], [92.4, 500.0], [92.5, 501.0], [92.6, 502.0], [92.7, 502.0], [92.8, 503.0], [92.9, 504.0], [93.0, 504.0], [93.1, 505.0], [93.2, 506.0], [93.3, 506.0], [93.4, 507.0], [93.5, 508.0], [93.6, 508.0], [93.7, 509.0], [93.8, 510.0], [93.9, 511.0], [94.0, 512.0], [94.1, 513.0], [94.2, 514.0], [94.3, 514.0], [94.4, 515.0], [94.5, 516.0], [94.6, 517.0], [94.7, 518.0], [94.8, 519.0], [94.9, 520.0], [95.0, 521.0], [95.1, 522.0], [95.2, 523.0], [95.3, 524.0], [95.4, 525.0], [95.5, 526.0], [95.6, 527.0], [95.7, 529.0], [95.8, 530.0], [95.9, 532.0], [96.0, 533.0], [96.1, 534.0], [96.2, 536.0], [96.3, 538.0], [96.4, 539.0], [96.5, 541.0], [96.6, 543.0], [96.7, 545.0], [96.8, 547.0], [96.9, 548.0], [97.0, 550.0], [97.1, 552.0], [97.2, 553.0], [97.3, 556.0], [97.4, 559.0], [97.5, 562.0], [97.6, 566.0], [97.7, 569.0], [97.8, 573.0], [97.9, 577.0], [98.0, 582.0], [98.1, 588.0], [98.2, 595.0], [98.3, 604.0], [98.4, 610.0], [98.5, 619.0], [98.6, 636.0], [98.7, 652.0], [98.8, 699.0], [98.9, 739.0], [99.0, 774.0], [99.1, 788.0], [99.2, 798.0], [99.3, 812.0], [99.4, 824.0], [99.5, 838.0], [99.6, 850.0], [99.7, 871.0], [99.8, 905.0], [99.9, 958.0]], "isOverall": false, "label": "POST employee", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 39927.0, "series": [{"data": [[0.0, 2953.0], [600.0, 1026.0], [700.0, 135.0], [200.0, 2902.0], [800.0, 241.0], [900.0, 136.0], [1000.0, 34.0], [1100.0, 2.0], [300.0, 3884.0], [1200.0, 3.0], [1300.0, 3.0], [1400.0, 1.0], [100.0, 2372.0], [400.0, 17146.0], [500.0, 9162.0]], "isOverall": false, "label": "GET All employees", "isController": false}, {"data": [[0.0, 39927.0], [300.0, 3.0], [400.0, 2.0], [100.0, 39.0], [200.0, 28.0], [1000.0, 1.0]], "isOverall": false, "label": "GET thread name", "isController": false}, {"data": [[0.0, 4222.0], [600.0, 148.0], [700.0, 157.0], [200.0, 3679.0], [800.0, 229.0], [900.0, 74.0], [1000.0, 13.0], [1100.0, 8.0], [300.0, 9668.0], [1200.0, 3.0], [1300.0, 2.0], [1400.0, 1.0], [400.0, 16947.0], [100.0, 2792.0], [500.0, 2057.0]], "isOverall": false, "label": "GET employee by id", "isController": false}, {"data": [[0.0, 3889.0], [600.0, 226.0], [700.0, 164.0], [200.0, 3443.0], [800.0, 229.0], [900.0, 68.0], [1000.0, 10.0], [1100.0, 4.0], [300.0, 8695.0], [1300.0, 4.0], [100.0, 2779.0], [400.0, 18116.0], [500.0, 2373.0]], "isOverall": false, "label": "POST employee", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 1400.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 16228.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 143772.0, "series": [{"data": [[0.0, 143772.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 16228.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 1.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 105.19381546134755, "minX": 1.73470848E12, "maxY": 193.7504584606841, "series": [{"data": [[1.73470866E12, 166.74127287425483], [1.73470848E12, 105.19381546134755], [1.73470854E12, 193.7504584606841], [1.73470872E12, 116.51146576391339], [1.7347086E12, 181.35354264027717]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.73470872E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 3.0, "minX": 1.0, "maxY": 580.0174081237913, "series": [{"data": [[2.0, 69.0], [3.0, 94.55555555555556], [4.0, 56.55555555555555], [5.0, 160.2], [6.0, 103.55555555555556], [7.0, 151.5], [8.0, 106.875], [9.0, 30.02173913043478], [10.0, 34.39622641509433], [11.0, 27.527272727272734], [12.0, 36.6938775510204], [13.0, 34.81666666666668], [14.0, 44.78082191780822], [15.0, 32.04411764705882], [16.0, 38.136986301369866], [17.0, 35.28], [18.0, 37.31343283582089], [19.0, 33.84615384615385], [20.0, 36.10666666666667], [21.0, 61.964285714285715], [22.0, 41.80597014925371], [23.0, 48.98823529411765], [24.0, 38.60759493670883], [25.0, 43.53424657534248], [26.0, 75.68817204301074], [27.0, 51.53658536585367], [28.0, 41.72368421052632], [29.0, 48.55696202531645], [30.0, 80.93406593406593], [31.0, 50.02352941176472], [32.0, 82.42222222222222], [33.0, 71.22368421052632], [34.0, 88.65957446808511], [35.0, 72.18478260869564], [36.0, 66.63953488372093], [37.0, 63.96153846153845], [38.0, 59.8888888888889], [39.0, 69.69662921348316], [40.0, 61.126984126984134], [41.0, 116.09000000000002], [42.0, 124.80434782608695], [43.0, 131.82222222222222], [44.0, 153.81159420289853], [45.0, 150.96551724137925], [46.0, 141.35897435897434], [47.0, 139.9545454545455], [48.0, 131.01923076923075], [49.0, 117.24074074074073], [50.0, 146.6349206349206], [51.0, 152.11666666666667], [52.0, 137.13333333333333], [53.0, 137.5], [54.0, 141.70588235294116], [55.0, 159.28169014084503], [56.0, 138.375], [57.0, 147.64150943396223], [58.0, 181.7894736842105], [59.0, 170.71641791044777], [60.0, 149.60000000000005], [61.0, 135.6122448979592], [62.0, 208.7731092436975], [63.0, 159.73076923076923], [64.0, 149.73076923076923], [65.0, 179.69642857142856], [66.0, 166.8852459016394], [67.0, 162.0222222222222], [68.0, 196.7763157894737], [69.0, 175.18000000000006], [70.0, 202.76190476190473], [71.0, 211.7204301075269], [72.0, 188.078125], [73.0, 172.56250000000003], [74.0, 183.90697674418604], [75.0, 238.17821782178214], [76.0, 192.452380952381], [77.0, 209.90243902439025], [78.0, 178.83333333333331], [79.0, 241.8041237113402], [80.0, 229.01249999999996], [81.0, 205.3571428571428], [82.0, 203.1587301587301], [83.0, 225.03278688524586], [84.0, 219.93846153846155], [85.0, 251.6168224299065], [86.0, 235.73913043478257], [87.0, 246.7125000000001], [88.0, 258.9345794392523], [89.0, 236.8923076923077], [90.0, 253.74358974358975], [91.0, 248.25316455696208], [92.0, 245.21428571428567], [93.0, 245.241935483871], [94.0, 223.31372549019608], [95.0, 262.642105263158], [96.0, 196.5116279069767], [97.0, 290.1685393258427], [98.0, 291.5517241379309], [99.0, 276.23333333333323], [100.0, 315.53488372093034], [101.0, 234.37931034482762], [102.0, 294.2277227722773], [103.0, 284.91666666666674], [104.0, 236.09803921568627], [105.0, 246.5106382978724], [106.0, 228.87234042553186], [107.0, 322.8014705882355], [108.0, 329.8146067415731], [109.0, 333.1083333333332], [110.0, 277.88888888888886], [111.0, 257.4035087719298], [112.0, 304.5373134328359], [113.0, 277.66037735849056], [114.0, 351.7675438596492], [115.0, 346.1159420289853], [116.0, 334.92857142857156], [117.0, 366.54358974358973], [118.0, 253.09523809523816], [119.0, 264.8666666666666], [120.0, 320.0833333333332], [121.0, 360.03649635036487], [122.0, 372.15116279069764], [123.0, 347.9166666666668], [124.0, 351.57142857142844], [125.0, 371.42666666666673], [126.0, 396.78548895899036], [127.0, 369.931818181818], [128.0, 320.7457627118644], [129.0, 368.6285714285715], [130.0, 417.5733333333333], [131.0, 338.87500000000006], [132.0, 332.2280701754386], [133.0, 484.61635220125777], [134.0, 336.6], [135.0, 428.8000000000001], [136.0, 331.98148148148147], [137.0, 363.86585365853665], [138.0, 283.83333333333337], [139.0, 413.04575163398675], [140.0, 437.2111801242233], [141.0, 428.0882352941178], [142.0, 439.8307692307692], [143.0, 386.99999999999994], [144.0, 427.10227272727275], [145.0, 468.4969696969698], [146.0, 441.4324324324324], [147.0, 382.06666666666683], [148.0, 364.80327868852464], [149.0, 495.823170731707], [150.0, 501.8386243386242], [151.0, 507.8588235294118], [152.0, 339.82000000000005], [153.0, 488.6842105263163], [154.0, 336.90697674418624], [155.0, 444.8979591836735], [156.0, 507.3602150537637], [157.0, 523.6206896551723], [158.0, 514.8561643835619], [159.0, 518.0769230769232], [160.0, 580.0174081237913], [161.0, 472.71938775510205], [162.0, 500.83627906976733], [163.0, 423.9655172413794], [164.0, 482.55744680851075], [165.0, 497.81403508771945], [166.0, 484.3600000000002], [167.0, 516.4820659971303], [168.0, 516.2073394495416], [169.0, 488.59302325581416], [170.0, 556.5388601036273], [171.0, 519.9146666666669], [172.0, 500.90000000000003], [173.0, 464.7650273224043], [174.0, 519.7319819819825], [175.0, 514.1896296296293], [176.0, 491.8309859154931], [177.0, 506.4813359528487], [178.0, 492.7219251336893], [179.0, 477.4293478260871], [180.0, 473.7217630853996], [181.0, 471.8857913669064], [182.0, 473.472602739726], [183.0, 493.67275747508296], [184.0, 456.01015228426394], [185.0, 472.35824345146347], [186.0, 479.97417503586826], [187.0, 457.89896907216485], [188.0, 460.9341383095498], [189.0, 459.8667100130035], [190.0, 457.3341836734689], [191.0, 486.6708661417326], [192.0, 454.4056291390729], [193.0, 452.3975903614457], [194.0, 441.76818181818186], [195.0, 445.5602094240835], [196.0, 463.2392241379313], [197.0, 453.43212237093667], [198.0, 414.8478260869566], [199.0, 516.9667590027702], [200.0, 448.925478065242], [1.0, 84.0]], "isOverall": false, "label": "GET All employees", "isController": false}, {"data": [[152.50987499999962, 412.31347500000015]], "isOverall": false, "label": "GET All employees-Aggregated", "isController": false}, {"data": [[2.0, 5.5], [3.0, 5.5], [4.0, 14.555555555555555], [5.0, 9.999999999999998], [6.0, 6.624999999999999], [8.0, 40.0], [9.0, 6.040816326530611], [10.0, 6.921568627450981], [11.0, 4.80357142857143], [12.0, 8.89795918367347], [13.0, 5.706896551724138], [14.0, 4.891891891891891], [15.0, 5.73529411764706], [16.0, 5.855072463768117], [17.0, 5.948717948717949], [18.0, 7.119402985074626], [19.0, 6.03846153846154], [20.0, 6.633802816901406], [21.0, 8.096385542168676], [22.0, 6.52054794520548], [23.0, 6.58974358974359], [24.0, 7.535714285714285], [25.0, 6.693333333333333], [26.0, 7.5494505494505475], [27.0, 6.309523809523811], [28.0, 5.722222222222222], [29.0, 7.000000000000002], [30.0, 6.810526315789472], [31.0, 6.011904761904765], [32.0, 5.820224719101125], [33.0, 5.026666666666665], [34.0, 7.175257731958764], [35.0, 5.744444444444444], [36.0, 7.264367816091952], [37.0, 7.415584415584415], [38.0, 9.23943661971831], [39.0, 6.988505747126439], [40.0, 6.840579710144928], [41.0, 8.422680412371138], [42.0, 5.666666666666666], [43.0, 5.2444444444444445], [44.0, 6.072463768115941], [45.0, 6.982456140350879], [46.0, 6.214285714285711], [47.0, 5.906976744186046], [48.0, 5.653846153846154], [49.0, 6.591836734693877], [50.0, 5.880597014925372], [51.0, 5.9491525423728815], [52.0, 8.916666666666664], [53.0, 5.942307692307694], [54.0, 7.5094339622641515], [55.0, 6.217391304347827], [56.0, 10.157894736842108], [57.0, 4.943396226415095], [58.0, 5.372340425531918], [59.0, 6.470588235294118], [60.0, 7.018867924528302], [61.0, 7.6078431372549025], [62.0, 5.5546218487394965], [63.0, 6.740000000000002], [64.0, 6.11764705882353], [65.0, 7.288135593220338], [66.0, 10.224137931034484], [67.0, 6.244444444444444], [68.0, 5.831168831168832], [69.0, 6.803921568627452], [70.0, 5.858823529411764], [71.0, 4.97826086956522], [72.0, 5.21875], [73.0, 5.244897959183672], [74.0, 7.61904761904762], [75.0, 5.9708737864077674], [76.0, 6.578947368421052], [77.0, 7.717647058823532], [78.0, 5.31111111111111], [79.0, 5.840000000000002], [80.0, 5.975], [81.0, 5.32075471698113], [82.0, 7.144927536231883], [83.0, 6.672727272727273], [84.0, 8.419354838709674], [85.0, 6.500000000000001], [86.0, 7.225352112676058], [87.0, 6.714285714285716], [88.0, 6.445454545454544], [89.0, 5.671874999999999], [90.0, 5.7875], [91.0, 5.7402597402597415], [92.0, 6.407407407407407], [93.0, 7.716417910447764], [94.0, 6.222222222222221], [95.0, 6.3877551020408205], [96.0, 5.377777777777778], [97.0, 5.551724137931035], [98.0, 5.7200000000000015], [99.0, 6.137931034482757], [100.0, 5.864705882352942], [101.0, 6.699999999999999], [102.0, 6.3434343434343425], [103.0, 4.960526315789475], [104.0, 5.52], [105.0, 6.319148936170212], [106.0, 7.195652173913044], [107.0, 5.3235294117647065], [108.0, 5.485714285714286], [109.0, 10.136000000000005], [110.0, 7.000000000000002], [111.0, 5.818181818181817], [112.0, 6.222222222222224], [113.0, 7.999999999999999], [114.0, 5.635555555555558], [115.0, 5.645390070921985], [116.0, 5.556962025316459], [117.0, 6.434343434343433], [118.0, 6.046511627906977], [119.0, 5.613636363636362], [120.0, 6.473684210526311], [121.0, 8.244604316546766], [122.0, 6.116279069767443], [123.0, 5.805084745762711], [124.0, 4.952380952380953], [125.0, 6.576158940397351], [126.0, 5.755555555555554], [127.0, 5.5056179775280905], [128.0, 7.155172413793105], [129.0, 6.056074766355141], [130.0, 7.4238410596026485], [131.0, 5.574468085106382], [132.0, 6.796296296296297], [133.0, 6.2098765432098775], [134.0, 6.25], [135.0, 6.575757575757574], [136.0, 7.1568627450980395], [137.0, 6.325301204819275], [138.0, 6.279069767441861], [139.0, 6.073825503355703], [140.0, 6.566978193146417], [141.0, 10.566666666666672], [142.0, 5.956790123456788], [143.0, 7.490566037735848], [144.0, 6.805555555555555], [145.0, 6.518518518518516], [146.0, 5.9333333333333345], [147.0, 5.7457627118644075], [148.0, 5.406779661016951], [149.0, 7.358433734939758], [150.0, 6.250000000000003], [151.0, 6.444015444015439], [152.0, 4.921568627450979], [153.0, 5.233333333333334], [154.0, 8.13636363636364], [155.0, 6.887755102040818], [156.0, 5.847826086956521], [157.0, 5.760000000000002], [158.0, 5.746575342465756], [159.0, 6.280701754385965], [160.0, 5.940384615384615], [161.0, 5.225641025641028], [162.0, 6.070631970260227], [163.0, 6.416666666666668], [164.0, 8.737068965517242], [165.0, 6.136363636363639], [166.0, 7.934343434343432], [167.0, 6.575107296137335], [168.0, 5.915285451197053], [169.0, 6.2298850574712645], [170.0, 7.533795493934151], [171.0, 6.846153846153848], [172.0, 7.732426303854876], [173.0, 6.895604395604397], [174.0, 5.48984198645598], [175.0, 7.1162444113263765], [176.0, 6.309278350515467], [177.0, 9.671936758893281], [178.0, 5.631016042780746], [179.0, 6.180327868852457], [180.0, 5.894308943089433], [181.0, 6.889189189189189], [182.0, 9.122448979591834], [183.0, 6.182271468144038], [184.0, 8.769230769230768], [185.0, 6.00691775557263], [186.0, 8.252510760401732], [187.0, 27.10677618069815], [188.0, 6.767955801104963], [189.0, 6.59661678594664], [190.0, 6.152284263959388], [191.0, 7.136577708006274], [192.0, 6.46932006633499], [193.0, 5.53658536585366], [194.0, 6.23287671232877], [195.0, 6.623036649214659], [196.0, 5.913606911447089], [197.0, 5.982889733840302], [198.0, 7.318181818181818], [199.0, 6.638121546961328], [200.0, 6.918728908886381], [1.0, 50.0]], "isOverall": false, "label": "GET thread name", "isController": false}, {"data": [[152.51312500000034, 6.845174999999989]], "isOverall": false, "label": "GET thread name-Aggregated", "isController": false}, {"data": [[2.0, 64.0], [3.0, 7.0], [4.0, 5.111111111111111], [5.0, 35.42857142857143], [6.0, 10.0], [8.0, 71.2], [9.0, 8.333333333333332], [10.0, 8.30232558139535], [11.0, 6.200000000000002], [12.0, 7.645833333333332], [13.0, 9.04545454545455], [14.0, 9.464788732394368], [15.0, 8.722222222222223], [16.0, 9.271428571428574], [17.0, 10.75324675324675], [18.0, 12.736111111111107], [19.0, 10.864864864864863], [20.0, 11.535211267605636], [21.0, 24.109756097560968], [22.0, 14.051282051282046], [23.0, 19.72151898734177], [24.0, 14.790123456790122], [25.0, 15.83098591549296], [26.0, 30.52873563218391], [27.0, 18.435294117647057], [28.0, 18.4], [29.0, 19.609756097560975], [30.0, 33.68235294117647], [31.0, 29.75], [32.0, 32.592233009708735], [33.0, 25.602941176470594], [34.0, 46.23300970873787], [35.0, 32.08139534883721], [36.0, 35.460674157303366], [37.0, 38.77631578947368], [38.0, 35.078947368421055], [39.0, 33.0958904109589], [40.0, 29.969696969696972], [41.0, 66.25233644859811], [42.0, 60.478260869565226], [43.0, 76.63829787234043], [44.0, 85.86764705882351], [45.0, 87.94642857142858], [46.0, 83.25000000000003], [47.0, 84.51428571428573], [48.0, 83.89795918367348], [49.0, 76.68627450980391], [50.0, 87.53333333333332], [51.0, 94.67857142857142], [52.0, 81.62499999999996], [53.0, 98.20338983050848], [54.0, 94.70370370370372], [55.0, 107.82258064516128], [56.0, 95.37037037037035], [57.0, 97.51562500000001], [58.0, 127.04301075268818], [59.0, 115.61194029850745], [60.0, 106.56363636363635], [61.0, 91.90476190476191], [62.0, 142.16935483870978], [63.0, 111.61702127659575], [64.0, 101.12244897959185], [65.0, 121.69999999999997], [66.0, 109.1764705882353], [67.0, 110.69444444444444], [68.0, 131.68604651162798], [69.0, 115.96610169491524], [70.0, 152.19047619047615], [71.0, 158.13333333333333], [72.0, 132.60493827160494], [73.0, 116.90384615384617], [74.0, 147.5555555555556], [75.0, 158.15384615384622], [76.0, 131.075], [77.0, 152.8076923076923], [78.0, 125.18032786885244], [79.0, 181.4301075268818], [80.0, 165.82926829268294], [81.0, 144.48076923076925], [82.0, 160.40983606557373], [83.0, 162.63768115942028], [84.0, 170.07272727272726], [85.0, 192.11206896551724], [86.0, 178.88333333333327], [87.0, 177.68421052631578], [88.0, 203.51063829787228], [89.0, 183.54430379746833], [90.0, 181.5645161290323], [91.0, 191.0], [92.0, 181.44594594594594], [93.0, 184.27450980392155], [94.0, 148.43478260869566], [95.0, 207.43636363636364], [96.0, 159.36170212765956], [97.0, 230.93846153846152], [98.0, 212.30158730158726], [99.0, 212.7903225806452], [100.0, 235.42592592592607], [101.0, 179.2765957446809], [102.0, 230.15833333333327], [103.0, 232.49122807017545], [104.0, 176.08888888888885], [105.0, 189.83673469387762], [106.0, 179.15094339622635], [107.0, 247.3181818181817], [108.0, 243.0597826086955], [109.0, 246.67500000000004], [110.0, 230.03636363636357], [111.0, 212.15999999999994], [112.0, 225.44927536231882], [113.0, 228.12280701754386], [114.0, 272.1971830985916], [115.0, 263.2447552447553], [116.0, 257.83505154639175], [117.0, 282.53107344632764], [118.0, 188.68888888888893], [119.0, 225.36111111111106], [120.0, 253.9636363636363], [121.0, 277.37777777777774], [122.0, 313.18390804597686], [123.0, 305.19658119658123], [124.0, 292.68674698795184], [125.0, 309.06250000000017], [126.0, 346.69387755102], [127.0, 300.2307692307693], [128.0, 277.54999999999995], [129.0, 318.31428571428563], [130.0, 352.3191489361702], [131.0, 308.4716981132076], [132.0, 304.37313432835816], [133.0, 412.04054054054075], [134.0, 289.1454545454546], [135.0, 361.00515463917526], [136.0, 268.622641509434], [137.0, 301.6666666666667], [138.0, 208.35714285714286], [139.0, 344.85616438356146], [140.0, 371.191489361702], [141.0, 358.9810426540284], [142.0, 380.1555555555555], [143.0, 316.77551020408174], [144.0, 361.89010989011], [145.0, 393.4904458598727], [146.0, 389.2134831460674], [147.0, 312.5454545454546], [148.0, 303.4374999999999], [149.0, 419.7987804878047], [150.0, 429.7347480106099], [151.0, 441.877049180328], [152.0, 289.18518518518516], [153.0, 410.39166666666677], [154.0, 304.22448979591843], [155.0, 377.74766355140173], [156.0, 434.5517241379311], [157.0, 442.70157068062844], [158.0, 442.5196850393702], [159.0, 460.00869565217386], [160.0, 488.1136363636368], [161.0, 393.052380952381], [162.0, 432.51526717557266], [163.0, 363.10344827586204], [164.0, 402.35222672064776], [165.0, 415.71672354948817], [166.0, 421.8961748633882], [167.0, 436.06540697674416], [168.0, 438.51779359430594], [169.0, 410.01714285714286], [170.0, 496.4580419580419], [171.0, 452.01092896174873], [172.0, 430.11437908496674], [173.0, 425.0893854748603], [174.0, 460.1514423076923], [175.0, 451.9791666666668], [176.0, 420.80844155844125], [177.0, 441.0019646365426], [178.0, 429.14143245693595], [179.0, 419.8025034770516], [180.0, 410.2616580310881], [181.0, 415.62969588550965], [182.0, 408.73469387755097], [183.0, 430.56225572305954], [184.0, 397.83937823834185], [185.0, 411.8212669683252], [186.0, 426.44087591240884], [187.0, 404.4989473684212], [188.0, 414.711771177118], [189.0, 403.4577691811733], [190.0, 401.10872313527193], [191.0, 425.966876971609], [192.0, 395.5844594594598], [193.0, 379.24999999999994], [194.0, 384.0127118644069], [195.0, 391.51176470588257], [196.0, 412.4408602150539], [197.0, 402.33268482490274], [198.0, 365.64062499999994], [199.0, 456.5988372093027], [200.0, 391.23407241088995], [1.0, 3.0]], "isOverall": false, "label": "GET employee by id", "isController": false}, {"data": [[152.51582499999947, 351.50132499999944]], "isOverall": false, "label": "GET employee by id-Aggregated", "isController": false}, {"data": [[2.0, 37.5], [3.0, 99.33333333333334], [4.0, 14.916666666666668], [5.0, 91.39999999999999], [6.0, 60.50000000000001], [8.0, 13.733333333333333], [9.0, 9.551020408163266], [10.0, 9.604651162790697], [11.0, 9.17857142857143], [12.0, 11.363636363636365], [13.0, 13.559322033898308], [14.0, 12.831168831168833], [15.0, 11.461538461538456], [16.0, 12.112676056338026], [17.0, 12.35616438356164], [18.0, 16.930555555555557], [19.0, 15.315789473684212], [20.0, 17.575342465753423], [21.0, 26.752941176470586], [22.0, 16.810810810810807], [23.0, 21.213333333333335], [24.0, 17.700000000000003], [25.0, 21.02702702702703], [26.0, 36.54255319148935], [27.0, 19.8625], [28.0, 23.277777777777786], [29.0, 23.437499999999996], [30.0, 49.82828282828283], [31.0, 27.199999999999996], [32.0, 44.405940594059416], [33.0, 50.487804878048784], [34.0, 50.13793103448276], [35.0, 41.160919540229884], [36.0, 36.3855421686747], [37.0, 41.258426966292134], [38.0, 40.94366197183099], [39.0, 43.78481012658227], [40.0, 43.06944444444443], [41.0, 73.35632183908045], [42.0, 77.61818181818184], [43.0, 83.84000000000003], [44.0, 93.7857142857143], [45.0, 88.53571428571428], [46.0, 91.91489361702126], [47.0, 94.25000000000001], [48.0, 85.70588235294119], [49.0, 77.39583333333331], [50.0, 95.09722222222221], [51.0, 100.03333333333332], [52.0, 84.22641509433961], [53.0, 100.57894736842108], [54.0, 104.92592592592594], [55.0, 110.99999999999999], [56.0, 91.51020408163265], [57.0, 102.26666666666668], [58.0, 127.01000000000002], [59.0, 116.75757575757575], [60.0, 108.46938775510206], [61.0, 103.97999999999998], [62.0, 140.47619047619045], [63.0, 114.64705882352939], [64.0, 113.79629629629632], [65.0, 127.08450704225353], [66.0, 111.8301886792453], [67.0, 117.7906976744186], [68.0, 145.28048780487808], [69.0, 123.23214285714288], [70.0, 144.3414634146342], [71.0, 165.27499999999995], [72.0, 136.50000000000003], [73.0, 122.50000000000001], [74.0, 152.73529411764702], [75.0, 173.00970873786406], [76.0, 135.33333333333326], [77.0, 177.9277108433735], [78.0, 126.48148148148148], [79.0, 181.03225806451601], [80.0, 175.39240506329108], [81.0, 150.962962962963], [82.0, 159.15384615384616], [83.0, 166.2686567164179], [84.0, 176.74137931034483], [85.0, 194.2818181818182], [86.0, 186.99999999999994], [87.0, 183.29268292682931], [88.0, 203.53333333333327], [89.0, 188.5753424657534], [90.0, 198.52702702702706], [91.0, 195.11111111111111], [92.0, 188.74285714285716], [93.0, 217.32258064516128], [94.0, 169.14583333333337], [95.0, 213.2446808510638], [96.0, 161.55555555555554], [97.0, 239.38202247191012], [98.0, 232.21118012422363], [99.0, 225.3243243243243], [100.0, 258.9090909090908], [101.0, 200.22033898305088], [102.0, 234.60000000000002], [103.0, 227.8208955223881], [104.0, 187.89583333333331], [105.0, 195.89583333333334], [106.0, 182.74468085106386], [107.0, 267.87323943661994], [108.0, 271.92452830188665], [109.0, 271.97580645161304], [110.0, 219.6825396825397], [111.0, 211.8135593220339], [112.0, 247.82222222222222], [113.0, 218.18867924528303], [114.0, 299.96446700507624], [115.0, 278.7567567567568], [116.0, 286.3300000000001], [117.0, 305.9735449735449], [118.0, 209.05000000000007], [119.0, 220.6216216216216], [120.0, 270.1775700934578], [121.0, 290.49624060150376], [122.0, 319.1190476190475], [123.0, 292.5234375000001], [124.0, 286.267441860465], [125.0, 309.45890410958896], [126.0, 331.28852459016395], [127.0, 284.25], [128.0, 284.1551724137932], [129.0, 314.15625], [130.0, 350.21126760563357], [131.0, 308.655172413793], [132.0, 299.8305084745764], [133.0, 420.91447368421046], [134.0, 294.4406779661018], [135.0, 362.9333333333331], [136.0, 289.44680851063833], [137.0, 312.1518987341773], [138.0, 228.00000000000006], [139.0, 361.90000000000015], [140.0, 376.5779816513758], [141.0, 365.9150943396227], [142.0, 382.48895899053645], [143.0, 324.91379310344837], [144.0, 379.65168539325833], [145.0, 394.2371794871794], [146.0, 381.9866666666668], [147.0, 300.22413793103436], [148.0, 316.5846153846153], [149.0, 425.0623052959502], [150.0, 425.6649350649349], [151.0, 436.3145161290321], [152.0, 309.7666666666667], [153.0, 416.78116343490325], [154.0, 285.7692307692307], [155.0, 414.33027522935794], [156.0, 413.3128491620112], [157.0, 460.83428571428567], [158.0, 456.5109489051095], [159.0, 480.2905982905982], [160.0, 493.7862453531602], [161.0, 416.55026455026444], [162.0, 439.69085768143293], [163.0, 352.25000000000006], [164.0, 414.29237288135596], [165.0, 443.82653061224494], [166.0, 435.3942857142858], [167.0, 454.9008379888267], [168.0, 450.3907407407406], [169.0, 421.1918604651164], [170.0, 498.6588868940755], [171.0, 450.4104477611938], [172.0, 444.88300220750517], [173.0, 443.30624999999975], [174.0, 463.41705069124407], [175.0, 454.8064992614474], [176.0, 433.40202702702703], [177.0, 456.801181102362], [178.0, 431.5809698078685], [179.0, 426.6245006657788], [180.0, 419.872628726287], [181.0, 419.23360287511275], [182.0, 438.6148648648647], [183.0, 438.103409726104], [184.0, 396.4476190476192], [185.0, 419.51485148514865], [186.0, 436.3647234678624], [187.0, 413.6056338028171], [188.0, 418.495081967213], [189.0, 410.74611398963714], [190.0, 411.8200514138821], [191.0, 431.3636363636359], [192.0, 401.5114379084968], [193.0, 409.77659574468095], [194.0, 381.8938053097345], [195.0, 412.25925925925924], [196.0, 418.26427061310767], [197.0, 402.4080459770111], [198.0, 364.63414634146335], [199.0, 457.3732590529249], [200.0, 407.5438990182331], [1.0, 5.0]], "isOverall": false, "label": "POST employee", "isController": false}, {"data": [[152.51472499999866, 359.7150749999987]], "isOverall": false, "label": "POST employee-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 200.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 90174.58333333333, "minX": 1.73470848E12, "maxY": 825395.7833333333, "series": [{"data": [[1.73470866E12, 566148.7166666667], [1.73470848E12, 825395.7833333333], [1.73470854E12, 747538.9333333333], [1.73470872E12, 519858.05], [1.7347086E12, 662134.9666666667]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.73470866E12, 98909.13333333333], [1.73470848E12, 145958.45], [1.73470854E12, 130843.3], [1.73470872E12, 90174.58333333333], [1.7347086E12, 115962.76666666666]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.73470872E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 6.030693877551022, "minX": 1.73470848E12, "maxY": 532.8337243401782, "series": [{"data": [[1.73470866E12, 532.8337243401782], [1.73470848E12, 225.2680173369617], [1.73470854E12, 462.14255578994096], [1.73470872E12, 405.61500477859175], [1.7347086E12, 490.9405568096305]], "isOverall": false, "label": "GET All employees", "isController": false}, {"data": [[1.73470866E12, 6.45374319752906], [1.73470848E12, 6.999703557312243], [1.73470854E12, 7.737433274021348], [1.73470872E12, 6.030693877551022], [1.7347086E12, 6.601958814665983]], "isOverall": false, "label": "GET thread name", "isController": false}, {"data": [[1.73470866E12, 458.33886603995313], [1.73470848E12, 182.97478234764296], [1.73470854E12, 405.43658374056076], [1.73470872E12, 326.8507870221659], [1.7347086E12, 429.87714895218886]], "isOverall": false, "label": "GET employee by id", "isController": false}, {"data": [[1.73470866E12, 468.77648445557634], [1.73470848E12, 190.5901053049869], [1.73470854E12, 415.4991654612212], [1.73470872E12, 335.8625485122906], [1.7347086E12, 435.9919759277834]], "isOverall": false, "label": "POST employee", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.73470872E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 6.027755102040831, "minX": 1.73470848E12, "maxY": 532.5420821114371, "series": [{"data": [[1.73470866E12, 532.5420821114371], [1.73470848E12, 224.99788327789577], [1.73470854E12, 461.85700011102637], [1.73470872E12, 405.36365084421647], [1.7347086E12, 490.6588913970409]], "isOverall": false, "label": "GET All employees", "isController": false}, {"data": [[1.73470866E12, 6.451242829827912], [1.73470848E12, 6.995158102766812], [1.73470854E12, 7.73454181494662], [1.73470872E12, 6.027755102040831], [1.7347086E12, 6.598694123555999]], "isOverall": false, "label": "GET thread name", "isController": false}, {"data": [[1.73470866E12, 458.2075499412442], [1.73470848E12, 182.8546982888022], [1.73470854E12, 405.30197689915707], [1.73470872E12, 326.7407645358179], [1.7347086E12, 429.76094867612005]], "isOverall": false, "label": "GET employee by id", "isController": false}, {"data": [[1.73470866E12, 468.63209076174957], [1.73470848E12, 190.47119014504256], [1.73470854E12, 415.35517970401594], [1.73470872E12, 335.72768434670087], [1.7347086E12, 435.8648445336005]], "isOverall": false, "label": "POST employee", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.73470872E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.73470848E12, "maxY": 0.40750988142292544, "series": [{"data": [[1.73470866E12, 0.0], [1.73470848E12, 0.0], [1.73470854E12, 0.0], [1.73470872E12, 0.0], [1.7347086E12, 0.0]], "isOverall": false, "label": "GET All employees", "isController": false}, {"data": [[1.73470866E12, 0.2313575525812627], [1.73470848E12, 0.40750988142292544], [1.73470854E12, 0.2984875444839851], [1.73470872E12, 0.1675102040816328], [1.7347086E12, 0.3562280261175283]], "isOverall": false, "label": "GET thread name", "isController": false}, {"data": [[1.73470866E12, 0.0], [1.73470848E12, 0.0], [1.73470854E12, 0.0], [1.73470872E12, 0.0], [1.7347086E12, 0.0]], "isOverall": false, "label": "GET employee by id", "isController": false}, {"data": [[1.73470866E12, 0.0], [1.73470848E12, 0.0], [1.73470854E12, 0.0], [1.73470872E12, 0.0], [1.7347086E12, 0.0]], "isOverall": false, "label": "POST employee", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.73470872E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.73470848E12, "maxY": 1424.0, "series": [{"data": [[1.73470866E12, 1424.0], [1.73470848E12, 904.0], [1.73470854E12, 1231.0], [1.73470872E12, 1136.0], [1.7347086E12, 1377.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.73470866E12, 1.0], [1.73470848E12, 1.0], [1.73470854E12, 1.0], [1.73470872E12, 1.0], [1.7347086E12, 1.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.73470866E12, 572.0], [1.73470848E12, 417.0], [1.73470854E12, 482.0], [1.73470872E12, 448.0], [1.7347086E12, 513.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.73470866E12, 835.9800000000032], [1.73470848E12, 530.9700000000048], [1.73470854E12, 788.0], [1.73470872E12, 568.0], [1.7347086E12, 806.9900000000016]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.73470866E12, 454.0], [1.73470848E12, 269.0], [1.73470854E12, 409.0], [1.73470872E12, 282.0], [1.7347086E12, 430.0]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.73470866E12, 612.0], [1.73470848E12, 445.0], [1.73470854E12, 503.0], [1.73470872E12, 483.0], [1.7347086E12, 538.0]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.73470872E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 9.0, "minX": 4.0, "maxY": 570.0, "series": [{"data": [[4.0, 30.0], [84.0, 14.0], [185.0, 43.0], [286.0, 91.0], [302.0, 9.0], [312.0, 100.0], [343.0, 524.0], [337.0, 485.0], [355.0, 570.0], [366.0, 512.0], [380.0, 525.0], [392.0, 467.0], [395.0, 478.5], [391.0, 483.0], [389.0, 447.0], [386.0, 426.0], [394.0, 443.5], [414.0, 518.5], [411.0, 448.0], [403.0, 471.0], [408.0, 438.0], [415.0, 145.0], [419.0, 487.0], [420.0, 477.0], [421.0, 464.0], [416.0, 446.5], [422.0, 327.0], [430.0, 407.0], [429.0, 268.0], [424.0, 175.5], [433.0, 324.0], [440.0, 323.5], [438.0, 481.5], [441.0, 435.0], [443.0, 513.0], [437.0, 411.5], [447.0, 398.5], [439.0, 264.0], [432.0, 197.0], [446.0, 396.0], [444.0, 341.5], [435.0, 155.0], [434.0, 104.5], [445.0, 214.0], [461.0, 361.0], [457.0, 440.0], [459.0, 471.5], [456.0, 373.0], [455.0, 455.0], [453.0, 297.0], [449.0, 418.0], [458.0, 319.0], [451.0, 398.0], [450.0, 316.0], [448.0, 352.5], [466.0, 453.0], [475.0, 442.0], [470.0, 454.5], [477.0, 402.0], [467.0, 454.0], [473.0, 435.0], [469.0, 439.0], [468.0, 260.0], [464.0, 394.0], [465.0, 401.0], [478.0, 448.5], [479.0, 423.0], [483.0, 455.0], [482.0, 434.0], [485.0, 479.0], [490.0, 430.0], [489.0, 468.0], [487.0, 444.0], [504.0, 477.0], [511.0, 431.0], [507.0, 426.0], [508.0, 436.0], [501.0, 470.0], [502.0, 452.0], [496.0, 455.0], [497.0, 379.0], [538.0, 441.0], [523.0, 424.0], [535.0, 426.0], [532.0, 410.0], [531.0, 441.0], [514.0, 434.0], [513.0, 435.0], [526.0, 436.0], [516.0, 430.0], [515.0, 436.0], [536.0, 417.0], [518.0, 433.5], [528.0, 432.0], [529.0, 428.0], [520.0, 439.0], [543.0, 420.0], [540.0, 440.0], [542.0, 424.0], [571.0, 409.0], [575.0, 420.0], [564.0, 401.0], [572.0, 420.0], [573.0, 420.0], [569.0, 399.0], [555.0, 430.0], [554.0, 418.5], [559.0, 411.0], [544.0, 414.0], [545.0, 422.0], [548.0, 408.0], [546.0, 428.0], [549.0, 419.5], [551.0, 425.0], [570.0, 428.0], [566.0, 409.5], [567.0, 419.0], [565.0, 410.0], [562.0, 418.0], [563.0, 416.0], [603.0, 409.0], [602.0, 414.0], [604.0, 414.0], [605.0, 402.0], [587.0, 413.0], [588.0, 416.5], [586.0, 414.0], [584.0, 414.0], [591.0, 408.0], [595.0, 404.0], [599.0, 404.0], [581.0, 401.0], [579.0, 410.0], [577.0, 417.0], [580.0, 405.5], [594.0, 401.0], [607.0, 410.0], [606.0, 392.5], [632.0, 406.0], [614.0, 139.0], [633.0, 389.0], [634.0, 403.0], [637.0, 370.0], [625.0, 405.0], [627.0, 404.0], [619.0, 402.0], [620.0, 404.0], [622.0, 397.0], [618.0, 410.0], [623.0, 404.0], [635.0, 404.0], [610.0, 408.0], [611.0, 395.0], [612.0, 388.0], [665.0, 370.0], [670.0, 255.0], [666.0, 291.0], [658.0, 317.0], [657.0, 381.0], [656.0, 383.5], [647.0, 329.0], [662.0, 369.5], [651.0, 375.0], [655.0, 383.0], [653.0, 379.0], [640.0, 381.0], [645.0, 387.0], [644.0, 385.5], [642.0, 393.0], [696.0, 189.5], [675.0, 97.5], [695.0, 127.0], [682.0, 163.0], [684.0, 261.5], [685.0, 296.0], [694.0, 198.0], [681.0, 216.5], [680.0, 344.0], [678.0, 215.0], [676.0, 303.5], [689.0, 249.0], [699.0, 246.0], [700.0, 332.0], [693.0, 231.0], [690.0, 267.0], [715.0, 102.0], [718.0, 95.0], [719.0, 102.0], [717.0, 103.0], [708.0, 131.0], [726.0, 137.0], [716.0, 160.0], [713.0, 178.0], [853.0, 9.0], [1038.0, 37.0], [1112.0, 10.0], [1120.0, 13.0], [1210.0, 16.0], [1199.0, 25.0], [1223.0, 20.0], [1216.0, 29.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1223.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 8.0, "minX": 4.0, "maxY": 569.0, "series": [{"data": [[4.0, 27.5], [84.0, 14.0], [185.0, 43.0], [286.0, 91.0], [302.0, 9.0], [312.0, 99.5], [343.0, 524.0], [337.0, 485.0], [355.0, 569.0], [366.0, 512.0], [380.0, 525.0], [392.0, 467.0], [395.0, 478.0], [391.0, 482.0], [389.0, 447.0], [386.0, 426.0], [394.0, 443.0], [414.0, 518.5], [411.0, 448.0], [403.0, 470.0], [408.0, 437.5], [415.0, 145.0], [419.0, 487.0], [420.0, 477.0], [421.0, 464.0], [416.0, 446.5], [422.0, 327.0], [430.0, 407.0], [429.0, 268.0], [424.0, 175.0], [433.0, 324.0], [440.0, 323.5], [438.0, 479.5], [441.0, 435.0], [443.0, 513.0], [437.0, 411.5], [447.0, 398.0], [439.0, 264.0], [432.0, 197.0], [446.0, 395.0], [444.0, 341.5], [435.0, 155.0], [434.0, 104.5], [445.0, 213.5], [461.0, 361.0], [457.0, 440.0], [459.0, 471.5], [456.0, 373.0], [455.0, 454.0], [453.0, 297.0], [449.0, 418.0], [458.0, 319.0], [451.0, 398.0], [450.0, 316.0], [448.0, 352.5], [466.0, 452.5], [475.0, 442.0], [470.0, 454.0], [477.0, 402.0], [467.0, 454.0], [473.0, 434.0], [469.0, 439.0], [468.0, 259.0], [464.0, 394.0], [465.0, 401.0], [478.0, 448.0], [479.0, 423.0], [483.0, 455.0], [482.0, 434.0], [485.0, 479.0], [490.0, 430.0], [489.0, 468.0], [487.0, 444.0], [504.0, 477.0], [511.0, 431.0], [507.0, 426.0], [508.0, 436.0], [501.0, 469.0], [502.0, 451.0], [496.0, 455.0], [497.0, 379.0], [538.0, 441.0], [523.0, 424.0], [535.0, 426.0], [532.0, 410.0], [531.0, 441.0], [514.0, 433.5], [513.0, 435.0], [526.0, 436.0], [516.0, 430.0], [515.0, 435.0], [536.0, 417.0], [518.0, 433.5], [528.0, 432.0], [529.0, 428.0], [520.0, 439.0], [543.0, 420.0], [540.0, 440.0], [542.0, 424.0], [571.0, 409.0], [575.0, 420.0], [564.0, 401.0], [572.0, 420.0], [573.0, 420.0], [569.0, 399.0], [555.0, 430.0], [554.0, 418.5], [559.0, 411.0], [544.0, 414.0], [545.0, 422.0], [548.0, 408.0], [546.0, 427.5], [549.0, 419.0], [551.0, 425.0], [570.0, 427.5], [566.0, 409.0], [567.0, 418.0], [565.0, 410.0], [562.0, 418.0], [563.0, 416.0], [603.0, 409.0], [602.0, 414.0], [604.0, 414.0], [605.0, 402.0], [587.0, 413.0], [588.0, 416.5], [586.0, 414.0], [584.0, 413.0], [591.0, 408.0], [595.0, 404.0], [599.0, 404.0], [581.0, 401.0], [579.0, 410.0], [577.0, 417.0], [580.0, 405.0], [594.0, 400.5], [607.0, 410.0], [606.0, 392.5], [632.0, 406.0], [614.0, 139.0], [633.0, 388.0], [634.0, 403.0], [637.0, 370.0], [625.0, 404.0], [627.0, 404.0], [619.0, 402.0], [620.0, 404.0], [622.0, 397.0], [618.0, 410.0], [623.0, 404.0], [635.0, 403.0], [610.0, 408.0], [611.0, 395.0], [612.0, 388.0], [665.0, 369.0], [670.0, 255.0], [666.0, 290.0], [658.0, 317.0], [657.0, 381.0], [656.0, 383.0], [647.0, 329.0], [662.0, 369.0], [651.0, 375.0], [655.0, 383.0], [653.0, 379.0], [640.0, 381.0], [645.0, 387.0], [644.0, 385.0], [642.0, 393.0], [696.0, 189.0], [675.0, 97.0], [695.0, 126.0], [682.0, 163.0], [684.0, 261.5], [685.0, 295.0], [694.0, 198.0], [681.0, 216.0], [680.0, 344.0], [678.0, 215.0], [676.0, 303.0], [689.0, 249.0], [699.0, 246.0], [700.0, 332.0], [693.0, 231.0], [690.0, 267.0], [715.0, 101.5], [718.0, 95.0], [719.0, 102.0], [717.0, 103.0], [708.0, 131.0], [726.0, 137.0], [716.0, 160.0], [713.0, 178.0], [853.0, 8.0], [1038.0, 37.0], [1112.0, 10.0], [1120.0, 13.0], [1210.0, 16.0], [1199.0, 25.0], [1223.0, 19.0], [1216.0, 29.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1223.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 411.0, "minX": 1.73470848E12, "maxY": 671.6666666666666, "series": [{"data": [[1.73470866E12, 453.2], [1.73470848E12, 671.6666666666666], [1.73470854E12, 599.5833333333334], [1.73470872E12, 411.0], [1.7347086E12, 531.2166666666667]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.73470872E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 413.55, "minX": 1.73470848E12, "maxY": 668.3333333333334, "series": [{"data": [[1.73470866E12, 453.56666666666666], [1.73470848E12, 668.3333333333334], [1.73470854E12, 599.8333333333334], [1.73470872E12, 413.55], [1.7347086E12, 531.3833333333333]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.73470872E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 102.08333333333333, "minX": 1.73470848E12, "maxY": 168.66666666666666, "series": [{"data": [[1.73470866E12, 113.31666666666666], [1.73470848E12, 168.66666666666666], [1.73470854E12, 149.86666666666667], [1.73470872E12, 102.08333333333333], [1.7347086E12, 132.73333333333332]], "isOverall": false, "label": "GET thread name-success", "isController": false}, {"data": [[1.73470866E12, 113.66666666666667], [1.73470848E12, 165.35], [1.73470854E12, 150.11666666666667], [1.73470872E12, 104.63333333333334], [1.7347086E12, 132.9]], "isOverall": false, "label": "GET All employees-success", "isController": false}, {"data": [[1.73470866E12, 113.11666666666666], [1.73470848E12, 167.76666666666668], [1.73470854E12, 149.78333333333333], [1.73470872E12, 103.06666666666666], [1.7347086E12, 132.93333333333334]], "isOverall": false, "label": "POST employee-success", "isController": false}, {"data": [[1.73470866E12, 113.46666666666667], [1.73470848E12, 166.55], [1.73470854E12, 150.06666666666666], [1.73470872E12, 103.76666666666667], [1.7347086E12, 132.81666666666666]], "isOverall": false, "label": "GET employee by id-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.73470872E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 413.55, "minX": 1.73470848E12, "maxY": 668.3333333333334, "series": [{"data": [[1.73470866E12, 453.56666666666666], [1.73470848E12, 668.3333333333334], [1.73470854E12, 599.8333333333334], [1.73470872E12, 413.55], [1.7347086E12, 531.3833333333333]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.73470872E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

