/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 1063.0, "series": [{"data": [[0.0, 5.0], [0.1, 7.0], [0.2, 8.0], [0.3, 8.0], [0.4, 8.0], [0.5, 9.0], [0.6, 9.0], [0.7, 9.0], [0.8, 9.0], [0.9, 9.0], [1.0, 10.0], [1.1, 10.0], [1.2, 10.0], [1.3, 10.0], [1.4, 10.0], [1.5, 10.0], [1.6, 10.0], [1.7, 11.0], [1.8, 11.0], [1.9, 11.0], [2.0, 11.0], [2.1, 11.0], [2.2, 12.0], [2.3, 12.0], [2.4, 12.0], [2.5, 12.0], [2.6, 12.0], [2.7, 12.0], [2.8, 12.0], [2.9, 13.0], [3.0, 13.0], [3.1, 13.0], [3.2, 13.0], [3.3, 13.0], [3.4, 13.0], [3.5, 13.0], [3.6, 14.0], [3.7, 14.0], [3.8, 14.0], [3.9, 14.0], [4.0, 14.0], [4.1, 14.0], [4.2, 15.0], [4.3, 15.0], [4.4, 15.0], [4.5, 15.0], [4.6, 15.0], [4.7, 15.0], [4.8, 15.0], [4.9, 16.0], [5.0, 16.0], [5.1, 16.0], [5.2, 16.0], [5.3, 16.0], [5.4, 17.0], [5.5, 17.0], [5.6, 17.0], [5.7, 17.0], [5.8, 17.0], [5.9, 18.0], [6.0, 18.0], [6.1, 18.0], [6.2, 18.0], [6.3, 18.0], [6.4, 19.0], [6.5, 19.0], [6.6, 19.0], [6.7, 20.0], [6.8, 20.0], [6.9, 20.0], [7.0, 20.0], [7.1, 21.0], [7.2, 21.0], [7.3, 21.0], [7.4, 22.0], [7.5, 22.0], [7.6, 22.0], [7.7, 22.0], [7.8, 23.0], [7.9, 23.0], [8.0, 23.0], [8.1, 23.0], [8.2, 24.0], [8.3, 24.0], [8.4, 24.0], [8.5, 24.0], [8.6, 25.0], [8.7, 25.0], [8.8, 25.0], [8.9, 25.0], [9.0, 26.0], [9.1, 26.0], [9.2, 26.0], [9.3, 26.0], [9.4, 26.0], [9.5, 27.0], [9.6, 27.0], [9.7, 27.0], [9.8, 27.0], [9.9, 27.0], [10.0, 28.0], [10.1, 28.0], [10.2, 28.0], [10.3, 28.0], [10.4, 28.0], [10.5, 29.0], [10.6, 29.0], [10.7, 29.0], [10.8, 29.0], [10.9, 29.0], [11.0, 29.0], [11.1, 30.0], [11.2, 30.0], [11.3, 30.0], [11.4, 30.0], [11.5, 31.0], [11.6, 31.0], [11.7, 31.0], [11.8, 31.0], [11.9, 31.0], [12.0, 32.0], [12.1, 32.0], [12.2, 32.0], [12.3, 32.0], [12.4, 32.0], [12.5, 32.0], [12.6, 33.0], [12.7, 33.0], [12.8, 33.0], [12.9, 33.0], [13.0, 33.0], [13.1, 34.0], [13.2, 34.0], [13.3, 34.0], [13.4, 34.0], [13.5, 34.0], [13.6, 34.0], [13.7, 35.0], [13.8, 35.0], [13.9, 35.0], [14.0, 35.0], [14.1, 35.0], [14.2, 36.0], [14.3, 36.0], [14.4, 36.0], [14.5, 36.0], [14.6, 36.0], [14.7, 37.0], [14.8, 37.0], [14.9, 37.0], [15.0, 37.0], [15.1, 37.0], [15.2, 38.0], [15.3, 38.0], [15.4, 38.0], [15.5, 38.0], [15.6, 38.0], [15.7, 39.0], [15.8, 39.0], [15.9, 39.0], [16.0, 39.0], [16.1, 40.0], [16.2, 40.0], [16.3, 40.0], [16.4, 40.0], [16.5, 41.0], [16.6, 41.0], [16.7, 41.0], [16.8, 41.0], [16.9, 42.0], [17.0, 42.0], [17.1, 42.0], [17.2, 42.0], [17.3, 43.0], [17.4, 43.0], [17.5, 43.0], [17.6, 43.0], [17.7, 43.0], [17.8, 44.0], [17.9, 44.0], [18.0, 44.0], [18.1, 44.0], [18.2, 45.0], [18.3, 45.0], [18.4, 45.0], [18.5, 45.0], [18.6, 46.0], [18.7, 46.0], [18.8, 46.0], [18.9, 46.0], [19.0, 47.0], [19.1, 47.0], [19.2, 47.0], [19.3, 47.0], [19.4, 47.0], [19.5, 48.0], [19.6, 48.0], [19.7, 48.0], [19.8, 49.0], [19.9, 49.0], [20.0, 49.0], [20.1, 49.0], [20.2, 49.0], [20.3, 50.0], [20.4, 50.0], [20.5, 50.0], [20.6, 50.0], [20.7, 51.0], [20.8, 51.0], [20.9, 51.0], [21.0, 51.0], [21.1, 52.0], [21.2, 52.0], [21.3, 52.0], [21.4, 53.0], [21.5, 53.0], [21.6, 53.0], [21.7, 54.0], [21.8, 54.0], [21.9, 54.0], [22.0, 54.0], [22.1, 54.0], [22.2, 55.0], [22.3, 55.0], [22.4, 55.0], [22.5, 56.0], [22.6, 56.0], [22.7, 56.0], [22.8, 57.0], [22.9, 57.0], [23.0, 58.0], [23.1, 58.0], [23.2, 58.0], [23.3, 59.0], [23.4, 59.0], [23.5, 59.0], [23.6, 60.0], [23.7, 60.0], [23.8, 60.0], [23.9, 60.0], [24.0, 61.0], [24.1, 61.0], [24.2, 61.0], [24.3, 62.0], [24.4, 62.0], [24.5, 62.0], [24.6, 63.0], [24.7, 63.0], [24.8, 63.0], [24.9, 64.0], [25.0, 64.0], [25.1, 64.0], [25.2, 64.0], [25.3, 65.0], [25.4, 65.0], [25.5, 65.0], [25.6, 66.0], [25.7, 66.0], [25.8, 66.0], [25.9, 66.0], [26.0, 67.0], [26.1, 67.0], [26.2, 67.0], [26.3, 68.0], [26.4, 68.0], [26.5, 68.0], [26.6, 69.0], [26.7, 69.0], [26.8, 69.0], [26.9, 70.0], [27.0, 70.0], [27.1, 70.0], [27.2, 71.0], [27.3, 71.0], [27.4, 71.0], [27.5, 72.0], [27.6, 72.0], [27.7, 72.0], [27.8, 73.0], [27.9, 73.0], [28.0, 73.0], [28.1, 74.0], [28.2, 74.0], [28.3, 74.0], [28.4, 75.0], [28.5, 75.0], [28.6, 75.0], [28.7, 76.0], [28.8, 76.0], [28.9, 77.0], [29.0, 77.0], [29.1, 77.0], [29.2, 78.0], [29.3, 78.0], [29.4, 78.0], [29.5, 79.0], [29.6, 79.0], [29.7, 80.0], [29.8, 80.0], [29.9, 80.0], [30.0, 81.0], [30.1, 81.0], [30.2, 81.0], [30.3, 82.0], [30.4, 82.0], [30.5, 82.0], [30.6, 83.0], [30.7, 83.0], [30.8, 83.0], [30.9, 84.0], [31.0, 84.0], [31.1, 84.0], [31.2, 85.0], [31.3, 85.0], [31.4, 86.0], [31.5, 86.0], [31.6, 87.0], [31.7, 87.0], [31.8, 88.0], [31.9, 88.0], [32.0, 88.0], [32.1, 89.0], [32.2, 89.0], [32.3, 90.0], [32.4, 90.0], [32.5, 91.0], [32.6, 91.0], [32.7, 91.0], [32.8, 92.0], [32.9, 92.0], [33.0, 93.0], [33.1, 93.0], [33.2, 94.0], [33.3, 94.0], [33.4, 95.0], [33.5, 95.0], [33.6, 95.0], [33.7, 96.0], [33.8, 96.0], [33.9, 97.0], [34.0, 97.0], [34.1, 97.0], [34.2, 98.0], [34.3, 98.0], [34.4, 99.0], [34.5, 99.0], [34.6, 100.0], [34.7, 100.0], [34.8, 101.0], [34.9, 101.0], [35.0, 102.0], [35.1, 102.0], [35.2, 102.0], [35.3, 103.0], [35.4, 103.0], [35.5, 104.0], [35.6, 104.0], [35.7, 105.0], [35.8, 105.0], [35.9, 106.0], [36.0, 106.0], [36.1, 107.0], [36.2, 108.0], [36.3, 108.0], [36.4, 109.0], [36.5, 109.0], [36.6, 110.0], [36.7, 110.0], [36.8, 111.0], [36.9, 111.0], [37.0, 112.0], [37.1, 113.0], [37.2, 114.0], [37.3, 114.0], [37.4, 115.0], [37.5, 115.0], [37.6, 116.0], [37.7, 116.0], [37.8, 117.0], [37.9, 117.0], [38.0, 118.0], [38.1, 118.0], [38.2, 119.0], [38.3, 120.0], [38.4, 120.0], [38.5, 121.0], [38.6, 121.0], [38.7, 122.0], [38.8, 123.0], [38.9, 123.0], [39.0, 124.0], [39.1, 124.0], [39.2, 125.0], [39.3, 125.0], [39.4, 126.0], [39.5, 126.0], [39.6, 127.0], [39.7, 127.0], [39.8, 127.0], [39.9, 128.0], [40.0, 128.0], [40.1, 128.0], [40.2, 129.0], [40.3, 129.0], [40.4, 130.0], [40.5, 130.0], [40.6, 130.0], [40.7, 131.0], [40.8, 131.0], [40.9, 131.0], [41.0, 132.0], [41.1, 132.0], [41.2, 133.0], [41.3, 133.0], [41.4, 133.0], [41.5, 134.0], [41.6, 134.0], [41.7, 135.0], [41.8, 135.0], [41.9, 135.0], [42.0, 136.0], [42.1, 136.0], [42.2, 137.0], [42.3, 137.0], [42.4, 137.0], [42.5, 138.0], [42.6, 138.0], [42.7, 139.0], [42.8, 139.0], [42.9, 139.0], [43.0, 140.0], [43.1, 140.0], [43.2, 140.0], [43.3, 141.0], [43.4, 141.0], [43.5, 142.0], [43.6, 142.0], [43.7, 142.0], [43.8, 143.0], [43.9, 143.0], [44.0, 144.0], [44.1, 144.0], [44.2, 144.0], [44.3, 145.0], [44.4, 145.0], [44.5, 145.0], [44.6, 146.0], [44.7, 146.0], [44.8, 146.0], [44.9, 147.0], [45.0, 147.0], [45.1, 148.0], [45.2, 148.0], [45.3, 149.0], [45.4, 149.0], [45.5, 150.0], [45.6, 150.0], [45.7, 151.0], [45.8, 151.0], [45.9, 151.0], [46.0, 152.0], [46.1, 152.0], [46.2, 153.0], [46.3, 153.0], [46.4, 153.0], [46.5, 154.0], [46.6, 154.0], [46.7, 155.0], [46.8, 155.0], [46.9, 155.0], [47.0, 156.0], [47.1, 156.0], [47.2, 157.0], [47.3, 157.0], [47.4, 158.0], [47.5, 158.0], [47.6, 158.0], [47.7, 159.0], [47.8, 159.0], [47.9, 160.0], [48.0, 160.0], [48.1, 160.0], [48.2, 161.0], [48.3, 161.0], [48.4, 162.0], [48.5, 162.0], [48.6, 162.0], [48.7, 162.0], [48.8, 163.0], [48.9, 163.0], [49.0, 163.0], [49.1, 164.0], [49.2, 164.0], [49.3, 164.0], [49.4, 165.0], [49.5, 165.0], [49.6, 165.0], [49.7, 166.0], [49.8, 166.0], [49.9, 166.0], [50.0, 167.0], [50.1, 167.0], [50.2, 167.0], [50.3, 168.0], [50.4, 168.0], [50.5, 168.0], [50.6, 168.0], [50.7, 169.0], [50.8, 169.0], [50.9, 169.0], [51.0, 170.0], [51.1, 170.0], [51.2, 170.0], [51.3, 170.0], [51.4, 171.0], [51.5, 171.0], [51.6, 171.0], [51.7, 172.0], [51.8, 172.0], [51.9, 172.0], [52.0, 172.0], [52.1, 172.0], [52.2, 173.0], [52.3, 173.0], [52.4, 173.0], [52.5, 174.0], [52.6, 174.0], [52.7, 174.0], [52.8, 174.0], [52.9, 174.0], [53.0, 175.0], [53.1, 175.0], [53.2, 175.0], [53.3, 175.0], [53.4, 175.0], [53.5, 176.0], [53.6, 176.0], [53.7, 176.0], [53.8, 176.0], [53.9, 176.0], [54.0, 177.0], [54.1, 177.0], [54.2, 177.0], [54.3, 177.0], [54.4, 178.0], [54.5, 178.0], [54.6, 178.0], [54.7, 178.0], [54.8, 178.0], [54.9, 179.0], [55.0, 179.0], [55.1, 179.0], [55.2, 179.0], [55.3, 179.0], [55.4, 180.0], [55.5, 180.0], [55.6, 180.0], [55.7, 180.0], [55.8, 180.0], [55.9, 180.0], [56.0, 181.0], [56.1, 181.0], [56.2, 181.0], [56.3, 181.0], [56.4, 181.0], [56.5, 182.0], [56.6, 182.0], [56.7, 182.0], [56.8, 182.0], [56.9, 182.0], [57.0, 182.0], [57.1, 183.0], [57.2, 183.0], [57.3, 183.0], [57.4, 183.0], [57.5, 183.0], [57.6, 183.0], [57.7, 184.0], [57.8, 184.0], [57.9, 184.0], [58.0, 184.0], [58.1, 184.0], [58.2, 184.0], [58.3, 184.0], [58.4, 185.0], [58.5, 185.0], [58.6, 185.0], [58.7, 185.0], [58.8, 185.0], [58.9, 185.0], [59.0, 185.0], [59.1, 186.0], [59.2, 186.0], [59.3, 186.0], [59.4, 186.0], [59.5, 186.0], [59.6, 186.0], [59.7, 186.0], [59.8, 187.0], [59.9, 187.0], [60.0, 187.0], [60.1, 187.0], [60.2, 187.0], [60.3, 187.0], [60.4, 187.0], [60.5, 187.0], [60.6, 188.0], [60.7, 188.0], [60.8, 188.0], [60.9, 188.0], [61.0, 188.0], [61.1, 188.0], [61.2, 188.0], [61.3, 189.0], [61.4, 189.0], [61.5, 189.0], [61.6, 189.0], [61.7, 189.0], [61.8, 189.0], [61.9, 189.0], [62.0, 190.0], [62.1, 190.0], [62.2, 190.0], [62.3, 190.0], [62.4, 190.0], [62.5, 190.0], [62.6, 190.0], [62.7, 190.0], [62.8, 190.0], [62.9, 191.0], [63.0, 191.0], [63.1, 191.0], [63.2, 191.0], [63.3, 191.0], [63.4, 191.0], [63.5, 191.0], [63.6, 192.0], [63.7, 192.0], [63.8, 192.0], [63.9, 192.0], [64.0, 192.0], [64.1, 192.0], [64.2, 192.0], [64.3, 192.0], [64.4, 193.0], [64.5, 193.0], [64.6, 193.0], [64.7, 193.0], [64.8, 193.0], [64.9, 193.0], [65.0, 193.0], [65.1, 194.0], [65.2, 194.0], [65.3, 194.0], [65.4, 194.0], [65.5, 194.0], [65.6, 194.0], [65.7, 194.0], [65.8, 194.0], [65.9, 195.0], [66.0, 195.0], [66.1, 195.0], [66.2, 195.0], [66.3, 195.0], [66.4, 195.0], [66.5, 195.0], [66.6, 196.0], [66.7, 196.0], [66.8, 196.0], [66.9, 196.0], [67.0, 196.0], [67.1, 196.0], [67.2, 196.0], [67.3, 196.0], [67.4, 196.0], [67.5, 197.0], [67.6, 197.0], [67.7, 197.0], [67.8, 197.0], [67.9, 197.0], [68.0, 197.0], [68.1, 197.0], [68.2, 197.0], [68.3, 197.0], [68.4, 198.0], [68.5, 198.0], [68.6, 198.0], [68.7, 198.0], [68.8, 198.0], [68.9, 198.0], [69.0, 198.0], [69.1, 198.0], [69.2, 199.0], [69.3, 199.0], [69.4, 199.0], [69.5, 199.0], [69.6, 199.0], [69.7, 199.0], [69.8, 199.0], [69.9, 199.0], [70.0, 199.0], [70.1, 200.0], [70.2, 200.0], [70.3, 200.0], [70.4, 200.0], [70.5, 200.0], [70.6, 200.0], [70.7, 200.0], [70.8, 200.0], [70.9, 200.0], [71.0, 201.0], [71.1, 201.0], [71.2, 201.0], [71.3, 201.0], [71.4, 201.0], [71.5, 201.0], [71.6, 201.0], [71.7, 201.0], [71.8, 201.0], [71.9, 201.0], [72.0, 202.0], [72.1, 202.0], [72.2, 202.0], [72.3, 202.0], [72.4, 202.0], [72.5, 202.0], [72.6, 202.0], [72.7, 202.0], [72.8, 202.0], [72.9, 202.0], [73.0, 203.0], [73.1, 203.0], [73.2, 203.0], [73.3, 203.0], [73.4, 203.0], [73.5, 203.0], [73.6, 203.0], [73.7, 203.0], [73.8, 203.0], [73.9, 204.0], [74.0, 204.0], [74.1, 204.0], [74.2, 204.0], [74.3, 204.0], [74.4, 204.0], [74.5, 204.0], [74.6, 204.0], [74.7, 204.0], [74.8, 204.0], [74.9, 205.0], [75.0, 205.0], [75.1, 205.0], [75.2, 205.0], [75.3, 205.0], [75.4, 205.0], [75.5, 205.0], [75.6, 205.0], [75.7, 205.0], [75.8, 205.0], [75.9, 205.0], [76.0, 206.0], [76.1, 206.0], [76.2, 206.0], [76.3, 206.0], [76.4, 206.0], [76.5, 206.0], [76.6, 206.0], [76.7, 206.0], [76.8, 206.0], [76.9, 207.0], [77.0, 207.0], [77.1, 207.0], [77.2, 207.0], [77.3, 207.0], [77.4, 207.0], [77.5, 207.0], [77.6, 207.0], [77.7, 208.0], [77.8, 208.0], [77.9, 208.0], [78.0, 208.0], [78.1, 208.0], [78.2, 208.0], [78.3, 208.0], [78.4, 208.0], [78.5, 208.0], [78.6, 209.0], [78.7, 209.0], [78.8, 209.0], [78.9, 209.0], [79.0, 209.0], [79.1, 209.0], [79.2, 209.0], [79.3, 209.0], [79.4, 209.0], [79.5, 210.0], [79.6, 210.0], [79.7, 210.0], [79.8, 210.0], [79.9, 210.0], [80.0, 210.0], [80.1, 210.0], [80.2, 210.0], [80.3, 210.0], [80.4, 211.0], [80.5, 211.0], [80.6, 211.0], [80.7, 211.0], [80.8, 211.0], [80.9, 211.0], [81.0, 211.0], [81.1, 211.0], [81.2, 211.0], [81.3, 212.0], [81.4, 212.0], [81.5, 212.0], [81.6, 212.0], [81.7, 212.0], [81.8, 212.0], [81.9, 212.0], [82.0, 212.0], [82.1, 213.0], [82.2, 213.0], [82.3, 213.0], [82.4, 213.0], [82.5, 213.0], [82.6, 213.0], [82.7, 213.0], [82.8, 213.0], [82.9, 214.0], [83.0, 214.0], [83.1, 214.0], [83.2, 214.0], [83.3, 214.0], [83.4, 214.0], [83.5, 214.0], [83.6, 214.0], [83.7, 215.0], [83.8, 215.0], [83.9, 215.0], [84.0, 215.0], [84.1, 215.0], [84.2, 215.0], [84.3, 215.0], [84.4, 216.0], [84.5, 216.0], [84.6, 216.0], [84.7, 216.0], [84.8, 216.0], [84.9, 216.0], [85.0, 216.0], [85.1, 217.0], [85.2, 217.0], [85.3, 217.0], [85.4, 217.0], [85.5, 217.0], [85.6, 217.0], [85.7, 217.0], [85.8, 218.0], [85.9, 218.0], [86.0, 218.0], [86.1, 218.0], [86.2, 218.0], [86.3, 218.0], [86.4, 218.0], [86.5, 219.0], [86.6, 219.0], [86.7, 219.0], [86.8, 219.0], [86.9, 219.0], [87.0, 219.0], [87.1, 219.0], [87.2, 220.0], [87.3, 220.0], [87.4, 220.0], [87.5, 220.0], [87.6, 220.0], [87.7, 220.0], [87.8, 220.0], [87.9, 221.0], [88.0, 221.0], [88.1, 221.0], [88.2, 221.0], [88.3, 221.0], [88.4, 221.0], [88.5, 222.0], [88.6, 222.0], [88.7, 222.0], [88.8, 222.0], [88.9, 222.0], [89.0, 223.0], [89.1, 223.0], [89.2, 223.0], [89.3, 223.0], [89.4, 223.0], [89.5, 223.0], [89.6, 223.0], [89.7, 224.0], [89.8, 224.0], [89.9, 224.0], [90.0, 224.0], [90.1, 224.0], [90.2, 225.0], [90.3, 225.0], [90.4, 225.0], [90.5, 225.0], [90.6, 225.0], [90.7, 226.0], [90.8, 226.0], [90.9, 226.0], [91.0, 226.0], [91.1, 226.0], [91.2, 226.0], [91.3, 227.0], [91.4, 227.0], [91.5, 227.0], [91.6, 227.0], [91.7, 227.0], [91.8, 228.0], [91.9, 228.0], [92.0, 228.0], [92.1, 228.0], [92.2, 229.0], [92.3, 229.0], [92.4, 229.0], [92.5, 229.0], [92.6, 230.0], [92.7, 230.0], [92.8, 230.0], [92.9, 230.0], [93.0, 231.0], [93.1, 231.0], [93.2, 231.0], [93.3, 232.0], [93.4, 232.0], [93.5, 232.0], [93.6, 232.0], [93.7, 233.0], [93.8, 233.0], [93.9, 233.0], [94.0, 233.0], [94.1, 234.0], [94.2, 234.0], [94.3, 234.0], [94.4, 235.0], [94.5, 235.0], [94.6, 235.0], [94.7, 235.0], [94.8, 236.0], [94.9, 236.0], [95.0, 237.0], [95.1, 237.0], [95.2, 237.0], [95.3, 238.0], [95.4, 238.0], [95.5, 239.0], [95.6, 239.0], [95.7, 239.0], [95.8, 240.0], [95.9, 240.0], [96.0, 241.0], [96.1, 242.0], [96.2, 242.0], [96.3, 243.0], [96.4, 244.0], [96.5, 244.0], [96.6, 245.0], [96.7, 246.0], [96.8, 246.0], [96.9, 247.0], [97.0, 248.0], [97.1, 249.0], [97.2, 250.0], [97.3, 251.0], [97.4, 253.0], [97.5, 254.0], [97.6, 256.0], [97.7, 257.0], [97.8, 259.0], [97.9, 261.0], [98.0, 264.0], [98.1, 266.0], [98.2, 268.0], [98.3, 271.0], [98.4, 276.0], [98.5, 286.0], [98.6, 303.0], [98.7, 321.0], [98.8, 333.0], [98.9, 344.0], [99.0, 353.0], [99.1, 358.0], [99.2, 364.0], [99.3, 370.0], [99.4, 377.0], [99.5, 383.0], [99.6, 390.0], [99.7, 401.0], [99.8, 414.0], [99.9, 447.0]], "isOverall": false, "label": "GET All employees", "isController": false}, {"data": [[0.0, 1.0], [0.1, 2.0], [0.2, 2.0], [0.3, 2.0], [0.4, 2.0], [0.5, 2.0], [0.6, 2.0], [0.7, 2.0], [0.8, 2.0], [0.9, 2.0], [1.0, 2.0], [1.1, 2.0], [1.2, 2.0], [1.3, 2.0], [1.4, 2.0], [1.5, 2.0], [1.6, 2.0], [1.7, 2.0], [1.8, 2.0], [1.9, 2.0], [2.0, 2.0], [2.1, 2.0], [2.2, 2.0], [2.3, 2.0], [2.4, 2.0], [2.5, 3.0], [2.6, 3.0], [2.7, 3.0], [2.8, 3.0], [2.9, 3.0], [3.0, 3.0], [3.1, 3.0], [3.2, 3.0], [3.3, 3.0], [3.4, 3.0], [3.5, 3.0], [3.6, 3.0], [3.7, 3.0], [3.8, 3.0], [3.9, 3.0], [4.0, 3.0], [4.1, 3.0], [4.2, 3.0], [4.3, 3.0], [4.4, 3.0], [4.5, 3.0], [4.6, 3.0], [4.7, 3.0], [4.8, 3.0], [4.9, 3.0], [5.0, 3.0], [5.1, 3.0], [5.2, 3.0], [5.3, 3.0], [5.4, 3.0], [5.5, 3.0], [5.6, 3.0], [5.7, 3.0], [5.8, 3.0], [5.9, 3.0], [6.0, 3.0], [6.1, 3.0], [6.2, 3.0], [6.3, 3.0], [6.4, 3.0], [6.5, 3.0], [6.6, 3.0], [6.7, 3.0], [6.8, 3.0], [6.9, 3.0], [7.0, 3.0], [7.1, 3.0], [7.2, 3.0], [7.3, 3.0], [7.4, 3.0], [7.5, 3.0], [7.6, 3.0], [7.7, 3.0], [7.8, 3.0], [7.9, 3.0], [8.0, 3.0], [8.1, 3.0], [8.2, 3.0], [8.3, 3.0], [8.4, 3.0], [8.5, 3.0], [8.6, 3.0], [8.7, 3.0], [8.8, 3.0], [8.9, 3.0], [9.0, 3.0], [9.1, 3.0], [9.2, 3.0], [9.3, 3.0], [9.4, 3.0], [9.5, 3.0], [9.6, 3.0], [9.7, 3.0], [9.8, 3.0], [9.9, 3.0], [10.0, 3.0], [10.1, 3.0], [10.2, 3.0], [10.3, 3.0], [10.4, 3.0], [10.5, 3.0], [10.6, 3.0], [10.7, 3.0], [10.8, 3.0], [10.9, 4.0], [11.0, 4.0], [11.1, 4.0], [11.2, 4.0], [11.3, 4.0], [11.4, 4.0], [11.5, 4.0], [11.6, 4.0], [11.7, 4.0], [11.8, 4.0], [11.9, 4.0], [12.0, 4.0], [12.1, 4.0], [12.2, 4.0], [12.3, 4.0], [12.4, 4.0], [12.5, 4.0], [12.6, 4.0], [12.7, 4.0], [12.8, 4.0], [12.9, 4.0], [13.0, 4.0], [13.1, 4.0], [13.2, 4.0], [13.3, 4.0], [13.4, 4.0], [13.5, 4.0], [13.6, 4.0], [13.7, 4.0], [13.8, 4.0], [13.9, 4.0], [14.0, 4.0], [14.1, 4.0], [14.2, 4.0], [14.3, 4.0], [14.4, 4.0], [14.5, 4.0], [14.6, 4.0], [14.7, 4.0], [14.8, 4.0], [14.9, 4.0], [15.0, 4.0], [15.1, 4.0], [15.2, 4.0], [15.3, 4.0], [15.4, 4.0], [15.5, 4.0], [15.6, 4.0], [15.7, 4.0], [15.8, 4.0], [15.9, 4.0], [16.0, 4.0], [16.1, 4.0], [16.2, 4.0], [16.3, 4.0], [16.4, 4.0], [16.5, 4.0], [16.6, 4.0], [16.7, 4.0], [16.8, 4.0], [16.9, 4.0], [17.0, 4.0], [17.1, 4.0], [17.2, 4.0], [17.3, 4.0], [17.4, 4.0], [17.5, 4.0], [17.6, 4.0], [17.7, 4.0], [17.8, 4.0], [17.9, 4.0], [18.0, 4.0], [18.1, 4.0], [18.2, 4.0], [18.3, 4.0], [18.4, 4.0], [18.5, 4.0], [18.6, 4.0], [18.7, 4.0], [18.8, 4.0], [18.9, 4.0], [19.0, 4.0], [19.1, 4.0], [19.2, 4.0], [19.3, 4.0], [19.4, 4.0], [19.5, 4.0], [19.6, 4.0], [19.7, 4.0], [19.8, 4.0], [19.9, 4.0], [20.0, 4.0], [20.1, 4.0], [20.2, 4.0], [20.3, 4.0], [20.4, 4.0], [20.5, 4.0], [20.6, 4.0], [20.7, 4.0], [20.8, 4.0], [20.9, 4.0], [21.0, 4.0], [21.1, 4.0], [21.2, 4.0], [21.3, 4.0], [21.4, 4.0], [21.5, 4.0], [21.6, 4.0], [21.7, 4.0], [21.8, 4.0], [21.9, 4.0], [22.0, 4.0], [22.1, 4.0], [22.2, 4.0], [22.3, 4.0], [22.4, 4.0], [22.5, 4.0], [22.6, 5.0], [22.7, 5.0], [22.8, 5.0], [22.9, 5.0], [23.0, 5.0], [23.1, 5.0], [23.2, 5.0], [23.3, 5.0], [23.4, 5.0], [23.5, 5.0], [23.6, 5.0], [23.7, 5.0], [23.8, 5.0], [23.9, 5.0], [24.0, 5.0], [24.1, 5.0], [24.2, 5.0], [24.3, 5.0], [24.4, 5.0], [24.5, 5.0], [24.6, 5.0], [24.7, 5.0], [24.8, 5.0], [24.9, 5.0], [25.0, 5.0], [25.1, 5.0], [25.2, 5.0], [25.3, 5.0], [25.4, 5.0], [25.5, 5.0], [25.6, 5.0], [25.7, 5.0], [25.8, 5.0], [25.9, 5.0], [26.0, 5.0], [26.1, 5.0], [26.2, 5.0], [26.3, 5.0], [26.4, 5.0], [26.5, 5.0], [26.6, 5.0], [26.7, 5.0], [26.8, 5.0], [26.9, 5.0], [27.0, 5.0], [27.1, 5.0], [27.2, 5.0], [27.3, 5.0], [27.4, 5.0], [27.5, 5.0], [27.6, 5.0], [27.7, 5.0], [27.8, 5.0], [27.9, 5.0], [28.0, 5.0], [28.1, 5.0], [28.2, 5.0], [28.3, 5.0], [28.4, 5.0], [28.5, 5.0], [28.6, 5.0], [28.7, 5.0], [28.8, 5.0], [28.9, 5.0], [29.0, 5.0], [29.1, 5.0], [29.2, 5.0], [29.3, 5.0], [29.4, 5.0], [29.5, 5.0], [29.6, 5.0], [29.7, 5.0], [29.8, 5.0], [29.9, 5.0], [30.0, 5.0], [30.1, 5.0], [30.2, 5.0], [30.3, 5.0], [30.4, 5.0], [30.5, 5.0], [30.6, 5.0], [30.7, 5.0], [30.8, 5.0], [30.9, 5.0], [31.0, 5.0], [31.1, 5.0], [31.2, 5.0], [31.3, 5.0], [31.4, 5.0], [31.5, 5.0], [31.6, 5.0], [31.7, 5.0], [31.8, 5.0], [31.9, 5.0], [32.0, 5.0], [32.1, 5.0], [32.2, 5.0], [32.3, 5.0], [32.4, 5.0], [32.5, 5.0], [32.6, 5.0], [32.7, 5.0], [32.8, 5.0], [32.9, 5.0], [33.0, 5.0], [33.1, 5.0], [33.2, 5.0], [33.3, 5.0], [33.4, 5.0], [33.5, 5.0], [33.6, 5.0], [33.7, 5.0], [33.8, 5.0], [33.9, 5.0], [34.0, 5.0], [34.1, 5.0], [34.2, 5.0], [34.3, 6.0], [34.4, 6.0], [34.5, 6.0], [34.6, 6.0], [34.7, 6.0], [34.8, 6.0], [34.9, 6.0], [35.0, 6.0], [35.1, 6.0], [35.2, 6.0], [35.3, 6.0], [35.4, 6.0], [35.5, 6.0], [35.6, 6.0], [35.7, 6.0], [35.8, 6.0], [35.9, 6.0], [36.0, 6.0], [36.1, 6.0], [36.2, 6.0], [36.3, 6.0], [36.4, 6.0], [36.5, 6.0], [36.6, 6.0], [36.7, 6.0], [36.8, 6.0], [36.9, 6.0], [37.0, 6.0], [37.1, 6.0], [37.2, 6.0], [37.3, 6.0], [37.4, 6.0], [37.5, 6.0], [37.6, 6.0], [37.7, 6.0], [37.8, 6.0], [37.9, 6.0], [38.0, 6.0], [38.1, 6.0], [38.2, 6.0], [38.3, 6.0], [38.4, 6.0], [38.5, 6.0], [38.6, 6.0], [38.7, 6.0], [38.8, 6.0], [38.9, 6.0], [39.0, 6.0], [39.1, 6.0], [39.2, 6.0], [39.3, 6.0], [39.4, 6.0], [39.5, 6.0], [39.6, 6.0], [39.7, 6.0], [39.8, 6.0], [39.9, 6.0], [40.0, 6.0], [40.1, 6.0], [40.2, 6.0], [40.3, 6.0], [40.4, 6.0], [40.5, 6.0], [40.6, 6.0], [40.7, 6.0], [40.8, 6.0], [40.9, 6.0], [41.0, 6.0], [41.1, 6.0], [41.2, 6.0], [41.3, 6.0], [41.4, 6.0], [41.5, 6.0], [41.6, 6.0], [41.7, 6.0], [41.8, 6.0], [41.9, 6.0], [42.0, 6.0], [42.1, 6.0], [42.2, 6.0], [42.3, 6.0], [42.4, 6.0], [42.5, 6.0], [42.6, 6.0], [42.7, 6.0], [42.8, 6.0], [42.9, 6.0], [43.0, 6.0], [43.1, 6.0], [43.2, 6.0], [43.3, 6.0], [43.4, 6.0], [43.5, 6.0], [43.6, 6.0], [43.7, 6.0], [43.8, 6.0], [43.9, 6.0], [44.0, 6.0], [44.1, 6.0], [44.2, 6.0], [44.3, 6.0], [44.4, 6.0], [44.5, 6.0], [44.6, 6.0], [44.7, 6.0], [44.8, 6.0], [44.9, 6.0], [45.0, 6.0], [45.1, 7.0], [45.2, 7.0], [45.3, 7.0], [45.4, 7.0], [45.5, 7.0], [45.6, 7.0], [45.7, 7.0], [45.8, 7.0], [45.9, 7.0], [46.0, 7.0], [46.1, 7.0], [46.2, 7.0], [46.3, 7.0], [46.4, 7.0], [46.5, 7.0], [46.6, 7.0], [46.7, 7.0], [46.8, 7.0], [46.9, 7.0], [47.0, 7.0], [47.1, 7.0], [47.2, 7.0], [47.3, 7.0], [47.4, 7.0], [47.5, 7.0], [47.6, 7.0], [47.7, 7.0], [47.8, 7.0], [47.9, 7.0], [48.0, 7.0], [48.1, 7.0], [48.2, 7.0], [48.3, 7.0], [48.4, 7.0], [48.5, 7.0], [48.6, 7.0], [48.7, 7.0], [48.8, 7.0], [48.9, 7.0], [49.0, 7.0], [49.1, 7.0], [49.2, 7.0], [49.3, 7.0], [49.4, 7.0], [49.5, 7.0], [49.6, 7.0], [49.7, 7.0], [49.8, 7.0], [49.9, 7.0], [50.0, 7.0], [50.1, 7.0], [50.2, 7.0], [50.3, 7.0], [50.4, 7.0], [50.5, 7.0], [50.6, 7.0], [50.7, 7.0], [50.8, 7.0], [50.9, 7.0], [51.0, 7.0], [51.1, 7.0], [51.2, 7.0], [51.3, 7.0], [51.4, 7.0], [51.5, 7.0], [51.6, 7.0], [51.7, 7.0], [51.8, 7.0], [51.9, 7.0], [52.0, 7.0], [52.1, 7.0], [52.2, 7.0], [52.3, 7.0], [52.4, 7.0], [52.5, 7.0], [52.6, 7.0], [52.7, 7.0], [52.8, 7.0], [52.9, 7.0], [53.0, 7.0], [53.1, 7.0], [53.2, 7.0], [53.3, 7.0], [53.4, 7.0], [53.5, 7.0], [53.6, 7.0], [53.7, 7.0], [53.8, 7.0], [53.9, 7.0], [54.0, 7.0], [54.1, 7.0], [54.2, 7.0], [54.3, 7.0], [54.4, 7.0], [54.5, 7.0], [54.6, 8.0], [54.7, 8.0], [54.8, 8.0], [54.9, 8.0], [55.0, 8.0], [55.1, 8.0], [55.2, 8.0], [55.3, 8.0], [55.4, 8.0], [55.5, 8.0], [55.6, 8.0], [55.7, 8.0], [55.8, 8.0], [55.9, 8.0], [56.0, 8.0], [56.1, 8.0], [56.2, 8.0], [56.3, 8.0], [56.4, 8.0], [56.5, 8.0], [56.6, 8.0], [56.7, 8.0], [56.8, 8.0], [56.9, 8.0], [57.0, 8.0], [57.1, 8.0], [57.2, 8.0], [57.3, 8.0], [57.4, 8.0], [57.5, 8.0], [57.6, 8.0], [57.7, 8.0], [57.8, 8.0], [57.9, 8.0], [58.0, 8.0], [58.1, 8.0], [58.2, 8.0], [58.3, 8.0], [58.4, 8.0], [58.5, 8.0], [58.6, 8.0], [58.7, 8.0], [58.8, 8.0], [58.9, 8.0], [59.0, 8.0], [59.1, 8.0], [59.2, 8.0], [59.3, 8.0], [59.4, 8.0], [59.5, 8.0], [59.6, 8.0], [59.7, 8.0], [59.8, 8.0], [59.9, 8.0], [60.0, 8.0], [60.1, 8.0], [60.2, 8.0], [60.3, 8.0], [60.4, 8.0], [60.5, 8.0], [60.6, 8.0], [60.7, 8.0], [60.8, 8.0], [60.9, 8.0], [61.0, 8.0], [61.1, 8.0], [61.2, 8.0], [61.3, 8.0], [61.4, 8.0], [61.5, 8.0], [61.6, 8.0], [61.7, 8.0], [61.8, 8.0], [61.9, 8.0], [62.0, 8.0], [62.1, 8.0], [62.2, 8.0], [62.3, 8.0], [62.4, 8.0], [62.5, 8.0], [62.6, 8.0], [62.7, 9.0], [62.8, 9.0], [62.9, 9.0], [63.0, 9.0], [63.1, 9.0], [63.2, 9.0], [63.3, 9.0], [63.4, 9.0], [63.5, 9.0], [63.6, 9.0], [63.7, 9.0], [63.8, 9.0], [63.9, 9.0], [64.0, 9.0], [64.1, 9.0], [64.2, 9.0], [64.3, 9.0], [64.4, 9.0], [64.5, 9.0], [64.6, 9.0], [64.7, 9.0], [64.8, 9.0], [64.9, 9.0], [65.0, 9.0], [65.1, 9.0], [65.2, 9.0], [65.3, 9.0], [65.4, 9.0], [65.5, 9.0], [65.6, 9.0], [65.7, 9.0], [65.8, 9.0], [65.9, 9.0], [66.0, 9.0], [66.1, 9.0], [66.2, 9.0], [66.3, 9.0], [66.4, 9.0], [66.5, 9.0], [66.6, 9.0], [66.7, 9.0], [66.8, 9.0], [66.9, 9.0], [67.0, 9.0], [67.1, 9.0], [67.2, 9.0], [67.3, 9.0], [67.4, 9.0], [67.5, 9.0], [67.6, 9.0], [67.7, 9.0], [67.8, 9.0], [67.9, 9.0], [68.0, 9.0], [68.1, 9.0], [68.2, 9.0], [68.3, 9.0], [68.4, 9.0], [68.5, 9.0], [68.6, 9.0], [68.7, 9.0], [68.8, 9.0], [68.9, 9.0], [69.0, 9.0], [69.1, 9.0], [69.2, 9.0], [69.3, 9.0], [69.4, 9.0], [69.5, 9.0], [69.6, 10.0], [69.7, 10.0], [69.8, 10.0], [69.9, 10.0], [70.0, 10.0], [70.1, 10.0], [70.2, 10.0], [70.3, 10.0], [70.4, 10.0], [70.5, 10.0], [70.6, 10.0], [70.7, 10.0], [70.8, 10.0], [70.9, 10.0], [71.0, 10.0], [71.1, 10.0], [71.2, 10.0], [71.3, 10.0], [71.4, 10.0], [71.5, 10.0], [71.6, 10.0], [71.7, 10.0], [71.8, 10.0], [71.9, 10.0], [72.0, 10.0], [72.1, 10.0], [72.2, 10.0], [72.3, 10.0], [72.4, 10.0], [72.5, 10.0], [72.6, 10.0], [72.7, 10.0], [72.8, 10.0], [72.9, 10.0], [73.0, 10.0], [73.1, 10.0], [73.2, 10.0], [73.3, 10.0], [73.4, 10.0], [73.5, 10.0], [73.6, 10.0], [73.7, 10.0], [73.8, 10.0], [73.9, 10.0], [74.0, 10.0], [74.1, 10.0], [74.2, 10.0], [74.3, 10.0], [74.4, 10.0], [74.5, 10.0], [74.6, 10.0], [74.7, 10.0], [74.8, 10.0], [74.9, 10.0], [75.0, 10.0], [75.1, 10.0], [75.2, 10.0], [75.3, 10.0], [75.4, 11.0], [75.5, 11.0], [75.6, 11.0], [75.7, 11.0], [75.8, 11.0], [75.9, 11.0], [76.0, 11.0], [76.1, 11.0], [76.2, 11.0], [76.3, 11.0], [76.4, 11.0], [76.5, 11.0], [76.6, 11.0], [76.7, 11.0], [76.8, 11.0], [76.9, 11.0], [77.0, 11.0], [77.1, 11.0], [77.2, 11.0], [77.3, 11.0], [77.4, 11.0], [77.5, 11.0], [77.6, 11.0], [77.7, 11.0], [77.8, 11.0], [77.9, 11.0], [78.0, 11.0], [78.1, 11.0], [78.2, 11.0], [78.3, 11.0], [78.4, 11.0], [78.5, 11.0], [78.6, 11.0], [78.7, 11.0], [78.8, 11.0], [78.9, 11.0], [79.0, 11.0], [79.1, 11.0], [79.2, 11.0], [79.3, 11.0], [79.4, 11.0], [79.5, 11.0], [79.6, 12.0], [79.7, 12.0], [79.8, 12.0], [79.9, 12.0], [80.0, 12.0], [80.1, 12.0], [80.2, 12.0], [80.3, 12.0], [80.4, 12.0], [80.5, 12.0], [80.6, 12.0], [80.7, 12.0], [80.8, 12.0], [80.9, 12.0], [81.0, 12.0], [81.1, 12.0], [81.2, 12.0], [81.3, 12.0], [81.4, 12.0], [81.5, 12.0], [81.6, 12.0], [81.7, 12.0], [81.8, 12.0], [81.9, 12.0], [82.0, 12.0], [82.1, 12.0], [82.2, 12.0], [82.3, 12.0], [82.4, 12.0], [82.5, 12.0], [82.6, 12.0], [82.7, 12.0], [82.8, 12.0], [82.9, 12.0], [83.0, 13.0], [83.1, 13.0], [83.2, 13.0], [83.3, 13.0], [83.4, 13.0], [83.5, 13.0], [83.6, 13.0], [83.7, 13.0], [83.8, 13.0], [83.9, 13.0], [84.0, 13.0], [84.1, 13.0], [84.2, 13.0], [84.3, 13.0], [84.4, 13.0], [84.5, 13.0], [84.6, 13.0], [84.7, 13.0], [84.8, 13.0], [84.9, 13.0], [85.0, 13.0], [85.1, 13.0], [85.2, 13.0], [85.3, 13.0], [85.4, 13.0], [85.5, 13.0], [85.6, 13.0], [85.7, 13.0], [85.8, 13.0], [85.9, 14.0], [86.0, 14.0], [86.1, 14.0], [86.2, 14.0], [86.3, 14.0], [86.4, 14.0], [86.5, 14.0], [86.6, 14.0], [86.7, 14.0], [86.8, 14.0], [86.9, 14.0], [87.0, 14.0], [87.1, 14.0], [87.2, 14.0], [87.3, 14.0], [87.4, 14.0], [87.5, 14.0], [87.6, 14.0], [87.7, 14.0], [87.8, 14.0], [87.9, 14.0], [88.0, 14.0], [88.1, 14.0], [88.2, 15.0], [88.3, 15.0], [88.4, 15.0], [88.5, 15.0], [88.6, 15.0], [88.7, 15.0], [88.8, 15.0], [88.9, 15.0], [89.0, 15.0], [89.1, 15.0], [89.2, 15.0], [89.3, 15.0], [89.4, 15.0], [89.5, 15.0], [89.6, 15.0], [89.7, 15.0], [89.8, 15.0], [89.9, 15.0], [90.0, 15.0], [90.1, 16.0], [90.2, 16.0], [90.3, 16.0], [90.4, 16.0], [90.5, 16.0], [90.6, 16.0], [90.7, 16.0], [90.8, 16.0], [90.9, 16.0], [91.0, 16.0], [91.1, 16.0], [91.2, 16.0], [91.3, 16.0], [91.4, 16.0], [91.5, 17.0], [91.6, 17.0], [91.7, 17.0], [91.8, 17.0], [91.9, 17.0], [92.0, 17.0], [92.1, 17.0], [92.2, 17.0], [92.3, 17.0], [92.4, 17.0], [92.5, 17.0], [92.6, 17.0], [92.7, 18.0], [92.8, 18.0], [92.9, 18.0], [93.0, 18.0], [93.1, 18.0], [93.2, 18.0], [93.3, 18.0], [93.4, 18.0], [93.5, 18.0], [93.6, 18.0], [93.7, 18.0], [93.8, 19.0], [93.9, 19.0], [94.0, 19.0], [94.1, 19.0], [94.2, 19.0], [94.3, 19.0], [94.4, 19.0], [94.5, 19.0], [94.6, 20.0], [94.7, 20.0], [94.8, 20.0], [94.9, 20.0], [95.0, 20.0], [95.1, 20.0], [95.2, 20.0], [95.3, 20.0], [95.4, 21.0], [95.5, 21.0], [95.6, 21.0], [95.7, 21.0], [95.8, 21.0], [95.9, 21.0], [96.0, 21.0], [96.1, 22.0], [96.2, 22.0], [96.3, 22.0], [96.4, 22.0], [96.5, 22.0], [96.6, 23.0], [96.7, 23.0], [96.8, 23.0], [96.9, 23.0], [97.0, 24.0], [97.1, 24.0], [97.2, 25.0], [97.3, 25.0], [97.4, 25.0], [97.5, 25.0], [97.6, 26.0], [97.7, 26.0], [97.8, 27.0], [97.9, 27.0], [98.0, 28.0], [98.1, 29.0], [98.2, 29.0], [98.3, 30.0], [98.4, 31.0], [98.5, 32.0], [98.6, 33.0], [98.7, 34.0], [98.8, 35.0], [98.9, 36.0], [99.0, 38.0], [99.1, 40.0], [99.2, 42.0], [99.3, 46.0], [99.4, 50.0], [99.5, 54.0], [99.6, 63.0], [99.7, 71.0], [99.8, 79.0], [99.9, 93.0]], "isOverall": false, "label": "GET thread name", "isController": false}, {"data": [[0.0, 4.0], [0.1, 5.0], [0.2, 6.0], [0.3, 6.0], [0.4, 7.0], [0.5, 7.0], [0.6, 7.0], [0.7, 7.0], [0.8, 7.0], [0.9, 8.0], [1.0, 8.0], [1.1, 8.0], [1.2, 8.0], [1.3, 8.0], [1.4, 8.0], [1.5, 8.0], [1.6, 8.0], [1.7, 9.0], [1.8, 9.0], [1.9, 9.0], [2.0, 9.0], [2.1, 9.0], [2.2, 9.0], [2.3, 9.0], [2.4, 9.0], [2.5, 9.0], [2.6, 9.0], [2.7, 10.0], [2.8, 10.0], [2.9, 10.0], [3.0, 10.0], [3.1, 10.0], [3.2, 10.0], [3.3, 10.0], [3.4, 10.0], [3.5, 10.0], [3.6, 10.0], [3.7, 10.0], [3.8, 11.0], [3.9, 11.0], [4.0, 11.0], [4.1, 11.0], [4.2, 11.0], [4.3, 11.0], [4.4, 11.0], [4.5, 11.0], [4.6, 11.0], [4.7, 11.0], [4.8, 12.0], [4.9, 12.0], [5.0, 12.0], [5.1, 12.0], [5.2, 12.0], [5.3, 12.0], [5.4, 12.0], [5.5, 12.0], [5.6, 12.0], [5.7, 12.0], [5.8, 13.0], [5.9, 13.0], [6.0, 13.0], [6.1, 13.0], [6.2, 13.0], [6.3, 13.0], [6.4, 13.0], [6.5, 13.0], [6.6, 13.0], [6.7, 14.0], [6.8, 14.0], [6.9, 14.0], [7.0, 14.0], [7.1, 14.0], [7.2, 14.0], [7.3, 14.0], [7.4, 14.0], [7.5, 14.0], [7.6, 15.0], [7.7, 15.0], [7.8, 15.0], [7.9, 15.0], [8.0, 15.0], [8.1, 15.0], [8.2, 15.0], [8.3, 16.0], [8.4, 16.0], [8.5, 16.0], [8.6, 16.0], [8.7, 16.0], [8.8, 16.0], [8.9, 17.0], [9.0, 17.0], [9.1, 17.0], [9.2, 17.0], [9.3, 17.0], [9.4, 18.0], [9.5, 18.0], [9.6, 18.0], [9.7, 18.0], [9.8, 18.0], [9.9, 19.0], [10.0, 19.0], [10.1, 19.0], [10.2, 19.0], [10.3, 20.0], [10.4, 20.0], [10.5, 20.0], [10.6, 20.0], [10.7, 21.0], [10.8, 21.0], [10.9, 21.0], [11.0, 21.0], [11.1, 22.0], [11.2, 22.0], [11.3, 22.0], [11.4, 22.0], [11.5, 22.0], [11.6, 23.0], [11.7, 23.0], [11.8, 23.0], [11.9, 23.0], [12.0, 23.0], [12.1, 23.0], [12.2, 24.0], [12.3, 24.0], [12.4, 24.0], [12.5, 24.0], [12.6, 24.0], [12.7, 25.0], [12.8, 25.0], [12.9, 25.0], [13.0, 25.0], [13.1, 25.0], [13.2, 26.0], [13.3, 26.0], [13.4, 26.0], [13.5, 26.0], [13.6, 26.0], [13.7, 26.0], [13.8, 27.0], [13.9, 27.0], [14.0, 27.0], [14.1, 27.0], [14.2, 27.0], [14.3, 28.0], [14.4, 28.0], [14.5, 28.0], [14.6, 28.0], [14.7, 28.0], [14.8, 29.0], [14.9, 29.0], [15.0, 29.0], [15.1, 29.0], [15.2, 29.0], [15.3, 29.0], [15.4, 30.0], [15.5, 30.0], [15.6, 30.0], [15.7, 30.0], [15.8, 30.0], [15.9, 31.0], [16.0, 31.0], [16.1, 31.0], [16.2, 31.0], [16.3, 32.0], [16.4, 32.0], [16.5, 32.0], [16.6, 32.0], [16.7, 32.0], [16.8, 32.0], [16.9, 33.0], [17.0, 33.0], [17.1, 33.0], [17.2, 33.0], [17.3, 33.0], [17.4, 33.0], [17.5, 34.0], [17.6, 34.0], [17.7, 34.0], [17.8, 34.0], [17.9, 35.0], [18.0, 35.0], [18.1, 35.0], [18.2, 35.0], [18.3, 35.0], [18.4, 36.0], [18.5, 36.0], [18.6, 36.0], [18.7, 36.0], [18.8, 37.0], [18.9, 37.0], [19.0, 37.0], [19.1, 37.0], [19.2, 38.0], [19.3, 38.0], [19.4, 38.0], [19.5, 38.0], [19.6, 38.0], [19.7, 39.0], [19.8, 39.0], [19.9, 39.0], [20.0, 39.0], [20.1, 39.0], [20.2, 40.0], [20.3, 40.0], [20.4, 40.0], [20.5, 40.0], [20.6, 40.0], [20.7, 41.0], [20.8, 41.0], [20.9, 41.0], [21.0, 41.0], [21.1, 42.0], [21.2, 42.0], [21.3, 42.0], [21.4, 43.0], [21.5, 43.0], [21.6, 43.0], [21.7, 43.0], [21.8, 44.0], [21.9, 44.0], [22.0, 44.0], [22.1, 44.0], [22.2, 45.0], [22.3, 45.0], [22.4, 45.0], [22.5, 45.0], [22.6, 46.0], [22.7, 46.0], [22.8, 46.0], [22.9, 46.0], [23.0, 47.0], [23.1, 47.0], [23.2, 47.0], [23.3, 47.0], [23.4, 48.0], [23.5, 48.0], [23.6, 48.0], [23.7, 48.0], [23.8, 49.0], [23.9, 49.0], [24.0, 49.0], [24.1, 50.0], [24.2, 50.0], [24.3, 50.0], [24.4, 51.0], [24.5, 51.0], [24.6, 51.0], [24.7, 52.0], [24.8, 52.0], [24.9, 52.0], [25.0, 52.0], [25.1, 53.0], [25.2, 53.0], [25.3, 54.0], [25.4, 54.0], [25.5, 54.0], [25.6, 54.0], [25.7, 55.0], [25.8, 55.0], [25.9, 55.0], [26.0, 55.0], [26.1, 56.0], [26.2, 56.0], [26.3, 56.0], [26.4, 57.0], [26.5, 57.0], [26.6, 57.0], [26.7, 57.0], [26.8, 58.0], [26.9, 58.0], [27.0, 58.0], [27.1, 59.0], [27.2, 59.0], [27.3, 59.0], [27.4, 59.0], [27.5, 60.0], [27.6, 60.0], [27.7, 60.0], [27.8, 61.0], [27.9, 61.0], [28.0, 61.0], [28.1, 61.0], [28.2, 62.0], [28.3, 62.0], [28.4, 62.0], [28.5, 62.0], [28.6, 63.0], [28.7, 63.0], [28.8, 63.0], [28.9, 63.0], [29.0, 64.0], [29.1, 64.0], [29.2, 64.0], [29.3, 64.0], [29.4, 65.0], [29.5, 65.0], [29.6, 65.0], [29.7, 66.0], [29.8, 66.0], [29.9, 66.0], [30.0, 67.0], [30.1, 67.0], [30.2, 67.0], [30.3, 68.0], [30.4, 68.0], [30.5, 68.0], [30.6, 69.0], [30.7, 69.0], [30.8, 69.0], [30.9, 69.0], [31.0, 70.0], [31.1, 70.0], [31.2, 70.0], [31.3, 71.0], [31.4, 71.0], [31.5, 71.0], [31.6, 72.0], [31.7, 72.0], [31.8, 72.0], [31.9, 73.0], [32.0, 73.0], [32.1, 73.0], [32.2, 74.0], [32.3, 74.0], [32.4, 74.0], [32.5, 74.0], [32.6, 75.0], [32.7, 75.0], [32.8, 76.0], [32.9, 76.0], [33.0, 76.0], [33.1, 77.0], [33.2, 77.0], [33.3, 77.0], [33.4, 78.0], [33.5, 78.0], [33.6, 78.0], [33.7, 79.0], [33.8, 79.0], [33.9, 79.0], [34.0, 80.0], [34.1, 80.0], [34.2, 81.0], [34.3, 81.0], [34.4, 81.0], [34.5, 82.0], [34.6, 82.0], [34.7, 83.0], [34.8, 83.0], [34.9, 83.0], [35.0, 84.0], [35.1, 84.0], [35.2, 84.0], [35.3, 85.0], [35.4, 85.0], [35.5, 85.0], [35.6, 86.0], [35.7, 86.0], [35.8, 87.0], [35.9, 87.0], [36.0, 87.0], [36.1, 88.0], [36.2, 88.0], [36.3, 88.0], [36.4, 89.0], [36.5, 89.0], [36.6, 89.0], [36.7, 90.0], [36.8, 90.0], [36.9, 90.0], [37.0, 91.0], [37.1, 91.0], [37.2, 92.0], [37.3, 92.0], [37.4, 92.0], [37.5, 93.0], [37.6, 93.0], [37.7, 94.0], [37.8, 94.0], [37.9, 94.0], [38.0, 95.0], [38.1, 95.0], [38.2, 96.0], [38.3, 96.0], [38.4, 96.0], [38.5, 97.0], [38.6, 97.0], [38.7, 98.0], [38.8, 98.0], [38.9, 98.0], [39.0, 99.0], [39.1, 100.0], [39.2, 100.0], [39.3, 100.0], [39.4, 101.0], [39.5, 101.0], [39.6, 102.0], [39.7, 102.0], [39.8, 102.0], [39.9, 103.0], [40.0, 103.0], [40.1, 103.0], [40.2, 104.0], [40.3, 104.0], [40.4, 104.0], [40.5, 105.0], [40.6, 106.0], [40.7, 106.0], [40.8, 106.0], [40.9, 107.0], [41.0, 107.0], [41.1, 107.0], [41.2, 108.0], [41.3, 108.0], [41.4, 109.0], [41.5, 109.0], [41.6, 109.0], [41.7, 110.0], [41.8, 110.0], [41.9, 111.0], [42.0, 111.0], [42.1, 111.0], [42.2, 112.0], [42.3, 112.0], [42.4, 113.0], [42.5, 113.0], [42.6, 113.0], [42.7, 114.0], [42.8, 114.0], [42.9, 114.0], [43.0, 115.0], [43.1, 115.0], [43.2, 116.0], [43.3, 116.0], [43.4, 116.0], [43.5, 117.0], [43.6, 117.0], [43.7, 117.0], [43.8, 117.0], [43.9, 118.0], [44.0, 118.0], [44.1, 118.0], [44.2, 119.0], [44.3, 119.0], [44.4, 120.0], [44.5, 120.0], [44.6, 120.0], [44.7, 120.0], [44.8, 121.0], [44.9, 121.0], [45.0, 121.0], [45.1, 122.0], [45.2, 122.0], [45.3, 123.0], [45.4, 123.0], [45.5, 123.0], [45.6, 123.0], [45.7, 124.0], [45.8, 124.0], [45.9, 124.0], [46.0, 125.0], [46.1, 125.0], [46.2, 125.0], [46.3, 126.0], [46.4, 126.0], [46.5, 126.0], [46.6, 127.0], [46.7, 127.0], [46.8, 127.0], [46.9, 128.0], [47.0, 128.0], [47.1, 128.0], [47.2, 129.0], [47.3, 129.0], [47.4, 129.0], [47.5, 130.0], [47.6, 130.0], [47.7, 130.0], [47.8, 131.0], [47.9, 131.0], [48.0, 131.0], [48.1, 132.0], [48.2, 132.0], [48.3, 132.0], [48.4, 132.0], [48.5, 133.0], [48.6, 133.0], [48.7, 133.0], [48.8, 134.0], [48.9, 134.0], [49.0, 134.0], [49.1, 135.0], [49.2, 135.0], [49.3, 135.0], [49.4, 136.0], [49.5, 136.0], [49.6, 136.0], [49.7, 136.0], [49.8, 137.0], [49.9, 137.0], [50.0, 137.0], [50.1, 138.0], [50.2, 138.0], [50.3, 138.0], [50.4, 138.0], [50.5, 139.0], [50.6, 139.0], [50.7, 139.0], [50.8, 140.0], [50.9, 140.0], [51.0, 140.0], [51.1, 140.0], [51.2, 141.0], [51.3, 141.0], [51.4, 141.0], [51.5, 142.0], [51.6, 142.0], [51.7, 142.0], [51.8, 142.0], [51.9, 143.0], [52.0, 143.0], [52.1, 143.0], [52.2, 143.0], [52.3, 144.0], [52.4, 144.0], [52.5, 144.0], [52.6, 144.0], [52.7, 144.0], [52.8, 145.0], [52.9, 145.0], [53.0, 145.0], [53.1, 145.0], [53.2, 146.0], [53.3, 146.0], [53.4, 146.0], [53.5, 146.0], [53.6, 147.0], [53.7, 147.0], [53.8, 147.0], [53.9, 147.0], [54.0, 147.0], [54.1, 148.0], [54.2, 148.0], [54.3, 148.0], [54.4, 148.0], [54.5, 148.0], [54.6, 149.0], [54.7, 149.0], [54.8, 149.0], [54.9, 149.0], [55.0, 150.0], [55.1, 150.0], [55.2, 150.0], [55.3, 150.0], [55.4, 150.0], [55.5, 150.0], [55.6, 151.0], [55.7, 151.0], [55.8, 151.0], [55.9, 151.0], [56.0, 151.0], [56.1, 152.0], [56.2, 152.0], [56.3, 152.0], [56.4, 152.0], [56.5, 152.0], [56.6, 153.0], [56.7, 153.0], [56.8, 153.0], [56.9, 153.0], [57.0, 153.0], [57.1, 154.0], [57.2, 154.0], [57.3, 154.0], [57.4, 154.0], [57.5, 154.0], [57.6, 155.0], [57.7, 155.0], [57.8, 155.0], [57.9, 155.0], [58.0, 155.0], [58.1, 155.0], [58.2, 156.0], [58.3, 156.0], [58.4, 156.0], [58.5, 156.0], [58.6, 156.0], [58.7, 156.0], [58.8, 157.0], [58.9, 157.0], [59.0, 157.0], [59.1, 157.0], [59.2, 157.0], [59.3, 158.0], [59.4, 158.0], [59.5, 158.0], [59.6, 158.0], [59.7, 158.0], [59.8, 158.0], [59.9, 158.0], [60.0, 159.0], [60.1, 159.0], [60.2, 159.0], [60.3, 159.0], [60.4, 159.0], [60.5, 159.0], [60.6, 159.0], [60.7, 160.0], [60.8, 160.0], [60.9, 160.0], [61.0, 160.0], [61.1, 160.0], [61.2, 160.0], [61.3, 161.0], [61.4, 161.0], [61.5, 161.0], [61.6, 161.0], [61.7, 161.0], [61.8, 161.0], [61.9, 161.0], [62.0, 162.0], [62.1, 162.0], [62.2, 162.0], [62.3, 162.0], [62.4, 162.0], [62.5, 162.0], [62.6, 162.0], [62.7, 162.0], [62.8, 163.0], [62.9, 163.0], [63.0, 163.0], [63.1, 163.0], [63.2, 163.0], [63.3, 163.0], [63.4, 163.0], [63.5, 164.0], [63.6, 164.0], [63.7, 164.0], [63.8, 164.0], [63.9, 164.0], [64.0, 164.0], [64.1, 164.0], [64.2, 165.0], [64.3, 165.0], [64.4, 165.0], [64.5, 165.0], [64.6, 165.0], [64.7, 165.0], [64.8, 165.0], [64.9, 166.0], [65.0, 166.0], [65.1, 166.0], [65.2, 166.0], [65.3, 166.0], [65.4, 166.0], [65.5, 166.0], [65.6, 166.0], [65.7, 166.0], [65.8, 167.0], [65.9, 167.0], [66.0, 167.0], [66.1, 167.0], [66.2, 167.0], [66.3, 167.0], [66.4, 167.0], [66.5, 167.0], [66.6, 168.0], [66.7, 168.0], [66.8, 168.0], [66.9, 168.0], [67.0, 168.0], [67.1, 168.0], [67.2, 168.0], [67.3, 168.0], [67.4, 169.0], [67.5, 169.0], [67.6, 169.0], [67.7, 169.0], [67.8, 169.0], [67.9, 169.0], [68.0, 169.0], [68.1, 170.0], [68.2, 170.0], [68.3, 170.0], [68.4, 170.0], [68.5, 170.0], [68.6, 170.0], [68.7, 170.0], [68.8, 170.0], [68.9, 170.0], [69.0, 171.0], [69.1, 171.0], [69.2, 171.0], [69.3, 171.0], [69.4, 171.0], [69.5, 171.0], [69.6, 171.0], [69.7, 171.0], [69.8, 171.0], [69.9, 171.0], [70.0, 172.0], [70.1, 172.0], [70.2, 172.0], [70.3, 172.0], [70.4, 172.0], [70.5, 172.0], [70.6, 172.0], [70.7, 172.0], [70.8, 173.0], [70.9, 173.0], [71.0, 173.0], [71.1, 173.0], [71.2, 173.0], [71.3, 173.0], [71.4, 173.0], [71.5, 173.0], [71.6, 173.0], [71.7, 174.0], [71.8, 174.0], [71.9, 174.0], [72.0, 174.0], [72.1, 174.0], [72.2, 174.0], [72.3, 174.0], [72.4, 174.0], [72.5, 174.0], [72.6, 175.0], [72.7, 175.0], [72.8, 175.0], [72.9, 175.0], [73.0, 175.0], [73.1, 175.0], [73.2, 175.0], [73.3, 175.0], [73.4, 175.0], [73.5, 176.0], [73.6, 176.0], [73.7, 176.0], [73.8, 176.0], [73.9, 176.0], [74.0, 176.0], [74.1, 176.0], [74.2, 176.0], [74.3, 176.0], [74.4, 177.0], [74.5, 177.0], [74.6, 177.0], [74.7, 177.0], [74.8, 177.0], [74.9, 177.0], [75.0, 177.0], [75.1, 177.0], [75.2, 177.0], [75.3, 178.0], [75.4, 178.0], [75.5, 178.0], [75.6, 178.0], [75.7, 178.0], [75.8, 178.0], [75.9, 178.0], [76.0, 178.0], [76.1, 178.0], [76.2, 179.0], [76.3, 179.0], [76.4, 179.0], [76.5, 179.0], [76.6, 179.0], [76.7, 179.0], [76.8, 179.0], [76.9, 179.0], [77.0, 179.0], [77.1, 180.0], [77.2, 180.0], [77.3, 180.0], [77.4, 180.0], [77.5, 180.0], [77.6, 180.0], [77.7, 180.0], [77.8, 180.0], [77.9, 180.0], [78.0, 181.0], [78.1, 181.0], [78.2, 181.0], [78.3, 181.0], [78.4, 181.0], [78.5, 181.0], [78.6, 181.0], [78.7, 181.0], [78.8, 182.0], [78.9, 182.0], [79.0, 182.0], [79.1, 182.0], [79.2, 182.0], [79.3, 182.0], [79.4, 182.0], [79.5, 182.0], [79.6, 182.0], [79.7, 183.0], [79.8, 183.0], [79.9, 183.0], [80.0, 183.0], [80.1, 183.0], [80.2, 183.0], [80.3, 183.0], [80.4, 183.0], [80.5, 183.0], [80.6, 183.0], [80.7, 184.0], [80.8, 184.0], [80.9, 184.0], [81.0, 184.0], [81.1, 184.0], [81.2, 184.0], [81.3, 184.0], [81.4, 184.0], [81.5, 185.0], [81.6, 185.0], [81.7, 185.0], [81.8, 185.0], [81.9, 185.0], [82.0, 185.0], [82.1, 185.0], [82.2, 185.0], [82.3, 186.0], [82.4, 186.0], [82.5, 186.0], [82.6, 186.0], [82.7, 186.0], [82.8, 186.0], [82.9, 186.0], [83.0, 186.0], [83.1, 187.0], [83.2, 187.0], [83.3, 187.0], [83.4, 187.0], [83.5, 187.0], [83.6, 187.0], [83.7, 187.0], [83.8, 187.0], [83.9, 188.0], [84.0, 188.0], [84.1, 188.0], [84.2, 188.0], [84.3, 188.0], [84.4, 188.0], [84.5, 189.0], [84.6, 189.0], [84.7, 189.0], [84.8, 189.0], [84.9, 189.0], [85.0, 189.0], [85.1, 189.0], [85.2, 190.0], [85.3, 190.0], [85.4, 190.0], [85.5, 190.0], [85.6, 190.0], [85.7, 190.0], [85.8, 190.0], [85.9, 191.0], [86.0, 191.0], [86.1, 191.0], [86.2, 191.0], [86.3, 191.0], [86.4, 191.0], [86.5, 191.0], [86.6, 192.0], [86.7, 192.0], [86.8, 192.0], [86.9, 192.0], [87.0, 192.0], [87.1, 192.0], [87.2, 192.0], [87.3, 193.0], [87.4, 193.0], [87.5, 193.0], [87.6, 193.0], [87.7, 193.0], [87.8, 193.0], [87.9, 194.0], [88.0, 194.0], [88.1, 194.0], [88.2, 194.0], [88.3, 194.0], [88.4, 194.0], [88.5, 195.0], [88.6, 195.0], [88.7, 195.0], [88.8, 195.0], [88.9, 195.0], [89.0, 196.0], [89.1, 196.0], [89.2, 196.0], [89.3, 196.0], [89.4, 196.0], [89.5, 196.0], [89.6, 197.0], [89.7, 197.0], [89.8, 197.0], [89.9, 197.0], [90.0, 197.0], [90.1, 197.0], [90.2, 198.0], [90.3, 198.0], [90.4, 198.0], [90.5, 198.0], [90.6, 198.0], [90.7, 199.0], [90.8, 199.0], [90.9, 199.0], [91.0, 199.0], [91.1, 199.0], [91.2, 199.0], [91.3, 200.0], [91.4, 200.0], [91.5, 200.0], [91.6, 200.0], [91.7, 200.0], [91.8, 201.0], [91.9, 201.0], [92.0, 201.0], [92.1, 201.0], [92.2, 201.0], [92.3, 202.0], [92.4, 202.0], [92.5, 202.0], [92.6, 202.0], [92.7, 203.0], [92.8, 203.0], [92.9, 203.0], [93.0, 203.0], [93.1, 203.0], [93.2, 204.0], [93.3, 204.0], [93.4, 204.0], [93.5, 204.0], [93.6, 205.0], [93.7, 205.0], [93.8, 205.0], [93.9, 205.0], [94.0, 206.0], [94.1, 206.0], [94.2, 206.0], [94.3, 207.0], [94.4, 207.0], [94.5, 207.0], [94.6, 207.0], [94.7, 208.0], [94.8, 208.0], [94.9, 208.0], [95.0, 209.0], [95.1, 209.0], [95.2, 210.0], [95.3, 210.0], [95.4, 211.0], [95.5, 211.0], [95.6, 211.0], [95.7, 212.0], [95.8, 212.0], [95.9, 213.0], [96.0, 214.0], [96.1, 214.0], [96.2, 215.0], [96.3, 216.0], [96.4, 216.0], [96.5, 217.0], [96.6, 218.0], [96.7, 219.0], [96.8, 219.0], [96.9, 220.0], [97.0, 222.0], [97.1, 223.0], [97.2, 224.0], [97.3, 226.0], [97.4, 227.0], [97.5, 229.0], [97.6, 231.0], [97.7, 233.0], [97.8, 235.0], [97.9, 238.0], [98.0, 241.0], [98.1, 244.0], [98.2, 249.0], [98.3, 256.0], [98.4, 265.0], [98.5, 279.0], [98.6, 300.0], [98.7, 312.0], [98.8, 321.0], [98.9, 328.0], [99.0, 335.0], [99.1, 340.0], [99.2, 346.0], [99.3, 351.0], [99.4, 357.0], [99.5, 361.0], [99.6, 366.0], [99.7, 374.0], [99.8, 382.0], [99.9, 424.0]], "isOverall": false, "label": "GET employee by id", "isController": false}, {"data": [[0.0, 7.0], [0.1, 8.0], [0.2, 9.0], [0.3, 9.0], [0.4, 10.0], [0.5, 10.0], [0.6, 10.0], [0.7, 11.0], [0.8, 11.0], [0.9, 11.0], [1.0, 11.0], [1.1, 12.0], [1.2, 12.0], [1.3, 12.0], [1.4, 12.0], [1.5, 12.0], [1.6, 12.0], [1.7, 12.0], [1.8, 12.0], [1.9, 13.0], [2.0, 13.0], [2.1, 13.0], [2.2, 13.0], [2.3, 13.0], [2.4, 13.0], [2.5, 13.0], [2.6, 13.0], [2.7, 14.0], [2.8, 14.0], [2.9, 14.0], [3.0, 14.0], [3.1, 14.0], [3.2, 14.0], [3.3, 14.0], [3.4, 14.0], [3.5, 14.0], [3.6, 15.0], [3.7, 15.0], [3.8, 15.0], [3.9, 15.0], [4.0, 15.0], [4.1, 15.0], [4.2, 15.0], [4.3, 15.0], [4.4, 15.0], [4.5, 15.0], [4.6, 15.0], [4.7, 16.0], [4.8, 16.0], [4.9, 16.0], [5.0, 16.0], [5.1, 16.0], [5.2, 16.0], [5.3, 16.0], [5.4, 16.0], [5.5, 16.0], [5.6, 17.0], [5.7, 17.0], [5.8, 17.0], [5.9, 17.0], [6.0, 17.0], [6.1, 17.0], [6.2, 17.0], [6.3, 17.0], [6.4, 17.0], [6.5, 18.0], [6.6, 18.0], [6.7, 18.0], [6.8, 18.0], [6.9, 18.0], [7.0, 18.0], [7.1, 18.0], [7.2, 19.0], [7.3, 19.0], [7.4, 19.0], [7.5, 19.0], [7.6, 19.0], [7.7, 19.0], [7.8, 19.0], [7.9, 19.0], [8.0, 20.0], [8.1, 20.0], [8.2, 20.0], [8.3, 20.0], [8.4, 20.0], [8.5, 21.0], [8.6, 21.0], [8.7, 21.0], [8.8, 21.0], [8.9, 21.0], [9.0, 22.0], [9.1, 22.0], [9.2, 22.0], [9.3, 22.0], [9.4, 22.0], [9.5, 22.0], [9.6, 23.0], [9.7, 23.0], [9.8, 23.0], [9.9, 23.0], [10.0, 24.0], [10.1, 24.0], [10.2, 24.0], [10.3, 24.0], [10.4, 25.0], [10.5, 25.0], [10.6, 25.0], [10.7, 25.0], [10.8, 26.0], [10.9, 26.0], [11.0, 26.0], [11.1, 26.0], [11.2, 27.0], [11.3, 27.0], [11.4, 27.0], [11.5, 27.0], [11.6, 28.0], [11.7, 28.0], [11.8, 28.0], [11.9, 28.0], [12.0, 29.0], [12.1, 29.0], [12.2, 29.0], [12.3, 29.0], [12.4, 29.0], [12.5, 30.0], [12.6, 30.0], [12.7, 30.0], [12.8, 30.0], [12.9, 30.0], [13.0, 31.0], [13.1, 31.0], [13.2, 31.0], [13.3, 31.0], [13.4, 31.0], [13.5, 31.0], [13.6, 32.0], [13.7, 32.0], [13.8, 32.0], [13.9, 32.0], [14.0, 32.0], [14.1, 33.0], [14.2, 33.0], [14.3, 33.0], [14.4, 33.0], [14.5, 33.0], [14.6, 34.0], [14.7, 34.0], [14.8, 34.0], [14.9, 34.0], [15.0, 35.0], [15.1, 35.0], [15.2, 35.0], [15.3, 35.0], [15.4, 35.0], [15.5, 35.0], [15.6, 36.0], [15.7, 36.0], [15.8, 36.0], [15.9, 36.0], [16.0, 36.0], [16.1, 37.0], [16.2, 37.0], [16.3, 37.0], [16.4, 37.0], [16.5, 37.0], [16.6, 38.0], [16.7, 38.0], [16.8, 38.0], [16.9, 38.0], [17.0, 38.0], [17.1, 38.0], [17.2, 39.0], [17.3, 39.0], [17.4, 39.0], [17.5, 39.0], [17.6, 39.0], [17.7, 40.0], [17.8, 40.0], [17.9, 40.0], [18.0, 40.0], [18.1, 41.0], [18.2, 41.0], [18.3, 41.0], [18.4, 41.0], [18.5, 41.0], [18.6, 42.0], [18.7, 42.0], [18.8, 42.0], [18.9, 42.0], [19.0, 43.0], [19.1, 43.0], [19.2, 43.0], [19.3, 43.0], [19.4, 43.0], [19.5, 44.0], [19.6, 44.0], [19.7, 44.0], [19.8, 44.0], [19.9, 45.0], [20.0, 45.0], [20.1, 45.0], [20.2, 45.0], [20.3, 45.0], [20.4, 46.0], [20.5, 46.0], [20.6, 46.0], [20.7, 46.0], [20.8, 47.0], [20.9, 47.0], [21.0, 47.0], [21.1, 47.0], [21.2, 48.0], [21.3, 48.0], [21.4, 48.0], [21.5, 48.0], [21.6, 49.0], [21.7, 49.0], [21.8, 49.0], [21.9, 50.0], [22.0, 50.0], [22.1, 50.0], [22.2, 50.0], [22.3, 51.0], [22.4, 51.0], [22.5, 51.0], [22.6, 52.0], [22.7, 52.0], [22.8, 52.0], [22.9, 52.0], [23.0, 53.0], [23.1, 53.0], [23.2, 53.0], [23.3, 54.0], [23.4, 54.0], [23.5, 54.0], [23.6, 54.0], [23.7, 55.0], [23.8, 55.0], [23.9, 55.0], [24.0, 55.0], [24.1, 56.0], [24.2, 56.0], [24.3, 56.0], [24.4, 57.0], [24.5, 57.0], [24.6, 57.0], [24.7, 57.0], [24.8, 58.0], [24.9, 58.0], [25.0, 58.0], [25.1, 59.0], [25.2, 59.0], [25.3, 59.0], [25.4, 59.0], [25.5, 60.0], [25.6, 60.0], [25.7, 60.0], [25.8, 61.0], [25.9, 61.0], [26.0, 61.0], [26.1, 61.0], [26.2, 62.0], [26.3, 62.0], [26.4, 62.0], [26.5, 63.0], [26.6, 63.0], [26.7, 63.0], [26.8, 64.0], [26.9, 64.0], [27.0, 64.0], [27.1, 64.0], [27.2, 65.0], [27.3, 65.0], [27.4, 65.0], [27.5, 66.0], [27.6, 66.0], [27.7, 66.0], [27.8, 66.0], [27.9, 67.0], [28.0, 67.0], [28.1, 67.0], [28.2, 67.0], [28.3, 68.0], [28.4, 68.0], [28.5, 68.0], [28.6, 69.0], [28.7, 69.0], [28.8, 69.0], [28.9, 69.0], [29.0, 70.0], [29.1, 70.0], [29.2, 70.0], [29.3, 71.0], [29.4, 71.0], [29.5, 71.0], [29.6, 71.0], [29.7, 72.0], [29.8, 72.0], [29.9, 72.0], [30.0, 72.0], [30.1, 73.0], [30.2, 73.0], [30.3, 73.0], [30.4, 74.0], [30.5, 74.0], [30.6, 74.0], [30.7, 74.0], [30.8, 75.0], [30.9, 75.0], [31.0, 75.0], [31.1, 76.0], [31.2, 76.0], [31.3, 76.0], [31.4, 77.0], [31.5, 77.0], [31.6, 77.0], [31.7, 78.0], [31.8, 78.0], [31.9, 78.0], [32.0, 79.0], [32.1, 79.0], [32.2, 79.0], [32.3, 80.0], [32.4, 80.0], [32.5, 80.0], [32.6, 81.0], [32.7, 81.0], [32.8, 82.0], [32.9, 82.0], [33.0, 82.0], [33.1, 83.0], [33.2, 83.0], [33.3, 83.0], [33.4, 84.0], [33.5, 84.0], [33.6, 85.0], [33.7, 85.0], [33.8, 85.0], [33.9, 86.0], [34.0, 86.0], [34.1, 86.0], [34.2, 87.0], [34.3, 87.0], [34.4, 88.0], [34.5, 88.0], [34.6, 89.0], [34.7, 89.0], [34.8, 89.0], [34.9, 89.0], [35.0, 90.0], [35.1, 90.0], [35.2, 91.0], [35.3, 91.0], [35.4, 92.0], [35.5, 92.0], [35.6, 92.0], [35.7, 93.0], [35.8, 93.0], [35.9, 94.0], [36.0, 94.0], [36.1, 95.0], [36.2, 95.0], [36.3, 95.0], [36.4, 96.0], [36.5, 96.0], [36.6, 97.0], [36.7, 97.0], [36.8, 97.0], [36.9, 98.0], [37.0, 98.0], [37.1, 99.0], [37.2, 99.0], [37.3, 99.0], [37.4, 100.0], [37.5, 100.0], [37.6, 101.0], [37.7, 101.0], [37.8, 102.0], [37.9, 102.0], [38.0, 103.0], [38.1, 103.0], [38.2, 103.0], [38.3, 104.0], [38.4, 104.0], [38.5, 105.0], [38.6, 105.0], [38.7, 105.0], [38.8, 106.0], [38.9, 106.0], [39.0, 107.0], [39.1, 107.0], [39.2, 108.0], [39.3, 108.0], [39.4, 109.0], [39.5, 109.0], [39.6, 110.0], [39.7, 110.0], [39.8, 110.0], [39.9, 111.0], [40.0, 111.0], [40.1, 112.0], [40.2, 112.0], [40.3, 113.0], [40.4, 113.0], [40.5, 114.0], [40.6, 114.0], [40.7, 115.0], [40.8, 115.0], [40.9, 116.0], [41.0, 116.0], [41.1, 117.0], [41.2, 117.0], [41.3, 117.0], [41.4, 118.0], [41.5, 118.0], [41.6, 118.0], [41.7, 119.0], [41.8, 119.0], [41.9, 119.0], [42.0, 120.0], [42.1, 120.0], [42.2, 121.0], [42.3, 121.0], [42.4, 121.0], [42.5, 122.0], [42.6, 122.0], [42.7, 122.0], [42.8, 123.0], [42.9, 123.0], [43.0, 123.0], [43.1, 124.0], [43.2, 124.0], [43.3, 125.0], [43.4, 125.0], [43.5, 125.0], [43.6, 126.0], [43.7, 126.0], [43.8, 126.0], [43.9, 127.0], [44.0, 127.0], [44.1, 127.0], [44.2, 127.0], [44.3, 128.0], [44.4, 128.0], [44.5, 128.0], [44.6, 129.0], [44.7, 129.0], [44.8, 129.0], [44.9, 130.0], [45.0, 130.0], [45.1, 130.0], [45.2, 131.0], [45.3, 131.0], [45.4, 131.0], [45.5, 132.0], [45.6, 132.0], [45.7, 132.0], [45.8, 133.0], [45.9, 133.0], [46.0, 133.0], [46.1, 134.0], [46.2, 134.0], [46.3, 135.0], [46.4, 135.0], [46.5, 135.0], [46.6, 136.0], [46.7, 136.0], [46.8, 136.0], [46.9, 137.0], [47.0, 137.0], [47.1, 137.0], [47.2, 138.0], [47.3, 138.0], [47.4, 138.0], [47.5, 139.0], [47.6, 139.0], [47.7, 139.0], [47.8, 140.0], [47.9, 140.0], [48.0, 140.0], [48.1, 141.0], [48.2, 141.0], [48.3, 141.0], [48.4, 142.0], [48.5, 142.0], [48.6, 142.0], [48.7, 143.0], [48.8, 143.0], [48.9, 143.0], [49.0, 144.0], [49.1, 144.0], [49.2, 144.0], [49.3, 144.0], [49.4, 145.0], [49.5, 145.0], [49.6, 145.0], [49.7, 146.0], [49.8, 146.0], [49.9, 146.0], [50.0, 146.0], [50.1, 147.0], [50.2, 147.0], [50.3, 147.0], [50.4, 148.0], [50.5, 148.0], [50.6, 148.0], [50.7, 148.0], [50.8, 149.0], [50.9, 149.0], [51.0, 149.0], [51.1, 149.0], [51.2, 150.0], [51.3, 150.0], [51.4, 150.0], [51.5, 150.0], [51.6, 150.0], [51.7, 151.0], [51.8, 151.0], [51.9, 151.0], [52.0, 151.0], [52.1, 152.0], [52.2, 152.0], [52.3, 152.0], [52.4, 152.0], [52.5, 153.0], [52.6, 153.0], [52.7, 153.0], [52.8, 154.0], [52.9, 154.0], [53.0, 154.0], [53.1, 154.0], [53.2, 154.0], [53.3, 155.0], [53.4, 155.0], [53.5, 155.0], [53.6, 155.0], [53.7, 155.0], [53.8, 156.0], [53.9, 156.0], [54.0, 156.0], [54.1, 156.0], [54.2, 157.0], [54.3, 157.0], [54.4, 157.0], [54.5, 157.0], [54.6, 158.0], [54.7, 158.0], [54.8, 158.0], [54.9, 158.0], [55.0, 158.0], [55.1, 159.0], [55.2, 159.0], [55.3, 159.0], [55.4, 159.0], [55.5, 159.0], [55.6, 159.0], [55.7, 160.0], [55.8, 160.0], [55.9, 160.0], [56.0, 160.0], [56.1, 160.0], [56.2, 161.0], [56.3, 161.0], [56.4, 161.0], [56.5, 161.0], [56.6, 161.0], [56.7, 161.0], [56.8, 162.0], [56.9, 162.0], [57.0, 162.0], [57.1, 162.0], [57.2, 162.0], [57.3, 162.0], [57.4, 163.0], [57.5, 163.0], [57.6, 163.0], [57.7, 163.0], [57.8, 163.0], [57.9, 163.0], [58.0, 163.0], [58.1, 164.0], [58.2, 164.0], [58.3, 164.0], [58.4, 164.0], [58.5, 164.0], [58.6, 164.0], [58.7, 164.0], [58.8, 165.0], [58.9, 165.0], [59.0, 165.0], [59.1, 165.0], [59.2, 165.0], [59.3, 165.0], [59.4, 165.0], [59.5, 166.0], [59.6, 166.0], [59.7, 166.0], [59.8, 166.0], [59.9, 166.0], [60.0, 166.0], [60.1, 166.0], [60.2, 167.0], [60.3, 167.0], [60.4, 167.0], [60.5, 167.0], [60.6, 167.0], [60.7, 167.0], [60.8, 167.0], [60.9, 167.0], [61.0, 168.0], [61.1, 168.0], [61.2, 168.0], [61.3, 168.0], [61.4, 168.0], [61.5, 168.0], [61.6, 168.0], [61.7, 168.0], [61.8, 169.0], [61.9, 169.0], [62.0, 169.0], [62.1, 169.0], [62.2, 169.0], [62.3, 169.0], [62.4, 169.0], [62.5, 170.0], [62.6, 170.0], [62.7, 170.0], [62.8, 170.0], [62.9, 170.0], [63.0, 170.0], [63.1, 170.0], [63.2, 170.0], [63.3, 171.0], [63.4, 171.0], [63.5, 171.0], [63.6, 171.0], [63.7, 171.0], [63.8, 171.0], [63.9, 171.0], [64.0, 172.0], [64.1, 172.0], [64.2, 172.0], [64.3, 172.0], [64.4, 172.0], [64.5, 172.0], [64.6, 172.0], [64.7, 172.0], [64.8, 173.0], [64.9, 173.0], [65.0, 173.0], [65.1, 173.0], [65.2, 173.0], [65.3, 173.0], [65.4, 173.0], [65.5, 173.0], [65.6, 173.0], [65.7, 173.0], [65.8, 174.0], [65.9, 174.0], [66.0, 174.0], [66.1, 174.0], [66.2, 174.0], [66.3, 174.0], [66.4, 174.0], [66.5, 174.0], [66.6, 175.0], [66.7, 175.0], [66.8, 175.0], [66.9, 175.0], [67.0, 175.0], [67.1, 175.0], [67.2, 175.0], [67.3, 175.0], [67.4, 175.0], [67.5, 176.0], [67.6, 176.0], [67.7, 176.0], [67.8, 176.0], [67.9, 176.0], [68.0, 176.0], [68.1, 176.0], [68.2, 176.0], [68.3, 176.0], [68.4, 177.0], [68.5, 177.0], [68.6, 177.0], [68.7, 177.0], [68.8, 177.0], [68.9, 177.0], [69.0, 177.0], [69.1, 177.0], [69.2, 177.0], [69.3, 177.0], [69.4, 177.0], [69.5, 178.0], [69.6, 178.0], [69.7, 178.0], [69.8, 178.0], [69.9, 178.0], [70.0, 178.0], [70.1, 178.0], [70.2, 178.0], [70.3, 178.0], [70.4, 179.0], [70.5, 179.0], [70.6, 179.0], [70.7, 179.0], [70.8, 179.0], [70.9, 179.0], [71.0, 179.0], [71.1, 179.0], [71.2, 179.0], [71.3, 180.0], [71.4, 180.0], [71.5, 180.0], [71.6, 180.0], [71.7, 180.0], [71.8, 180.0], [71.9, 180.0], [72.0, 180.0], [72.1, 180.0], [72.2, 180.0], [72.3, 181.0], [72.4, 181.0], [72.5, 181.0], [72.6, 181.0], [72.7, 181.0], [72.8, 181.0], [72.9, 181.0], [73.0, 181.0], [73.1, 182.0], [73.2, 182.0], [73.3, 182.0], [73.4, 182.0], [73.5, 182.0], [73.6, 182.0], [73.7, 182.0], [73.8, 182.0], [73.9, 182.0], [74.0, 182.0], [74.1, 183.0], [74.2, 183.0], [74.3, 183.0], [74.4, 183.0], [74.5, 183.0], [74.6, 183.0], [74.7, 183.0], [74.8, 183.0], [74.9, 183.0], [75.0, 183.0], [75.1, 183.0], [75.2, 184.0], [75.3, 184.0], [75.4, 184.0], [75.5, 184.0], [75.6, 184.0], [75.7, 184.0], [75.8, 184.0], [75.9, 184.0], [76.0, 184.0], [76.1, 185.0], [76.2, 185.0], [76.3, 185.0], [76.4, 185.0], [76.5, 185.0], [76.6, 185.0], [76.7, 185.0], [76.8, 185.0], [76.9, 185.0], [77.0, 185.0], [77.1, 186.0], [77.2, 186.0], [77.3, 186.0], [77.4, 186.0], [77.5, 186.0], [77.6, 186.0], [77.7, 186.0], [77.8, 186.0], [77.9, 186.0], [78.0, 187.0], [78.1, 187.0], [78.2, 187.0], [78.3, 187.0], [78.4, 187.0], [78.5, 187.0], [78.6, 187.0], [78.7, 187.0], [78.8, 187.0], [78.9, 188.0], [79.0, 188.0], [79.1, 188.0], [79.2, 188.0], [79.3, 188.0], [79.4, 188.0], [79.5, 188.0], [79.6, 188.0], [79.7, 189.0], [79.8, 189.0], [79.9, 189.0], [80.0, 189.0], [80.1, 189.0], [80.2, 189.0], [80.3, 189.0], [80.4, 189.0], [80.5, 190.0], [80.6, 190.0], [80.7, 190.0], [80.8, 190.0], [80.9, 190.0], [81.0, 190.0], [81.1, 190.0], [81.2, 190.0], [81.3, 191.0], [81.4, 191.0], [81.5, 191.0], [81.6, 191.0], [81.7, 191.0], [81.8, 191.0], [81.9, 191.0], [82.0, 191.0], [82.1, 191.0], [82.2, 192.0], [82.3, 192.0], [82.4, 192.0], [82.5, 192.0], [82.6, 192.0], [82.7, 192.0], [82.8, 192.0], [82.9, 193.0], [83.0, 193.0], [83.1, 193.0], [83.2, 193.0], [83.3, 193.0], [83.4, 193.0], [83.5, 193.0], [83.6, 193.0], [83.7, 194.0], [83.8, 194.0], [83.9, 194.0], [84.0, 194.0], [84.1, 194.0], [84.2, 194.0], [84.3, 194.0], [84.4, 195.0], [84.5, 195.0], [84.6, 195.0], [84.7, 195.0], [84.8, 195.0], [84.9, 195.0], [85.0, 195.0], [85.1, 196.0], [85.2, 196.0], [85.3, 196.0], [85.4, 196.0], [85.5, 196.0], [85.6, 196.0], [85.7, 196.0], [85.8, 197.0], [85.9, 197.0], [86.0, 197.0], [86.1, 197.0], [86.2, 197.0], [86.3, 197.0], [86.4, 197.0], [86.5, 198.0], [86.6, 198.0], [86.7, 198.0], [86.8, 198.0], [86.9, 198.0], [87.0, 198.0], [87.1, 198.0], [87.2, 199.0], [87.3, 199.0], [87.4, 199.0], [87.5, 199.0], [87.6, 199.0], [87.7, 199.0], [87.8, 200.0], [87.9, 200.0], [88.0, 200.0], [88.1, 200.0], [88.2, 200.0], [88.3, 200.0], [88.4, 201.0], [88.5, 201.0], [88.6, 201.0], [88.7, 201.0], [88.8, 201.0], [88.9, 201.0], [89.0, 202.0], [89.1, 202.0], [89.2, 202.0], [89.3, 202.0], [89.4, 202.0], [89.5, 202.0], [89.6, 203.0], [89.7, 203.0], [89.8, 203.0], [89.9, 203.0], [90.0, 203.0], [90.1, 203.0], [90.2, 204.0], [90.3, 204.0], [90.4, 204.0], [90.5, 204.0], [90.6, 204.0], [90.7, 204.0], [90.8, 205.0], [90.9, 205.0], [91.0, 205.0], [91.1, 205.0], [91.2, 205.0], [91.3, 205.0], [91.4, 206.0], [91.5, 206.0], [91.6, 206.0], [91.7, 206.0], [91.8, 206.0], [91.9, 206.0], [92.0, 207.0], [92.1, 207.0], [92.2, 207.0], [92.3, 207.0], [92.4, 208.0], [92.5, 208.0], [92.6, 208.0], [92.7, 208.0], [92.8, 209.0], [92.9, 209.0], [93.0, 209.0], [93.1, 209.0], [93.2, 210.0], [93.3, 210.0], [93.4, 210.0], [93.5, 210.0], [93.6, 211.0], [93.7, 211.0], [93.8, 211.0], [93.9, 212.0], [94.0, 212.0], [94.1, 212.0], [94.2, 213.0], [94.3, 213.0], [94.4, 213.0], [94.5, 214.0], [94.6, 214.0], [94.7, 214.0], [94.8, 214.0], [94.9, 215.0], [95.0, 215.0], [95.1, 216.0], [95.2, 216.0], [95.3, 217.0], [95.4, 217.0], [95.5, 218.0], [95.6, 218.0], [95.7, 219.0], [95.8, 219.0], [95.9, 220.0], [96.0, 220.0], [96.1, 221.0], [96.2, 222.0], [96.3, 222.0], [96.4, 223.0], [96.5, 224.0], [96.6, 225.0], [96.7, 226.0], [96.8, 226.0], [96.9, 227.0], [97.0, 228.0], [97.1, 229.0], [97.2, 230.0], [97.3, 231.0], [97.4, 233.0], [97.5, 235.0], [97.6, 236.0], [97.7, 238.0], [97.8, 240.0], [97.9, 242.0], [98.0, 244.0], [98.1, 246.0], [98.2, 249.0], [98.3, 253.0], [98.4, 258.0], [98.5, 267.0], [98.6, 286.0], [98.7, 305.0], [98.8, 315.0], [98.9, 325.0], [99.0, 334.0], [99.1, 340.0], [99.2, 347.0], [99.3, 353.0], [99.4, 357.0], [99.5, 362.0], [99.6, 369.0], [99.7, 376.0], [99.8, 385.0], [99.9, 418.0]], "isOverall": false, "label": "POST employee", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 39963.0, "series": [{"data": [[0.0, 13811.0], [300.0, 444.0], [600.0, 3.0], [200.0, 11417.0], [100.0, 14201.0], [400.0, 107.0], [500.0, 17.0]], "isOverall": false, "label": "GET All employees", "isController": false}, {"data": [[0.0, 39963.0], [300.0, 9.0], [100.0, 9.0], [200.0, 18.0], [1000.0, 1.0]], "isOverall": false, "label": "GET thread name", "isController": false}, {"data": [[0.0, 15640.0], [300.0, 511.0], [600.0, 3.0], [200.0, 2946.0], [100.0, 20854.0], [400.0, 33.0], [500.0, 13.0]], "isOverall": false, "label": "GET employee by id", "isController": false}, {"data": [[0.0, 14921.0], [300.0, 479.0], [600.0, 1.0], [700.0, 1.0], [200.0, 4379.0], [100.0, 20164.0], [400.0, 40.0], [500.0, 15.0]], "isOverall": false, "label": "POST employee", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 1000.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 54.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 159946.0, "series": [{"data": [[0.0, 159946.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 54.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 1.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 83.99404278364496, "minX": 1.7347083E12, "maxY": 145.30317441445828, "series": [{"data": [[1.73470836E12, 145.30317441445828], [1.73470842E12, 86.48072479184172], [1.7347083E12, 83.99404278364496]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.73470842E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 6.333333333333333, "minX": 2.0, "maxY": 222.80350438047554, "series": [{"data": [[2.0, 28.0], [3.0, 31.999999999999996], [4.0, 32.0], [5.0, 98.5], [6.0, 36.666666666666664], [7.0, 18.439024390243905], [8.0, 16.311111111111117], [9.0, 12.82222222222222], [10.0, 15.323529411764707], [11.0, 22.166666666666664], [12.0, 12.313432835820901], [13.0, 11.212121212121211], [14.0, 14.797619047619047], [15.0, 14.085714285714284], [16.0, 16.020202020202017], [17.0, 18.733870967741932], [18.0, 14.518518518518515], [19.0, 19.020408163265305], [20.0, 20.17721518987342], [21.0, 16.203539823008846], [22.0, 14.234234234234233], [23.0, 22.467213114754095], [24.0, 27.771812080536918], [25.0, 13.91129032258064], [26.0, 24.704225352112676], [27.0, 26.262068965517237], [28.0, 15.596899224806204], [29.0, 19.234375000000007], [30.0, 28.926666666666655], [31.0, 17.52755905511811], [32.0, 20.469798657718123], [33.0, 26.61349693251534], [34.0, 38.78723404255319], [35.0, 25.658333333333335], [36.0, 27.422680412371143], [37.0, 50.62755102040816], [38.0, 38.495798319327726], [39.0, 28.57627118644068], [40.0, 42.649006622516545], [41.0, 32.619402985074636], [42.0, 29.37614678899083], [43.0, 32.93162393162394], [44.0, 41.492063492063494], [45.0, 62.85786802030456], [46.0, 48.929687500000014], [47.0, 35.225000000000016], [48.0, 59.82080924855493], [49.0, 49.92792792792791], [50.0, 59.627551020408156], [51.0, 59.64130434782609], [52.0, 37.803571428571416], [53.0, 34.837398373983724], [54.0, 47.657534246575345], [55.0, 49.70689655172417], [56.0, 59.63043478260872], [57.0, 35.93571428571429], [58.0, 57.945736434108525], [59.0, 48.71272727272727], [60.0, 61.54750402576487], [61.0, 45.2117962466488], [62.0, 45.82747603833865], [63.0, 76.02649006622515], [64.0, 60.39629629629629], [65.0, 79.7173913043478], [66.0, 63.34254143646408], [67.0, 53.59609120521175], [68.0, 66.20118343195267], [69.0, 107.36666666666663], [70.0, 91.58888888888887], [71.0, 82.21645021645023], [72.0, 77.28092783505156], [73.0, 67.80748663101602], [74.0, 96.71165644171776], [75.0, 110.3262032085561], [76.0, 81.93076923076922], [77.0, 92.92638036809815], [78.0, 78.93076923076922], [79.0, 79.72932330827065], [80.0, 84.84140969162998], [81.0, 144.72916666666663], [82.0, 115.29113924050633], [83.0, 110.37735849056601], [84.0, 83.38596491228071], [85.0, 127.79310344827587], [86.0, 142.75418994413403], [87.0, 87.92810457516335], [88.0, 108.75689223057644], [89.0, 119.54838709677419], [90.0, 85.84070796460178], [91.0, 101.41463414634148], [92.0, 138.70129870129878], [93.0, 136.60451977401132], [94.0, 141.53240740740745], [95.0, 141.50257731958752], [96.0, 130.99019607843135], [97.0, 107.35555555555557], [98.0, 175.2276657060519], [99.0, 131.32596685082868], [100.0, 109.78472222222223], [101.0, 108.28448275862067], [102.0, 98.99019607843138], [103.0, 163.508064516129], [104.0, 159.6529209621993], [105.0, 149.05314009661842], [106.0, 136.93103448275866], [107.0, 163.53333333333342], [108.0, 175.1781472684085], [109.0, 132.1134453781513], [110.0, 152.45061728395066], [111.0, 121.63636363636365], [112.0, 179.91644908616166], [113.0, 187.3636363636363], [114.0, 175.6036363636365], [115.0, 158.62745098039218], [116.0, 179.0188679245283], [117.0, 165.47619047619054], [118.0, 153.89189189189193], [119.0, 191.0147420147421], [120.0, 206.31360000000004], [121.0, 171.80508474576274], [122.0, 122.38571428571429], [123.0, 184.3930635838151], [124.0, 197.5827702702702], [125.0, 150.57920792079207], [126.0, 156.56521739130434], [127.0, 170.0416666666666], [128.0, 189.62074829931973], [129.0, 191.62727272727247], [130.0, 171.03070175438603], [131.0, 182.37158469945356], [132.0, 213.11818181818188], [133.0, 182.0933852140078], [134.0, 195.63069908814595], [135.0, 156.07821229050293], [136.0, 167.38659793814432], [137.0, 199.20212765957456], [138.0, 187.3273542600898], [139.0, 158.0285714285714], [140.0, 191.6627450980391], [141.0, 205.21428571428584], [142.0, 206.6189189189191], [143.0, 204.49794238683126], [144.0, 199.60788381742745], [145.0, 196.74860335195527], [146.0, 186.13513513513524], [147.0, 196.97652582159617], [148.0, 194.17781690140845], [149.0, 177.29104477611938], [150.0, 204.73446327683612], [151.0, 207.9426987061], [152.0, 188.5352112676056], [153.0, 199.75925925925918], [154.0, 190.8469945355192], [155.0, 202.08505747126432], [156.0, 204.77544426494345], [157.0, 205.32742316784856], [158.0, 222.80350438047554], [159.0, 201.55698005698008], [160.0, 193.2061403508773], [161.0, 204.09780439121772], [162.0, 198.23423423423424], [163.0, 200.89014821272903], [164.0, 196.67391304347834], [165.0, 189.72727272727266], [166.0, 191.45738295318114]], "isOverall": false, "label": "GET All employees", "isController": false}, {"data": [[106.9677749999998, 141.9710000000019]], "isOverall": false, "label": "GET All employees-Aggregated", "isController": false}, {"data": [[2.0, 88.0], [3.0, 48.25], [4.0, 103.0], [5.0, 14.5], [6.0, 31.88888888888889], [7.0, 6.3809523809523805], [8.0, 6.372093023255814], [9.0, 7.266666666666668], [10.0, 9.914285714285715], [11.0, 6.661538461538459], [12.0, 7.032786885245902], [13.0, 7.373333333333332], [14.0, 6.6000000000000005], [15.0, 9.362318840579713], [16.0, 7.490196078431372], [17.0, 6.939130434782606], [18.0, 6.552941176470591], [19.0, 13.34020618556701], [20.0, 12.426829268292684], [21.0, 8.8034188034188], [22.0, 9.25225225225225], [23.0, 9.97391304347826], [24.0, 8.169934640522877], [25.0, 8.934959349593493], [26.0, 9.799999999999997], [27.0, 9.116438356164377], [28.0, 9.546875], [29.0, 10.976562499999996], [30.0, 10.146853146853141], [31.0, 9.983999999999996], [32.0, 9.654088050314465], [33.0, 11.024390243902433], [34.0, 13.19148936170213], [35.0, 13.573770491803277], [36.0, 13.92391304347826], [37.0, 8.492462311557793], [38.0, 10.896551724137932], [39.0, 13.435483870967749], [40.0, 7.693877551020406], [41.0, 12.852713178294572], [42.0, 10.434782608695652], [43.0, 10.92982456140351], [44.0, 9.030534351145043], [45.0, 8.860962566844918], [46.0, 11.646551724137932], [47.0, 8.91549295774648], [48.0, 14.637426900584805], [49.0, 9.513274336283185], [50.0, 9.652849740932643], [51.0, 10.733333333333327], [52.0, 11.791666666666668], [53.0, 12.017094017094019], [54.0, 14.731034482758627], [55.0, 10.35057471264368], [56.0, 9.042553191489363], [57.0, 11.248120300751884], [58.0, 16.876811594202895], [59.0, 11.32881355932204], [60.0, 10.444055944055943], [61.0, 13.072727272727272], [62.0, 10.854489164086683], [63.0, 10.37500000000001], [64.0, 10.048872180451134], [65.0, 9.584699453551911], [66.0, 13.210526315789478], [67.0, 10.782608695652169], [68.0, 8.006024096385538], [69.0, 12.030927835051552], [70.0, 11.050761421319795], [71.0, 11.636752136752127], [72.0, 14.99475065616799], [73.0, 8.204188481675393], [74.0, 8.564417177914109], [75.0, 7.7650273224043715], [76.0, 10.160305343511462], [77.0, 9.006060606060602], [78.0, 7.757812499999997], [79.0, 11.755813953488381], [80.0, 14.255319148936161], [81.0, 7.994065281899114], [82.0, 11.538961038961045], [83.0, 9.77018633540373], [84.0, 7.948275862068966], [85.0, 8.709956709956714], [86.0, 7.008379888268164], [87.0, 9.718120805369132], [88.0, 8.149253731343277], [89.0, 6.716981132075471], [90.0, 11.017857142857144], [91.0, 8.134615384615381], [92.0, 7.874999999999996], [93.0, 15.919075144508664], [94.0, 9.945701357466069], [95.0, 7.295336787564772], [96.0, 9.073170731707318], [97.0, 9.757142857142858], [98.0, 10.984709480122325], [99.0, 9.217158176943704], [100.0, 8.13013698630137], [101.0, 7.254237288135595], [102.0, 8.830000000000002], [103.0, 6.830039525691695], [104.0, 7.63986013986014], [105.0, 8.360189573459708], [106.0, 8.797665369649815], [107.0, 7.096989966555183], [108.0, 6.641509433962261], [109.0, 8.782978723404256], [110.0, 24.313253012048197], [111.0, 8.237704918032788], [112.0, 7.255936675461739], [113.0, 6.902116402116402], [114.0, 7.046931407942233], [115.0, 16.367741935483867], [116.0, 7.991228070175443], [117.0, 17.2111111111111], [118.0, 7.131034482758621], [119.0, 8.350383631713543], [120.0, 7.998442367601248], [121.0, 7.655319148936169], [122.0, 7.964539007092197], [123.0, 6.548850574712645], [124.0, 6.780775716694774], [125.0, 7.371859296482413], [126.0, 7.741379310344828], [127.0, 6.8461538461538485], [128.0, 6.935042735042744], [129.0, 6.791479820627808], [130.0, 10.331896551724142], [131.0, 11.555555555555557], [132.0, 7.883720930232549], [133.0, 6.597609561752985], [134.0, 7.519578313253008], [135.0, 7.204678362573098], [136.0, 7.176767676767676], [137.0, 7.745672436750999], [138.0, 13.497737556561097], [139.0, 6.990654205607477], [140.0, 7.586872586872587], [141.0, 8.329317269076295], [142.0, 14.357894736842123], [143.0, 6.896879240162825], [144.0, 8.240083507306888], [145.0, 7.324929971988796], [146.0, 7.328828828828827], [147.0, 7.399688958009335], [148.0, 7.5911504424778755], [149.0, 6.844444444444442], [150.0, 6.809116809116812], [151.0, 7.080882352941175], [152.0, 7.40845070422535], [153.0, 7.342592592592588], [154.0, 7.392265193370168], [155.0, 8.540792540792541], [156.0, 10.02403846153846], [157.0, 8.74152046783625], [158.0, 8.431273644388401], [159.0, 6.875891583452213], [160.0, 7.448888888888888], [161.0, 8.226640159045735], [162.0, 9.306306306306304], [163.0, 7.80156657963447], [164.0, 7.266304347826089], [165.0, 6.540740740740742], [166.0, 9.06024096385542]], "isOverall": false, "label": "GET thread name", "isController": false}, {"data": [[106.98149999999988, 9.006175000000004]], "isOverall": false, "label": "GET thread name-Aggregated", "isController": false}, {"data": [[2.0, 7.75], [3.0, 6.333333333333333], [4.0, 62.75], [5.0, 10.2], [6.0, 93.77777777777777], [7.0, 10.21951219512195], [8.0, 10.799999999999999], [9.0, 13.78048780487805], [10.0, 17.90697674418605], [11.0, 12.142857142857146], [12.0, 11.55714285714286], [13.0, 11.985074626865673], [14.0, 10.753086419753092], [15.0, 14.40845070422535], [16.0, 10.683673469387756], [17.0, 11.01587301587302], [18.0, 12.637500000000001], [19.0, 18.9468085106383], [20.0, 14.365853658536583], [21.0, 12.46086956521739], [22.0, 12.257142857142858], [23.0, 12.583333333333336], [24.0, 16.000000000000004], [25.0, 12.386554621848736], [26.0, 17.211267605633793], [27.0, 17.262411347517723], [28.0, 13.448529411764703], [29.0, 16.140625], [30.0, 19.404109589041102], [31.0, 15.790697674418597], [32.0, 15.919463087248317], [33.0, 19.549382716049394], [34.0, 25.937062937062933], [35.0, 19.51694915254237], [36.0, 26.866666666666667], [37.0, 32.63684210526317], [38.0, 27.991935483870975], [39.0, 21.276785714285726], [40.0, 31.464968152866238], [41.0, 27.76666666666667], [42.0, 24.243243243243242], [43.0, 28.679389312977104], [44.0, 31.789062500000004], [45.0, 42.87692307692308], [46.0, 36.82539682539683], [47.0, 27.20689655172414], [48.0, 42.79310344827585], [49.0, 43.132743362831846], [50.0, 41.9387755102041], [51.0, 42.775280898876396], [52.0, 32.51304347826087], [53.0, 32.42187499999999], [54.0, 36.931034482758626], [55.0, 37.229411764705894], [56.0, 47.061452513966486], [57.0, 28.549295774647884], [58.0, 44.46341463414634], [59.0, 41.52884615384618], [60.0, 49.15488215488215], [61.0, 37.27586206896552], [62.0, 35.98742138364781], [63.0, 54.70358306188925], [64.0, 47.17529880478087], [65.0, 60.25906735751295], [66.0, 50.869318181818194], [67.0, 44.145510835913306], [68.0, 56.433734939759056], [69.0, 84.52331606217614], [70.0, 68.60846560846562], [71.0, 62.78991596638659], [72.0, 63.03183023872678], [73.0, 59.91111111111114], [74.0, 74.02808988764052], [75.0, 85.00000000000003], [76.0, 71.93793103448273], [77.0, 72.14723926380366], [78.0, 64.73188405797102], [79.0, 66.16942148760327], [80.0, 65.06060606060605], [81.0, 105.27027027027027], [82.0, 91.12500000000004], [83.0, 93.50632911392404], [84.0, 59.25233644859816], [85.0, 101.8796680497925], [86.0, 110.6350574712644], [87.0, 76.95882352941179], [88.0, 89.60668380462722], [89.0, 94.27702702702706], [90.0, 83.42975206611573], [91.0, 85.10365853658531], [92.0, 107.11458333333331], [93.0, 109.83333333333336], [94.0, 108.2376237623763], [95.0, 110.98663101604278], [96.0, 115.71365638766517], [97.0, 99.76973684210529], [98.0, 141.86996904024772], [99.0, 108.19466666666662], [100.0, 85.92198581560285], [101.0, 95.65789473684212], [102.0, 90.01801801801801], [103.0, 127.83730158730155], [104.0, 130.26870748299322], [105.0, 116.3696682464455], [106.0, 114.48230088495576], [107.0, 132.17475728155338], [108.0, 144.63317757009358], [109.0, 113.8734693877551], [110.0, 132.66666666666666], [111.0, 104.82638888888887], [112.0, 142.83113456464392], [113.0, 150.20698924731184], [114.0, 153.07664233576634], [115.0, 124.70921985815605], [116.0, 141.2886597938143], [117.0, 147.47457627118652], [118.0, 135.48366013071902], [119.0, 155.50467289719634], [120.0, 172.17554858934176], [121.0, 153.17613636363635], [122.0, 105.45502645502638], [123.0, 161.93471810089014], [124.0, 171.66267123287668], [125.0, 139.32487309644662], [126.0, 147.50000000000003], [127.0, 141.22058823529412], [128.0, 165.78239202657824], [129.0, 162.32048192771086], [130.0, 148.29885057471273], [131.0, 160.8975903614457], [132.0, 191.71833648393192], [133.0, 160.0109489051096], [134.0, 173.23384615384617], [135.0, 136.83606557377047], [136.0, 151.98963730569966], [137.0, 173.30849673202587], [138.0, 165.25980392156868], [139.0, 141.48571428571435], [140.0, 170.75757575757578], [141.0, 173.09652509652517], [142.0, 176.59782608695653], [143.0, 178.551388888889], [144.0, 172.8336633663366], [145.0, 175.8304093567252], [146.0, 161.7355371900826], [147.0, 175.93421052631595], [148.0, 169.82833333333332], [149.0, 167.73770491803288], [150.0, 174.48055555555567], [151.0, 185.99259259259287], [152.0, 179.12], [153.0, 178.89230769230767], [154.0, 170.2717391304348], [155.0, 174.30679156908673], [156.0, 181.03940886699516], [157.0, 181.60089186176137], [158.0, 197.26266666666655], [159.0, 173.82157676348544], [160.0, 177.4432989690722], [161.0, 182.73988439306368], [162.0, 181.00000000000003], [163.0, 180.41043478260863], [164.0, 176.27528089887653], [165.0, 178.41176470588232], [166.0, 177.00848484848473]], "isOverall": false, "label": "GET employee by id", "isController": false}, {"data": [[106.98092499999892, 121.23802499999991]], "isOverall": false, "label": "GET employee by id-Aggregated", "isController": false}, {"data": [[2.0, 8.25], [3.0, 9.666666666666666], [4.0, 172.0], [5.0, 57.50000000000001], [6.0, 77.0], [7.0, 13.625], [8.0, 15.531914893617017], [9.0, 17.93333333333334], [10.0, 16.696969696969695], [11.0, 16.225806451612904], [12.0, 16.62686567164179], [13.0, 16.632352941176467], [14.0, 16.414634146341463], [15.0, 18.59090909090909], [16.0, 15.428571428571429], [17.0, 14.762295081967213], [18.0, 15.695121951219507], [19.0, 17.189473684210526], [20.0, 29.8607594936709], [21.0, 19.881355932203384], [22.0, 16.41441441441441], [23.0, 18.41880341880342], [24.0, 19.32903225806451], [25.0, 15.984], [26.0, 20.829629629629633], [27.0, 20.832116788321166], [28.0, 17.180451127819545], [29.0, 19.690476190476186], [30.0, 22.980392156862738], [31.0, 19.364341085271313], [32.0, 19.3904109589041], [33.0, 21.81761006289309], [34.0, 27.007194244604314], [35.0, 23.884615384615376], [36.0, 25.144329896907212], [37.0, 37.497435897435906], [38.0, 32.20312500000001], [39.0, 24.470085470085472], [40.0, 35.91946308724831], [41.0, 28.685950413223143], [42.0, 29.787610619469024], [43.0, 34.34426229508197], [44.0, 37.2276422764228], [45.0, 48.311881188118825], [46.0, 40.786885245901644], [47.0, 29.984126984126988], [48.0, 47.56249999999999], [49.0, 47.126050420168106], [50.0, 47.93689320388351], [51.0, 52.67955801104971], [52.0, 37.40983606557378], [53.0, 35.63809523809523], [54.0, 42.59333333333333], [55.0, 41.68452380952381], [56.0, 49.054644808743156], [57.0, 33.91304347826089], [58.0, 51.94520547945205], [59.0, 43.27464788732395], [60.0, 55.1508474576271], [61.0, 42.70889487870617], [62.0, 42.375375375375356], [63.0, 61.76375404530747], [64.0, 55.11877394636012], [65.0, 64.20555555555552], [66.0, 58.89880952380953], [67.0, 47.115044247787615], [68.0, 57.49032258064515], [69.0, 87.2268041237113], [70.0, 72.37878787878786], [71.0, 71.09623430962344], [72.0, 68.47606382978724], [73.0, 67.31216931216933], [74.0, 82.36046511627903], [75.0, 87.73863636363633], [76.0, 77.21804511278195], [77.0, 78.6645569620253], [78.0, 70.62499999999999], [79.0, 71.98734177215191], [80.0, 75.19923371647509], [81.0, 120.50308641975313], [82.0, 104.48717948717947], [83.0, 98.59615384615383], [84.0, 73.93700787401575], [85.0, 109.72687224669606], [86.0, 120.15406976744184], [87.0, 83.43506493506491], [88.0, 93.47394540942923], [89.0, 102.51572327044023], [90.0, 82.12962962962962], [91.0, 90.75882352941184], [92.0, 117.79842931937176], [93.0, 124.48076923076925], [94.0, 114.29059829059828], [95.0, 117.4461942257218], [96.0, 113.88837209302324], [97.0, 99.76642335766427], [98.0, 146.67359050445097], [99.0, 112.19021739130433], [100.0, 98.13422818791949], [101.0, 103.5495495495496], [102.0, 88.90196078431372], [103.0, 139.59073359073352], [104.0, 141.59385665529012], [105.0, 131.1666666666666], [106.0, 127.97083333333337], [107.0, 140.74161073825505], [108.0, 150.87238979118325], [109.0, 115.74261603375524], [110.0, 132.60843373493972], [111.0, 110.3689320388349], [112.0, 150.54961832061062], [113.0, 162.4639175257732], [114.0, 157.3207547169812], [115.0, 134.5071428571428], [116.0, 153.45392491467578], [117.0, 139.68840579710135], [118.0, 147.014598540146], [119.0, 167.9757281553398], [120.0, 181.0155520995332], [121.0, 156.2365591397849], [122.0, 120.43575418994416], [123.0, 166.44508670520233], [124.0, 178.5234782608696], [125.0, 138.47826086956522], [126.0, 154.50413223140492], [127.0, 149.08843537414958], [128.0, 169.07614213197954], [129.0, 175.45476190476217], [130.0, 160.19685039370083], [131.0, 168.8579881656804], [132.0, 192.51282051282055], [133.0, 161.03614457831324], [134.0, 176.10218978102225], [135.0, 140.83006535947717], [136.0, 150.51243781094524], [137.0, 177.07301173402877], [138.0, 168.99074074074076], [139.0, 143.4555555555556], [140.0, 170.57677902621714], [141.0, 181.20158102766803], [142.0, 190.40401146131808], [143.0, 187.25771812080515], [144.0, 178.42460317460328], [145.0, 179.6175637393767], [146.0, 169.2115384615385], [147.0, 184.29641185647432], [148.0, 177.6164154103851], [149.0, 173.88799999999998], [150.0, 176.03790087463537], [151.0, 188.62056074766352], [152.0, 174.42857142857144], [153.0, 184.2620481927712], [154.0, 175.34444444444443], [155.0, 184.1166666666666], [156.0, 191.34533551554844], [157.0, 191.56614349775785], [158.0, 207.26712328767118], [159.0, 187.89021164021162], [160.0, 179.2989690721649], [161.0, 184.68893129770981], [162.0, 183.14893617021283], [163.0, 186.5559471365638], [164.0, 186.44021739130437], [165.0, 177.25757575757575], [166.0, 179.26296743063926]], "isOverall": false, "label": "POST employee", "isController": false}, {"data": [[106.98327499999992, 127.58870000000034]], "isOverall": false, "label": "POST employee-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 166.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 99094.55, "minX": 1.7347083E12, "maxY": 1523143.4333333333, "series": [{"data": [[1.73470836E12, 1221784.9333333333], [1.73470842E12, 568770.6], [1.7347083E12, 1523143.4333333333]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.73470836E12, 214062.23333333334], [1.73470842E12, 99094.55], [1.7347083E12, 268509.7166666667]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.73470842E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 7.4808346899511715, "minX": 1.7347083E12, "maxY": 207.92715680954905, "series": [{"data": [[1.73470836E12, 207.92715680954905], [1.73470842E12, 168.77160314227572], [1.7347083E12, 79.04613208573633]], "isOverall": false, "label": "GET All employees", "isController": false}, {"data": [[1.73470836E12, 7.586037966932008], [1.73470842E12, 7.4808346899511715], [1.7347083E12, 10.68731802005817]], "isOverall": false, "label": "GET thread name", "isController": false}, {"data": [[1.73470836E12, 181.95567171271486], [1.73470842E12, 127.90983606557427], [1.7347083E12, 70.25286109453795]], "isOverall": false, "label": "GET employee by id", "isController": false}, {"data": [[1.73470836E12, 188.78143488609282], [1.73470842E12, 137.3263235294121], [1.7347083E12, 75.35539334955394]], "isOverall": false, "label": "POST employee", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.73470842E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 7.478318780523902, "minX": 1.7347083E12, "maxY": 207.6177428106345, "series": [{"data": [[1.73470836E12, 207.6177428106345], [1.73470842E12, 168.47337794588304], [1.7347083E12, 78.5344358611688]], "isOverall": false, "label": "GET All employees", "isController": false}, {"data": [[1.73470836E12, 7.58372456964005], [1.73470842E12, 7.478318780523902], [1.7347083E12, 10.683058341421402]], "isOverall": false, "label": "GET thread name", "isController": false}, {"data": [[1.73470836E12, 181.819021111941], [1.73470842E12, 127.77678571428572], [1.7347083E12, 70.02831263220716]], "isOverall": false, "label": "GET employee by id", "isController": false}, {"data": [[1.73470836E12, 188.63944236654254], [1.73470842E12, 137.18470588235343], [1.7347083E12, 75.1378210327114]], "isOverall": false, "label": "POST employee", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.73470842E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.7347083E12, "maxY": 0.5390919874905601, "series": [{"data": [[1.73470836E12, 0.0], [1.73470842E12, 0.0], [1.7347083E12, 0.0]], "isOverall": false, "label": "GET All employees", "isController": false}, {"data": [[1.73470836E12, 0.2786282914880576], [1.73470842E12, 0.23486754476838842], [1.7347083E12, 0.5390919874905601]], "isOverall": false, "label": "GET thread name", "isController": false}, {"data": [[1.73470836E12, 0.0], [1.73470842E12, 0.0], [1.7347083E12, 0.0]], "isOverall": false, "label": "GET employee by id", "isController": false}, {"data": [[1.73470836E12, 0.0], [1.73470842E12, 0.0], [1.7347083E12, 0.0]], "isOverall": false, "label": "POST employee", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.73470842E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.7347083E12, "maxY": 1063.0, "series": [{"data": [[1.73470836E12, 722.0], [1.73470842E12, 583.0], [1.7347083E12, 1063.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.73470836E12, 1.0], [1.73470842E12, 1.0], [1.7347083E12, 2.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.73470836E12, 222.0], [1.73470842E12, 187.0], [1.7347083E12, 188.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.73470836E12, 363.9900000000016], [1.73470842E12, 260.9900000000016], [1.7347083E12, 286.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.73470836E12, 181.0], [1.73470842E12, 114.0], [1.7347083E12, 129.0]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.73470836E12, 237.0], [1.73470842E12, 204.0], [1.7347083E12, 206.0]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.73470842E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 9.0, "minX": 3.0, "maxY": 217.0, "series": [{"data": [[3.0, 198.0], [111.0, 9.0], [190.0, 12.0], [700.0, 13.0], [690.0, 174.0], [694.0, 132.0], [735.0, 121.5], [722.0, 141.0], [717.0, 124.0], [743.0, 80.0], [749.0, 202.0], [745.0, 152.0], [757.0, 150.0], [754.0, 128.0], [761.0, 89.0], [740.0, 89.0], [750.0, 59.0], [739.0, 45.0], [784.0, 205.0], [791.0, 176.0], [778.0, 157.0], [774.0, 148.0], [770.0, 140.0], [786.0, 115.0], [776.0, 107.0], [782.0, 96.0], [809.0, 180.0], [825.0, 182.0], [816.0, 160.0], [817.0, 160.0], [818.0, 161.0], [802.0, 132.0], [858.0, 184.0], [861.0, 194.0], [839.0, 185.0], [857.0, 177.0], [850.0, 168.0], [851.0, 164.0], [863.0, 166.0], [855.0, 156.0], [843.0, 163.0], [837.0, 165.0], [832.0, 154.0], [870.0, 184.0], [880.0, 178.0], [872.0, 178.0], [908.0, 217.0], [924.0, 191.0], [909.0, 184.0], [906.0, 179.5], [898.0, 173.0], [902.0, 174.0], [957.0, 179.0], [936.0, 182.0], [950.0, 177.5], [943.0, 180.0], [928.0, 183.5], [935.0, 177.0], [984.0, 184.0], [990.0, 194.0], [975.0, 183.0], [968.0, 185.0], [1017.0, 187.0], [997.0, 186.0], [1019.0, 184.0], [1023.0, 181.0], [999.0, 183.0], [1004.0, 179.0], [1016.0, 181.0], [1005.0, 181.0], [992.0, 171.0], [1032.0, 188.0], [1050.0, 152.0], [1086.0, 181.5], [1046.0, 190.0], [1069.0, 184.0], [1073.0, 181.0], [1040.0, 189.0], [1081.0, 176.0], [1065.0, 179.0], [1096.0, 15.0], [1133.0, 171.0], [1130.0, 180.5], [1123.0, 183.0], [1101.0, 187.0], [1091.0, 187.0], [1088.0, 179.0], [1090.0, 178.0], [1172.0, 162.0], [1187.0, 166.0], [1163.0, 172.0], [1185.0, 175.0], [1176.0, 178.0], [1173.0, 176.0], [1165.0, 166.0], [1266.0, 143.5], [1265.0, 146.0], [1219.0, 169.0], [1329.0, 102.0], [1339.0, 95.0], [1324.0, 111.0], [1302.0, 114.0], [1301.0, 119.0], [1316.0, 119.0], [1336.0, 121.0], [1288.0, 129.0], [1286.0, 131.0], [1393.0, 10.0], [1392.0, 92.0], [1467.0, 83.0], [1430.0, 89.0], [1520.0, 59.0], [1514.0, 70.0], [1496.0, 83.0], [1598.0, 12.0], [1566.0, 41.0], [1594.0, 56.0], [1542.0, 70.0], [1559.0, 74.0], [1627.0, 47.0], [1650.0, 61.0], [1606.0, 65.0], [1669.0, 55.0], [1749.0, 27.0], [1791.0, 24.0], [1765.0, 26.0], [1788.0, 38.0], [1756.0, 41.0], [1795.0, 29.0], [1892.0, 13.0], [1917.0, 38.0], [1976.0, 15.0], [1963.0, 15.0], [1961.0, 29.0], [1953.0, 32.0], [1951.0, 33.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1976.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 9.0, "minX": 3.0, "maxY": 217.0, "series": [{"data": [[3.0, 195.0], [111.0, 9.0], [190.0, 12.0], [700.0, 12.0], [690.0, 174.0], [694.0, 132.0], [735.0, 121.0], [722.0, 141.0], [717.0, 124.0], [743.0, 80.0], [749.0, 202.0], [745.0, 151.0], [757.0, 150.0], [754.0, 128.0], [761.0, 89.0], [740.0, 89.0], [750.0, 59.0], [739.0, 45.0], [784.0, 204.0], [791.0, 176.0], [778.0, 157.0], [774.0, 148.0], [770.0, 140.0], [786.0, 114.5], [776.0, 106.0], [782.0, 96.0], [809.0, 180.0], [825.0, 182.0], [816.0, 160.0], [817.0, 160.0], [818.0, 161.0], [802.0, 131.5], [858.0, 184.0], [861.0, 194.0], [839.0, 185.0], [857.0, 177.0], [850.0, 168.0], [851.0, 164.0], [863.0, 166.0], [855.0, 156.0], [843.0, 163.0], [837.0, 165.0], [832.0, 154.0], [870.0, 184.0], [880.0, 178.0], [872.0, 178.0], [908.0, 217.0], [924.0, 191.0], [909.0, 184.0], [906.0, 179.0], [898.0, 172.5], [902.0, 174.0], [957.0, 179.0], [936.0, 182.0], [950.0, 177.0], [943.0, 180.0], [928.0, 183.5], [935.0, 176.0], [984.0, 184.0], [990.0, 194.0], [975.0, 183.0], [968.0, 185.0], [1017.0, 186.0], [997.0, 186.0], [1019.0, 183.0], [1023.0, 181.0], [999.0, 183.0], [1004.0, 179.0], [1016.0, 181.0], [1005.0, 181.0], [992.0, 171.0], [1032.0, 187.0], [1050.0, 152.0], [1086.0, 181.0], [1046.0, 190.0], [1069.0, 183.0], [1073.0, 181.0], [1040.0, 189.0], [1081.0, 176.0], [1065.0, 179.0], [1096.0, 14.0], [1133.0, 171.0], [1130.0, 180.0], [1123.0, 183.0], [1101.0, 187.0], [1091.0, 187.0], [1088.0, 179.0], [1090.0, 178.0], [1172.0, 162.0], [1187.0, 166.0], [1163.0, 172.0], [1185.0, 175.0], [1176.0, 178.0], [1173.0, 176.0], [1165.0, 166.0], [1266.0, 143.0], [1265.0, 146.0], [1219.0, 169.0], [1329.0, 102.0], [1339.0, 95.0], [1324.0, 110.0], [1302.0, 114.0], [1301.0, 119.0], [1316.0, 119.0], [1336.0, 121.0], [1288.0, 128.0], [1286.0, 131.0], [1393.0, 10.0], [1392.0, 92.0], [1467.0, 82.0], [1430.0, 88.0], [1520.0, 58.0], [1514.0, 70.0], [1496.0, 83.0], [1598.0, 11.0], [1566.0, 40.0], [1594.0, 56.0], [1542.0, 70.0], [1559.0, 74.0], [1627.0, 47.0], [1650.0, 61.0], [1606.0, 65.0], [1669.0, 55.0], [1749.0, 26.0], [1791.0, 23.0], [1765.0, 26.0], [1788.0, 37.0], [1756.0, 41.0], [1795.0, 29.0], [1892.0, 13.0], [1917.0, 37.0], [1976.0, 14.0], [1963.0, 15.0], [1961.0, 28.0], [1953.0, 31.0], [1951.0, 33.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1976.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 452.4166666666667, "minX": 1.7347083E12, "maxY": 1233.7666666666667, "series": [{"data": [[1.73470836E12, 980.4833333333333], [1.73470842E12, 452.4166666666667], [1.7347083E12, 1233.7666666666667]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.73470842E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 454.3833333333333, "minX": 1.7347083E12, "maxY": 1231.0, "series": [{"data": [[1.73470836E12, 981.2833333333333], [1.73470842E12, 454.3833333333333], [1.7347083E12, 1231.0]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.73470842E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 112.61666666666666, "minX": 1.7347083E12, "maxY": 309.1, "series": [{"data": [[1.73470836E12, 244.95], [1.73470842E12, 112.61666666666666], [1.7347083E12, 309.1]], "isOverall": false, "label": "GET thread name-success", "isController": false}, {"data": [[1.73470836E12, 245.73333333333332], [1.73470842E12, 114.56666666666666], [1.7347083E12, 306.3666666666667]], "isOverall": false, "label": "GET All employees-success", "isController": false}, {"data": [[1.73470836E12, 245.08333333333334], [1.73470842E12, 113.33333333333333], [1.7347083E12, 308.25]], "isOverall": false, "label": "POST employee-success", "isController": false}, {"data": [[1.73470836E12, 245.51666666666668], [1.73470842E12, 113.86666666666666], [1.7347083E12, 307.28333333333336]], "isOverall": false, "label": "GET employee by id-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.73470842E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 454.3833333333333, "minX": 1.7347083E12, "maxY": 1231.0, "series": [{"data": [[1.73470836E12, 981.2833333333333], [1.73470842E12, 454.3833333333333], [1.7347083E12, 1231.0]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.73470842E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

