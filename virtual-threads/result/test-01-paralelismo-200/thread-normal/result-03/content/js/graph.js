/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 11232.0, "series": [{"data": [[0.0, 35.0], [0.1, 41.0], [0.2, 46.0], [0.3, 49.0], [0.4, 52.0], [0.5, 54.0], [0.6, 56.0], [0.7, 58.0], [0.8, 59.0], [0.9, 60.0], [1.0, 62.0], [1.1, 64.0], [1.2, 65.0], [1.3, 67.0], [1.4, 68.0], [1.5, 70.0], [1.6, 72.0], [1.7, 74.0], [1.8, 76.0], [1.9, 77.0], [2.0, 79.0], [2.1, 80.0], [2.2, 82.0], [2.3, 84.0], [2.4, 85.0], [2.5, 87.0], [2.6, 88.0], [2.7, 89.0], [2.8, 91.0], [2.9, 93.0], [3.0, 94.0], [3.1, 96.0], [3.2, 98.0], [3.3, 100.0], [3.4, 101.0], [3.5, 103.0], [3.6, 105.0], [3.7, 107.0], [3.8, 110.0], [3.9, 113.0], [4.0, 116.0], [4.1, 120.0], [4.2, 125.0], [4.3, 129.0], [4.4, 135.0], [4.5, 139.0], [4.6, 144.0], [4.7, 151.0], [4.8, 156.0], [4.9, 160.0], [5.0, 163.0], [5.1, 169.0], [5.2, 175.0], [5.3, 178.0], [5.4, 182.0], [5.5, 187.0], [5.6, 191.0], [5.7, 196.0], [5.8, 199.0], [5.9, 203.0], [6.0, 207.0], [6.1, 212.0], [6.2, 216.0], [6.3, 219.0], [6.4, 222.0], [6.5, 225.0], [6.6, 229.0], [6.7, 233.0], [6.8, 237.0], [6.9, 240.0], [7.0, 243.0], [7.1, 246.0], [7.2, 249.0], [7.3, 253.0], [7.4, 256.0], [7.5, 259.0], [7.6, 264.0], [7.7, 268.0], [7.8, 271.0], [7.9, 276.0], [8.0, 280.0], [8.1, 283.0], [8.2, 287.0], [8.3, 291.0], [8.4, 297.0], [8.5, 301.0], [8.6, 306.0], [8.7, 310.0], [8.8, 315.0], [8.9, 319.0], [9.0, 324.0], [9.1, 329.0], [9.2, 334.0], [9.3, 337.0], [9.4, 341.0], [9.5, 346.0], [9.6, 351.0], [9.7, 356.0], [9.8, 359.0], [9.9, 363.0], [10.0, 366.0], [10.1, 371.0], [10.2, 375.0], [10.3, 379.0], [10.4, 383.0], [10.5, 388.0], [10.6, 393.0], [10.7, 397.0], [10.8, 401.0], [10.9, 405.0], [11.0, 408.0], [11.1, 411.0], [11.2, 414.0], [11.3, 418.0], [11.4, 421.0], [11.5, 424.0], [11.6, 427.0], [11.7, 429.0], [11.8, 432.0], [11.9, 435.0], [12.0, 438.0], [12.1, 441.0], [12.2, 443.0], [12.3, 447.0], [12.4, 450.0], [12.5, 453.0], [12.6, 456.0], [12.7, 459.0], [12.8, 461.0], [12.9, 463.0], [13.0, 466.0], [13.1, 469.0], [13.2, 471.0], [13.3, 473.0], [13.4, 475.0], [13.5, 478.0], [13.6, 480.0], [13.7, 482.0], [13.8, 485.0], [13.9, 487.0], [14.0, 490.0], [14.1, 492.0], [14.2, 494.0], [14.3, 496.0], [14.4, 499.0], [14.5, 501.0], [14.6, 504.0], [14.7, 506.0], [14.8, 508.0], [14.9, 510.0], [15.0, 512.0], [15.1, 514.0], [15.2, 517.0], [15.3, 519.0], [15.4, 521.0], [15.5, 524.0], [15.6, 525.0], [15.7, 527.0], [15.8, 529.0], [15.9, 531.0], [16.0, 533.0], [16.1, 535.0], [16.2, 538.0], [16.3, 539.0], [16.4, 542.0], [16.5, 544.0], [16.6, 546.0], [16.7, 548.0], [16.8, 549.0], [16.9, 551.0], [17.0, 553.0], [17.1, 555.0], [17.2, 557.0], [17.3, 559.0], [17.4, 560.0], [17.5, 562.0], [17.6, 564.0], [17.7, 565.0], [17.8, 566.0], [17.9, 568.0], [18.0, 570.0], [18.1, 571.0], [18.2, 573.0], [18.3, 575.0], [18.4, 577.0], [18.5, 578.0], [18.6, 580.0], [18.7, 581.0], [18.8, 583.0], [18.9, 584.0], [19.0, 586.0], [19.1, 587.0], [19.2, 588.0], [19.3, 590.0], [19.4, 592.0], [19.5, 593.0], [19.6, 594.0], [19.7, 595.0], [19.8, 597.0], [19.9, 598.0], [20.0, 599.0], [20.1, 600.0], [20.2, 601.0], [20.3, 602.0], [20.4, 603.0], [20.5, 605.0], [20.6, 606.0], [20.7, 607.0], [20.8, 608.0], [20.9, 609.0], [21.0, 610.0], [21.1, 611.0], [21.2, 612.0], [21.3, 613.0], [21.4, 614.0], [21.5, 614.0], [21.6, 615.0], [21.7, 616.0], [21.8, 617.0], [21.9, 618.0], [22.0, 619.0], [22.1, 620.0], [22.2, 620.0], [22.3, 621.0], [22.4, 622.0], [22.5, 622.0], [22.6, 623.0], [22.7, 624.0], [22.8, 624.0], [22.9, 625.0], [23.0, 626.0], [23.1, 626.0], [23.2, 627.0], [23.3, 628.0], [23.4, 629.0], [23.5, 629.0], [23.6, 630.0], [23.7, 631.0], [23.8, 632.0], [23.9, 632.0], [24.0, 633.0], [24.1, 633.0], [24.2, 634.0], [24.3, 635.0], [24.4, 635.0], [24.5, 636.0], [24.6, 637.0], [24.7, 637.0], [24.8, 638.0], [24.9, 639.0], [25.0, 639.0], [25.1, 640.0], [25.2, 640.0], [25.3, 641.0], [25.4, 641.0], [25.5, 642.0], [25.6, 642.0], [25.7, 643.0], [25.8, 644.0], [25.9, 644.0], [26.0, 645.0], [26.1, 645.0], [26.2, 646.0], [26.3, 646.0], [26.4, 647.0], [26.5, 648.0], [26.6, 648.0], [26.7, 649.0], [26.8, 649.0], [26.9, 650.0], [27.0, 650.0], [27.1, 651.0], [27.2, 651.0], [27.3, 652.0], [27.4, 652.0], [27.5, 653.0], [27.6, 653.0], [27.7, 654.0], [27.8, 655.0], [27.9, 655.0], [28.0, 656.0], [28.1, 656.0], [28.2, 657.0], [28.3, 657.0], [28.4, 657.0], [28.5, 658.0], [28.6, 658.0], [28.7, 659.0], [28.8, 659.0], [28.9, 659.0], [29.0, 660.0], [29.1, 660.0], [29.2, 661.0], [29.3, 661.0], [29.4, 662.0], [29.5, 662.0], [29.6, 662.0], [29.7, 663.0], [29.8, 663.0], [29.9, 664.0], [30.0, 664.0], [30.1, 665.0], [30.2, 665.0], [30.3, 666.0], [30.4, 666.0], [30.5, 667.0], [30.6, 667.0], [30.7, 667.0], [30.8, 668.0], [30.9, 668.0], [31.0, 669.0], [31.1, 669.0], [31.2, 669.0], [31.3, 670.0], [31.4, 670.0], [31.5, 671.0], [31.6, 671.0], [31.7, 671.0], [31.8, 672.0], [31.9, 672.0], [32.0, 672.0], [32.1, 673.0], [32.2, 673.0], [32.3, 674.0], [32.4, 674.0], [32.5, 674.0], [32.6, 675.0], [32.7, 675.0], [32.8, 676.0], [32.9, 676.0], [33.0, 676.0], [33.1, 677.0], [33.2, 677.0], [33.3, 678.0], [33.4, 678.0], [33.5, 678.0], [33.6, 679.0], [33.7, 679.0], [33.8, 679.0], [33.9, 680.0], [34.0, 680.0], [34.1, 681.0], [34.2, 681.0], [34.3, 681.0], [34.4, 682.0], [34.5, 682.0], [34.6, 683.0], [34.7, 683.0], [34.8, 683.0], [34.9, 684.0], [35.0, 684.0], [35.1, 685.0], [35.2, 685.0], [35.3, 685.0], [35.4, 686.0], [35.5, 686.0], [35.6, 686.0], [35.7, 687.0], [35.8, 687.0], [35.9, 687.0], [36.0, 688.0], [36.1, 688.0], [36.2, 688.0], [36.3, 689.0], [36.4, 689.0], [36.5, 689.0], [36.6, 690.0], [36.7, 690.0], [36.8, 690.0], [36.9, 691.0], [37.0, 691.0], [37.1, 692.0], [37.2, 692.0], [37.3, 692.0], [37.4, 692.0], [37.5, 693.0], [37.6, 693.0], [37.7, 694.0], [37.8, 694.0], [37.9, 694.0], [38.0, 695.0], [38.1, 695.0], [38.2, 695.0], [38.3, 696.0], [38.4, 696.0], [38.5, 696.0], [38.6, 697.0], [38.7, 697.0], [38.8, 697.0], [38.9, 697.0], [39.0, 698.0], [39.1, 698.0], [39.2, 698.0], [39.3, 698.0], [39.4, 699.0], [39.5, 699.0], [39.6, 700.0], [39.7, 700.0], [39.8, 700.0], [39.9, 701.0], [40.0, 701.0], [40.1, 701.0], [40.2, 702.0], [40.3, 702.0], [40.4, 702.0], [40.5, 703.0], [40.6, 703.0], [40.7, 703.0], [40.8, 704.0], [40.9, 704.0], [41.0, 704.0], [41.1, 704.0], [41.2, 705.0], [41.3, 705.0], [41.4, 705.0], [41.5, 706.0], [41.6, 706.0], [41.7, 706.0], [41.8, 707.0], [41.9, 707.0], [42.0, 707.0], [42.1, 708.0], [42.2, 708.0], [42.3, 708.0], [42.4, 709.0], [42.5, 709.0], [42.6, 709.0], [42.7, 710.0], [42.8, 710.0], [42.9, 710.0], [43.0, 711.0], [43.1, 711.0], [43.2, 711.0], [43.3, 712.0], [43.4, 712.0], [43.5, 712.0], [43.6, 713.0], [43.7, 713.0], [43.8, 713.0], [43.9, 714.0], [44.0, 714.0], [44.1, 714.0], [44.2, 715.0], [44.3, 715.0], [44.4, 715.0], [44.5, 715.0], [44.6, 716.0], [44.7, 716.0], [44.8, 716.0], [44.9, 717.0], [45.0, 717.0], [45.1, 717.0], [45.2, 718.0], [45.3, 718.0], [45.4, 718.0], [45.5, 719.0], [45.6, 719.0], [45.7, 719.0], [45.8, 719.0], [45.9, 720.0], [46.0, 720.0], [46.1, 720.0], [46.2, 721.0], [46.3, 721.0], [46.4, 721.0], [46.5, 721.0], [46.6, 722.0], [46.7, 722.0], [46.8, 722.0], [46.9, 723.0], [47.0, 723.0], [47.1, 723.0], [47.2, 724.0], [47.3, 724.0], [47.4, 724.0], [47.5, 724.0], [47.6, 725.0], [47.7, 725.0], [47.8, 725.0], [47.9, 726.0], [48.0, 726.0], [48.1, 726.0], [48.2, 726.0], [48.3, 727.0], [48.4, 727.0], [48.5, 727.0], [48.6, 727.0], [48.7, 728.0], [48.8, 728.0], [48.9, 728.0], [49.0, 728.0], [49.1, 729.0], [49.2, 729.0], [49.3, 730.0], [49.4, 730.0], [49.5, 730.0], [49.6, 730.0], [49.7, 731.0], [49.8, 731.0], [49.9, 731.0], [50.0, 731.0], [50.1, 732.0], [50.2, 732.0], [50.3, 732.0], [50.4, 733.0], [50.5, 733.0], [50.6, 733.0], [50.7, 733.0], [50.8, 734.0], [50.9, 734.0], [51.0, 734.0], [51.1, 734.0], [51.2, 735.0], [51.3, 735.0], [51.4, 735.0], [51.5, 736.0], [51.6, 736.0], [51.7, 736.0], [51.8, 736.0], [51.9, 737.0], [52.0, 737.0], [52.1, 737.0], [52.2, 738.0], [52.3, 738.0], [52.4, 738.0], [52.5, 738.0], [52.6, 739.0], [52.7, 739.0], [52.8, 739.0], [52.9, 740.0], [53.0, 740.0], [53.1, 740.0], [53.2, 740.0], [53.3, 741.0], [53.4, 741.0], [53.5, 741.0], [53.6, 742.0], [53.7, 742.0], [53.8, 742.0], [53.9, 742.0], [54.0, 743.0], [54.1, 743.0], [54.2, 743.0], [54.3, 743.0], [54.4, 744.0], [54.5, 744.0], [54.6, 744.0], [54.7, 745.0], [54.8, 745.0], [54.9, 745.0], [55.0, 746.0], [55.1, 746.0], [55.2, 746.0], [55.3, 746.0], [55.4, 747.0], [55.5, 747.0], [55.6, 747.0], [55.7, 748.0], [55.8, 748.0], [55.9, 748.0], [56.0, 749.0], [56.1, 749.0], [56.2, 749.0], [56.3, 749.0], [56.4, 750.0], [56.5, 750.0], [56.6, 750.0], [56.7, 751.0], [56.8, 751.0], [56.9, 751.0], [57.0, 751.0], [57.1, 752.0], [57.2, 752.0], [57.3, 752.0], [57.4, 752.0], [57.5, 753.0], [57.6, 753.0], [57.7, 753.0], [57.8, 754.0], [57.9, 754.0], [58.0, 754.0], [58.1, 755.0], [58.2, 755.0], [58.3, 755.0], [58.4, 755.0], [58.5, 756.0], [58.6, 756.0], [58.7, 756.0], [58.8, 757.0], [58.9, 757.0], [59.0, 757.0], [59.1, 757.0], [59.2, 758.0], [59.3, 758.0], [59.4, 758.0], [59.5, 758.0], [59.6, 759.0], [59.7, 759.0], [59.8, 759.0], [59.9, 760.0], [60.0, 760.0], [60.1, 760.0], [60.2, 760.0], [60.3, 761.0], [60.4, 761.0], [60.5, 761.0], [60.6, 762.0], [60.7, 762.0], [60.8, 762.0], [60.9, 762.0], [61.0, 763.0], [61.1, 763.0], [61.2, 763.0], [61.3, 763.0], [61.4, 764.0], [61.5, 764.0], [61.6, 764.0], [61.7, 765.0], [61.8, 765.0], [61.9, 765.0], [62.0, 765.0], [62.1, 766.0], [62.2, 766.0], [62.3, 766.0], [62.4, 767.0], [62.5, 767.0], [62.6, 767.0], [62.7, 767.0], [62.8, 768.0], [62.9, 768.0], [63.0, 768.0], [63.1, 769.0], [63.2, 769.0], [63.3, 769.0], [63.4, 769.0], [63.5, 770.0], [63.6, 770.0], [63.7, 770.0], [63.8, 771.0], [63.9, 771.0], [64.0, 771.0], [64.1, 771.0], [64.2, 772.0], [64.3, 772.0], [64.4, 772.0], [64.5, 773.0], [64.6, 773.0], [64.7, 773.0], [64.8, 773.0], [64.9, 774.0], [65.0, 774.0], [65.1, 774.0], [65.2, 775.0], [65.3, 775.0], [65.4, 775.0], [65.5, 775.0], [65.6, 776.0], [65.7, 776.0], [65.8, 776.0], [65.9, 776.0], [66.0, 777.0], [66.1, 777.0], [66.2, 777.0], [66.3, 778.0], [66.4, 778.0], [66.5, 778.0], [66.6, 779.0], [66.7, 779.0], [66.8, 779.0], [66.9, 779.0], [67.0, 780.0], [67.1, 780.0], [67.2, 780.0], [67.3, 781.0], [67.4, 781.0], [67.5, 781.0], [67.6, 782.0], [67.7, 782.0], [67.8, 782.0], [67.9, 782.0], [68.0, 783.0], [68.1, 783.0], [68.2, 783.0], [68.3, 783.0], [68.4, 784.0], [68.5, 784.0], [68.6, 784.0], [68.7, 785.0], [68.8, 785.0], [68.9, 785.0], [69.0, 786.0], [69.1, 786.0], [69.2, 786.0], [69.3, 787.0], [69.4, 787.0], [69.5, 787.0], [69.6, 787.0], [69.7, 788.0], [69.8, 788.0], [69.9, 788.0], [70.0, 788.0], [70.1, 789.0], [70.2, 789.0], [70.3, 789.0], [70.4, 790.0], [70.5, 790.0], [70.6, 790.0], [70.7, 791.0], [70.8, 791.0], [70.9, 791.0], [71.0, 792.0], [71.1, 792.0], [71.2, 793.0], [71.3, 793.0], [71.4, 793.0], [71.5, 794.0], [71.6, 794.0], [71.7, 794.0], [71.8, 795.0], [71.9, 795.0], [72.0, 795.0], [72.1, 795.0], [72.2, 796.0], [72.3, 796.0], [72.4, 796.0], [72.5, 797.0], [72.6, 797.0], [72.7, 797.0], [72.8, 797.0], [72.9, 798.0], [73.0, 798.0], [73.1, 798.0], [73.2, 799.0], [73.3, 799.0], [73.4, 799.0], [73.5, 800.0], [73.6, 800.0], [73.7, 800.0], [73.8, 800.0], [73.9, 801.0], [74.0, 801.0], [74.1, 801.0], [74.2, 802.0], [74.3, 802.0], [74.4, 802.0], [74.5, 803.0], [74.6, 803.0], [74.7, 803.0], [74.8, 804.0], [74.9, 804.0], [75.0, 804.0], [75.1, 805.0], [75.2, 805.0], [75.3, 805.0], [75.4, 806.0], [75.5, 806.0], [75.6, 806.0], [75.7, 807.0], [75.8, 807.0], [75.9, 807.0], [76.0, 808.0], [76.1, 808.0], [76.2, 809.0], [76.3, 809.0], [76.4, 809.0], [76.5, 810.0], [76.6, 810.0], [76.7, 810.0], [76.8, 811.0], [76.9, 811.0], [77.0, 811.0], [77.1, 812.0], [77.2, 812.0], [77.3, 813.0], [77.4, 813.0], [77.5, 813.0], [77.6, 814.0], [77.7, 814.0], [77.8, 814.0], [77.9, 815.0], [78.0, 815.0], [78.1, 815.0], [78.2, 816.0], [78.3, 816.0], [78.4, 816.0], [78.5, 817.0], [78.6, 817.0], [78.7, 818.0], [78.8, 818.0], [78.9, 818.0], [79.0, 819.0], [79.1, 819.0], [79.2, 819.0], [79.3, 820.0], [79.4, 820.0], [79.5, 820.0], [79.6, 821.0], [79.7, 821.0], [79.8, 821.0], [79.9, 822.0], [80.0, 822.0], [80.1, 823.0], [80.2, 823.0], [80.3, 824.0], [80.4, 824.0], [80.5, 824.0], [80.6, 825.0], [80.7, 825.0], [80.8, 825.0], [80.9, 826.0], [81.0, 826.0], [81.1, 827.0], [81.2, 827.0], [81.3, 828.0], [81.4, 828.0], [81.5, 828.0], [81.6, 829.0], [81.7, 830.0], [81.8, 830.0], [81.9, 830.0], [82.0, 831.0], [82.1, 831.0], [82.2, 832.0], [82.3, 832.0], [82.4, 832.0], [82.5, 833.0], [82.6, 833.0], [82.7, 834.0], [82.8, 834.0], [82.9, 835.0], [83.0, 835.0], [83.1, 835.0], [83.2, 836.0], [83.3, 836.0], [83.4, 837.0], [83.5, 837.0], [83.6, 838.0], [83.7, 838.0], [83.8, 838.0], [83.9, 839.0], [84.0, 839.0], [84.1, 840.0], [84.2, 840.0], [84.3, 841.0], [84.4, 841.0], [84.5, 842.0], [84.6, 842.0], [84.7, 843.0], [84.8, 843.0], [84.9, 844.0], [85.0, 844.0], [85.1, 845.0], [85.2, 845.0], [85.3, 846.0], [85.4, 846.0], [85.5, 847.0], [85.6, 847.0], [85.7, 848.0], [85.8, 848.0], [85.9, 848.0], [86.0, 849.0], [86.1, 849.0], [86.2, 850.0], [86.3, 851.0], [86.4, 851.0], [86.5, 852.0], [86.6, 852.0], [86.7, 853.0], [86.8, 853.0], [86.9, 854.0], [87.0, 854.0], [87.1, 855.0], [87.2, 856.0], [87.3, 856.0], [87.4, 857.0], [87.5, 857.0], [87.6, 858.0], [87.7, 859.0], [87.8, 859.0], [87.9, 860.0], [88.0, 860.0], [88.1, 861.0], [88.2, 862.0], [88.3, 862.0], [88.4, 863.0], [88.5, 864.0], [88.6, 864.0], [88.7, 865.0], [88.8, 865.0], [88.9, 866.0], [89.0, 867.0], [89.1, 868.0], [89.2, 868.0], [89.3, 869.0], [89.4, 870.0], [89.5, 870.0], [89.6, 871.0], [89.7, 872.0], [89.8, 872.0], [89.9, 873.0], [90.0, 874.0], [90.1, 874.0], [90.2, 875.0], [90.3, 876.0], [90.4, 876.0], [90.5, 877.0], [90.6, 878.0], [90.7, 879.0], [90.8, 879.0], [90.9, 880.0], [91.0, 881.0], [91.1, 882.0], [91.2, 883.0], [91.3, 883.0], [91.4, 884.0], [91.5, 885.0], [91.6, 886.0], [91.7, 887.0], [91.8, 888.0], [91.9, 889.0], [92.0, 890.0], [92.1, 891.0], [92.2, 892.0], [92.3, 893.0], [92.4, 894.0], [92.5, 894.0], [92.6, 896.0], [92.7, 897.0], [92.8, 898.0], [92.9, 899.0], [93.0, 900.0], [93.1, 900.0], [93.2, 901.0], [93.3, 902.0], [93.4, 903.0], [93.5, 904.0], [93.6, 905.0], [93.7, 906.0], [93.8, 907.0], [93.9, 908.0], [94.0, 910.0], [94.1, 911.0], [94.2, 912.0], [94.3, 913.0], [94.4, 915.0], [94.5, 916.0], [94.6, 917.0], [94.7, 919.0], [94.8, 921.0], [94.9, 922.0], [95.0, 924.0], [95.1, 925.0], [95.2, 927.0], [95.3, 929.0], [95.4, 932.0], [95.5, 934.0], [95.6, 937.0], [95.7, 939.0], [95.8, 942.0], [95.9, 944.0], [96.0, 947.0], [96.1, 949.0], [96.2, 952.0], [96.3, 955.0], [96.4, 958.0], [96.5, 962.0], [96.6, 966.0], [96.7, 971.0], [96.8, 975.0], [96.9, 979.0], [97.0, 985.0], [97.1, 994.0], [97.2, 1003.0], [97.3, 1014.0], [97.4, 1028.0], [97.5, 1043.0], [97.6, 1068.0], [97.7, 1098.0], [97.8, 1130.0], [97.9, 1162.0], [98.0, 1184.0], [98.1, 1204.0], [98.2, 1224.0], [98.3, 1244.0], [98.4, 1268.0], [98.5, 1295.0], [98.6, 1317.0], [98.7, 1331.0], [98.8, 1348.0], [98.9, 1366.0], [99.0, 1383.0], [99.1, 1403.0], [99.2, 1424.0], [99.3, 1438.0], [99.4, 1455.0], [99.5, 1476.0], [99.6, 1509.0], [99.7, 1544.0], [99.8, 1604.0], [99.9, 1885.0]], "isOverall": false, "label": "GET All employees", "isController": false}, {"data": [[0.0, 1.0], [0.1, 1.0], [0.2, 2.0], [0.3, 2.0], [0.4, 2.0], [0.5, 2.0], [0.6, 2.0], [0.7, 2.0], [0.8, 2.0], [0.9, 2.0], [1.0, 2.0], [1.1, 2.0], [1.2, 2.0], [1.3, 2.0], [1.4, 2.0], [1.5, 2.0], [1.6, 2.0], [1.7, 2.0], [1.8, 2.0], [1.9, 2.0], [2.0, 2.0], [2.1, 2.0], [2.2, 2.0], [2.3, 2.0], [2.4, 2.0], [2.5, 2.0], [2.6, 2.0], [2.7, 2.0], [2.8, 2.0], [2.9, 2.0], [3.0, 2.0], [3.1, 2.0], [3.2, 2.0], [3.3, 2.0], [3.4, 2.0], [3.5, 2.0], [3.6, 2.0], [3.7, 2.0], [3.8, 2.0], [3.9, 2.0], [4.0, 2.0], [4.1, 2.0], [4.2, 2.0], [4.3, 2.0], [4.4, 2.0], [4.5, 2.0], [4.6, 2.0], [4.7, 2.0], [4.8, 2.0], [4.9, 2.0], [5.0, 2.0], [5.1, 2.0], [5.2, 2.0], [5.3, 2.0], [5.4, 2.0], [5.5, 2.0], [5.6, 2.0], [5.7, 2.0], [5.8, 2.0], [5.9, 2.0], [6.0, 2.0], [6.1, 2.0], [6.2, 2.0], [6.3, 2.0], [6.4, 2.0], [6.5, 2.0], [6.6, 2.0], [6.7, 2.0], [6.8, 2.0], [6.9, 2.0], [7.0, 2.0], [7.1, 2.0], [7.2, 2.0], [7.3, 2.0], [7.4, 2.0], [7.5, 2.0], [7.6, 2.0], [7.7, 3.0], [7.8, 3.0], [7.9, 3.0], [8.0, 3.0], [8.1, 3.0], [8.2, 3.0], [8.3, 3.0], [8.4, 3.0], [8.5, 3.0], [8.6, 3.0], [8.7, 3.0], [8.8, 3.0], [8.9, 3.0], [9.0, 3.0], [9.1, 3.0], [9.2, 3.0], [9.3, 3.0], [9.4, 3.0], [9.5, 3.0], [9.6, 3.0], [9.7, 3.0], [9.8, 3.0], [9.9, 3.0], [10.0, 3.0], [10.1, 3.0], [10.2, 3.0], [10.3, 3.0], [10.4, 3.0], [10.5, 3.0], [10.6, 3.0], [10.7, 3.0], [10.8, 3.0], [10.9, 3.0], [11.0, 3.0], [11.1, 3.0], [11.2, 3.0], [11.3, 3.0], [11.4, 3.0], [11.5, 3.0], [11.6, 3.0], [11.7, 3.0], [11.8, 3.0], [11.9, 3.0], [12.0, 3.0], [12.1, 3.0], [12.2, 3.0], [12.3, 3.0], [12.4, 3.0], [12.5, 3.0], [12.6, 3.0], [12.7, 3.0], [12.8, 3.0], [12.9, 3.0], [13.0, 3.0], [13.1, 3.0], [13.2, 3.0], [13.3, 3.0], [13.4, 3.0], [13.5, 3.0], [13.6, 3.0], [13.7, 3.0], [13.8, 3.0], [13.9, 3.0], [14.0, 3.0], [14.1, 3.0], [14.2, 3.0], [14.3, 3.0], [14.4, 3.0], [14.5, 3.0], [14.6, 3.0], [14.7, 3.0], [14.8, 3.0], [14.9, 3.0], [15.0, 3.0], [15.1, 3.0], [15.2, 3.0], [15.3, 3.0], [15.4, 3.0], [15.5, 3.0], [15.6, 3.0], [15.7, 3.0], [15.8, 3.0], [15.9, 3.0], [16.0, 3.0], [16.1, 3.0], [16.2, 3.0], [16.3, 3.0], [16.4, 3.0], [16.5, 3.0], [16.6, 3.0], [16.7, 3.0], [16.8, 3.0], [16.9, 3.0], [17.0, 3.0], [17.1, 3.0], [17.2, 3.0], [17.3, 3.0], [17.4, 3.0], [17.5, 3.0], [17.6, 3.0], [17.7, 3.0], [17.8, 3.0], [17.9, 3.0], [18.0, 3.0], [18.1, 3.0], [18.2, 3.0], [18.3, 3.0], [18.4, 3.0], [18.5, 3.0], [18.6, 3.0], [18.7, 3.0], [18.8, 3.0], [18.9, 3.0], [19.0, 3.0], [19.1, 3.0], [19.2, 3.0], [19.3, 3.0], [19.4, 3.0], [19.5, 3.0], [19.6, 3.0], [19.7, 3.0], [19.8, 3.0], [19.9, 3.0], [20.0, 3.0], [20.1, 3.0], [20.2, 3.0], [20.3, 3.0], [20.4, 3.0], [20.5, 3.0], [20.6, 3.0], [20.7, 3.0], [20.8, 3.0], [20.9, 3.0], [21.0, 3.0], [21.1, 3.0], [21.2, 3.0], [21.3, 3.0], [21.4, 3.0], [21.5, 3.0], [21.6, 3.0], [21.7, 3.0], [21.8, 3.0], [21.9, 3.0], [22.0, 3.0], [22.1, 3.0], [22.2, 3.0], [22.3, 3.0], [22.4, 3.0], [22.5, 3.0], [22.6, 3.0], [22.7, 3.0], [22.8, 3.0], [22.9, 3.0], [23.0, 3.0], [23.1, 3.0], [23.2, 3.0], [23.3, 3.0], [23.4, 3.0], [23.5, 3.0], [23.6, 3.0], [23.7, 3.0], [23.8, 3.0], [23.9, 3.0], [24.0, 3.0], [24.1, 3.0], [24.2, 3.0], [24.3, 3.0], [24.4, 3.0], [24.5, 3.0], [24.6, 3.0], [24.7, 3.0], [24.8, 3.0], [24.9, 4.0], [25.0, 4.0], [25.1, 4.0], [25.2, 4.0], [25.3, 4.0], [25.4, 4.0], [25.5, 4.0], [25.6, 4.0], [25.7, 4.0], [25.8, 4.0], [25.9, 4.0], [26.0, 4.0], [26.1, 4.0], [26.2, 4.0], [26.3, 4.0], [26.4, 4.0], [26.5, 4.0], [26.6, 4.0], [26.7, 4.0], [26.8, 4.0], [26.9, 4.0], [27.0, 4.0], [27.1, 4.0], [27.2, 4.0], [27.3, 4.0], [27.4, 4.0], [27.5, 4.0], [27.6, 4.0], [27.7, 4.0], [27.8, 4.0], [27.9, 4.0], [28.0, 4.0], [28.1, 4.0], [28.2, 4.0], [28.3, 4.0], [28.4, 4.0], [28.5, 4.0], [28.6, 4.0], [28.7, 4.0], [28.8, 4.0], [28.9, 4.0], [29.0, 4.0], [29.1, 4.0], [29.2, 4.0], [29.3, 4.0], [29.4, 4.0], [29.5, 4.0], [29.6, 4.0], [29.7, 4.0], [29.8, 4.0], [29.9, 4.0], [30.0, 4.0], [30.1, 4.0], [30.2, 4.0], [30.3, 4.0], [30.4, 4.0], [30.5, 4.0], [30.6, 4.0], [30.7, 4.0], [30.8, 4.0], [30.9, 4.0], [31.0, 4.0], [31.1, 4.0], [31.2, 4.0], [31.3, 4.0], [31.4, 4.0], [31.5, 4.0], [31.6, 4.0], [31.7, 4.0], [31.8, 4.0], [31.9, 4.0], [32.0, 4.0], [32.1, 4.0], [32.2, 4.0], [32.3, 4.0], [32.4, 4.0], [32.5, 4.0], [32.6, 4.0], [32.7, 4.0], [32.8, 4.0], [32.9, 4.0], [33.0, 4.0], [33.1, 4.0], [33.2, 4.0], [33.3, 4.0], [33.4, 4.0], [33.5, 4.0], [33.6, 4.0], [33.7, 4.0], [33.8, 4.0], [33.9, 4.0], [34.0, 4.0], [34.1, 4.0], [34.2, 4.0], [34.3, 4.0], [34.4, 4.0], [34.5, 4.0], [34.6, 4.0], [34.7, 4.0], [34.8, 4.0], [34.9, 4.0], [35.0, 4.0], [35.1, 4.0], [35.2, 4.0], [35.3, 4.0], [35.4, 4.0], [35.5, 4.0], [35.6, 4.0], [35.7, 4.0], [35.8, 4.0], [35.9, 4.0], [36.0, 4.0], [36.1, 4.0], [36.2, 4.0], [36.3, 4.0], [36.4, 4.0], [36.5, 4.0], [36.6, 4.0], [36.7, 4.0], [36.8, 4.0], [36.9, 4.0], [37.0, 4.0], [37.1, 4.0], [37.2, 4.0], [37.3, 4.0], [37.4, 4.0], [37.5, 4.0], [37.6, 4.0], [37.7, 4.0], [37.8, 4.0], [37.9, 4.0], [38.0, 4.0], [38.1, 4.0], [38.2, 4.0], [38.3, 4.0], [38.4, 4.0], [38.5, 4.0], [38.6, 4.0], [38.7, 4.0], [38.8, 4.0], [38.9, 4.0], [39.0, 4.0], [39.1, 4.0], [39.2, 4.0], [39.3, 4.0], [39.4, 4.0], [39.5, 4.0], [39.6, 5.0], [39.7, 5.0], [39.8, 5.0], [39.9, 5.0], [40.0, 5.0], [40.1, 5.0], [40.2, 5.0], [40.3, 5.0], [40.4, 5.0], [40.5, 5.0], [40.6, 5.0], [40.7, 5.0], [40.8, 5.0], [40.9, 5.0], [41.0, 5.0], [41.1, 5.0], [41.2, 5.0], [41.3, 5.0], [41.4, 5.0], [41.5, 5.0], [41.6, 5.0], [41.7, 5.0], [41.8, 5.0], [41.9, 5.0], [42.0, 5.0], [42.1, 5.0], [42.2, 5.0], [42.3, 5.0], [42.4, 5.0], [42.5, 5.0], [42.6, 5.0], [42.7, 5.0], [42.8, 5.0], [42.9, 5.0], [43.0, 5.0], [43.1, 5.0], [43.2, 5.0], [43.3, 5.0], [43.4, 5.0], [43.5, 5.0], [43.6, 5.0], [43.7, 5.0], [43.8, 5.0], [43.9, 5.0], [44.0, 5.0], [44.1, 5.0], [44.2, 5.0], [44.3, 5.0], [44.4, 5.0], [44.5, 5.0], [44.6, 5.0], [44.7, 5.0], [44.8, 5.0], [44.9, 5.0], [45.0, 5.0], [45.1, 5.0], [45.2, 5.0], [45.3, 5.0], [45.4, 5.0], [45.5, 5.0], [45.6, 5.0], [45.7, 5.0], [45.8, 5.0], [45.9, 5.0], [46.0, 5.0], [46.1, 5.0], [46.2, 5.0], [46.3, 5.0], [46.4, 5.0], [46.5, 5.0], [46.6, 5.0], [46.7, 5.0], [46.8, 5.0], [46.9, 5.0], [47.0, 5.0], [47.1, 5.0], [47.2, 5.0], [47.3, 5.0], [47.4, 5.0], [47.5, 5.0], [47.6, 5.0], [47.7, 5.0], [47.8, 5.0], [47.9, 5.0], [48.0, 5.0], [48.1, 5.0], [48.2, 5.0], [48.3, 5.0], [48.4, 5.0], [48.5, 5.0], [48.6, 5.0], [48.7, 5.0], [48.8, 5.0], [48.9, 5.0], [49.0, 5.0], [49.1, 5.0], [49.2, 5.0], [49.3, 5.0], [49.4, 5.0], [49.5, 5.0], [49.6, 5.0], [49.7, 5.0], [49.8, 5.0], [49.9, 5.0], [50.0, 5.0], [50.1, 5.0], [50.2, 5.0], [50.3, 5.0], [50.4, 5.0], [50.5, 5.0], [50.6, 5.0], [50.7, 5.0], [50.8, 5.0], [50.9, 5.0], [51.0, 5.0], [51.1, 5.0], [51.2, 6.0], [51.3, 6.0], [51.4, 6.0], [51.5, 6.0], [51.6, 6.0], [51.7, 6.0], [51.8, 6.0], [51.9, 6.0], [52.0, 6.0], [52.1, 6.0], [52.2, 6.0], [52.3, 6.0], [52.4, 6.0], [52.5, 6.0], [52.6, 6.0], [52.7, 6.0], [52.8, 6.0], [52.9, 6.0], [53.0, 6.0], [53.1, 6.0], [53.2, 6.0], [53.3, 6.0], [53.4, 6.0], [53.5, 6.0], [53.6, 6.0], [53.7, 6.0], [53.8, 6.0], [53.9, 6.0], [54.0, 6.0], [54.1, 6.0], [54.2, 6.0], [54.3, 6.0], [54.4, 6.0], [54.5, 6.0], [54.6, 6.0], [54.7, 6.0], [54.8, 6.0], [54.9, 6.0], [55.0, 6.0], [55.1, 6.0], [55.2, 6.0], [55.3, 6.0], [55.4, 6.0], [55.5, 6.0], [55.6, 6.0], [55.7, 6.0], [55.8, 6.0], [55.9, 6.0], [56.0, 6.0], [56.1, 6.0], [56.2, 6.0], [56.3, 6.0], [56.4, 6.0], [56.5, 6.0], [56.6, 6.0], [56.7, 6.0], [56.8, 6.0], [56.9, 6.0], [57.0, 6.0], [57.1, 6.0], [57.2, 6.0], [57.3, 6.0], [57.4, 6.0], [57.5, 6.0], [57.6, 6.0], [57.7, 6.0], [57.8, 6.0], [57.9, 6.0], [58.0, 6.0], [58.1, 6.0], [58.2, 6.0], [58.3, 6.0], [58.4, 6.0], [58.5, 6.0], [58.6, 6.0], [58.7, 6.0], [58.8, 6.0], [58.9, 6.0], [59.0, 6.0], [59.1, 6.0], [59.2, 6.0], [59.3, 6.0], [59.4, 6.0], [59.5, 6.0], [59.6, 6.0], [59.7, 6.0], [59.8, 6.0], [59.9, 6.0], [60.0, 6.0], [60.1, 6.0], [60.2, 6.0], [60.3, 6.0], [60.4, 7.0], [60.5, 7.0], [60.6, 7.0], [60.7, 7.0], [60.8, 7.0], [60.9, 7.0], [61.0, 7.0], [61.1, 7.0], [61.2, 7.0], [61.3, 7.0], [61.4, 7.0], [61.5, 7.0], [61.6, 7.0], [61.7, 7.0], [61.8, 7.0], [61.9, 7.0], [62.0, 7.0], [62.1, 7.0], [62.2, 7.0], [62.3, 7.0], [62.4, 7.0], [62.5, 7.0], [62.6, 7.0], [62.7, 7.0], [62.8, 7.0], [62.9, 7.0], [63.0, 7.0], [63.1, 7.0], [63.2, 7.0], [63.3, 7.0], [63.4, 7.0], [63.5, 7.0], [63.6, 7.0], [63.7, 7.0], [63.8, 7.0], [63.9, 7.0], [64.0, 7.0], [64.1, 7.0], [64.2, 7.0], [64.3, 7.0], [64.4, 7.0], [64.5, 7.0], [64.6, 7.0], [64.7, 7.0], [64.8, 7.0], [64.9, 7.0], [65.0, 7.0], [65.1, 7.0], [65.2, 7.0], [65.3, 7.0], [65.4, 7.0], [65.5, 7.0], [65.6, 7.0], [65.7, 7.0], [65.8, 7.0], [65.9, 7.0], [66.0, 7.0], [66.1, 7.0], [66.2, 7.0], [66.3, 7.0], [66.4, 7.0], [66.5, 7.0], [66.6, 7.0], [66.7, 7.0], [66.8, 7.0], [66.9, 7.0], [67.0, 7.0], [67.1, 7.0], [67.2, 7.0], [67.3, 7.0], [67.4, 7.0], [67.5, 7.0], [67.6, 7.0], [67.7, 7.0], [67.8, 7.0], [67.9, 7.0], [68.0, 7.0], [68.1, 8.0], [68.2, 8.0], [68.3, 8.0], [68.4, 8.0], [68.5, 8.0], [68.6, 8.0], [68.7, 8.0], [68.8, 8.0], [68.9, 8.0], [69.0, 8.0], [69.1, 8.0], [69.2, 8.0], [69.3, 8.0], [69.4, 8.0], [69.5, 8.0], [69.6, 8.0], [69.7, 8.0], [69.8, 8.0], [69.9, 8.0], [70.0, 8.0], [70.1, 8.0], [70.2, 8.0], [70.3, 8.0], [70.4, 8.0], [70.5, 8.0], [70.6, 8.0], [70.7, 8.0], [70.8, 8.0], [70.9, 8.0], [71.0, 8.0], [71.1, 8.0], [71.2, 8.0], [71.3, 8.0], [71.4, 8.0], [71.5, 8.0], [71.6, 8.0], [71.7, 8.0], [71.8, 8.0], [71.9, 8.0], [72.0, 8.0], [72.1, 8.0], [72.2, 8.0], [72.3, 8.0], [72.4, 8.0], [72.5, 8.0], [72.6, 8.0], [72.7, 8.0], [72.8, 8.0], [72.9, 8.0], [73.0, 8.0], [73.1, 8.0], [73.2, 8.0], [73.3, 8.0], [73.4, 8.0], [73.5, 8.0], [73.6, 8.0], [73.7, 8.0], [73.8, 8.0], [73.9, 8.0], [74.0, 8.0], [74.1, 8.0], [74.2, 8.0], [74.3, 8.0], [74.4, 8.0], [74.5, 9.0], [74.6, 9.0], [74.7, 9.0], [74.8, 9.0], [74.9, 9.0], [75.0, 9.0], [75.1, 9.0], [75.2, 9.0], [75.3, 9.0], [75.4, 9.0], [75.5, 9.0], [75.6, 9.0], [75.7, 9.0], [75.8, 9.0], [75.9, 9.0], [76.0, 9.0], [76.1, 9.0], [76.2, 9.0], [76.3, 9.0], [76.4, 9.0], [76.5, 9.0], [76.6, 9.0], [76.7, 9.0], [76.8, 9.0], [76.9, 9.0], [77.0, 9.0], [77.1, 9.0], [77.2, 9.0], [77.3, 9.0], [77.4, 9.0], [77.5, 9.0], [77.6, 9.0], [77.7, 9.0], [77.8, 9.0], [77.9, 9.0], [78.0, 9.0], [78.1, 9.0], [78.2, 9.0], [78.3, 9.0], [78.4, 9.0], [78.5, 9.0], [78.6, 9.0], [78.7, 9.0], [78.8, 9.0], [78.9, 9.0], [79.0, 9.0], [79.1, 9.0], [79.2, 9.0], [79.3, 9.0], [79.4, 9.0], [79.5, 9.0], [79.6, 9.0], [79.7, 9.0], [79.8, 10.0], [79.9, 10.0], [80.0, 10.0], [80.1, 10.0], [80.2, 10.0], [80.3, 10.0], [80.4, 10.0], [80.5, 10.0], [80.6, 10.0], [80.7, 10.0], [80.8, 10.0], [80.9, 10.0], [81.0, 10.0], [81.1, 10.0], [81.2, 10.0], [81.3, 10.0], [81.4, 10.0], [81.5, 10.0], [81.6, 10.0], [81.7, 10.0], [81.8, 10.0], [81.9, 10.0], [82.0, 10.0], [82.1, 10.0], [82.2, 10.0], [82.3, 10.0], [82.4, 10.0], [82.5, 10.0], [82.6, 10.0], [82.7, 10.0], [82.8, 10.0], [82.9, 10.0], [83.0, 10.0], [83.1, 10.0], [83.2, 10.0], [83.3, 10.0], [83.4, 10.0], [83.5, 11.0], [83.6, 11.0], [83.7, 11.0], [83.8, 11.0], [83.9, 11.0], [84.0, 11.0], [84.1, 11.0], [84.2, 11.0], [84.3, 11.0], [84.4, 11.0], [84.5, 11.0], [84.6, 11.0], [84.7, 11.0], [84.8, 11.0], [84.9, 11.0], [85.0, 11.0], [85.1, 11.0], [85.2, 11.0], [85.3, 11.0], [85.4, 11.0], [85.5, 11.0], [85.6, 11.0], [85.7, 11.0], [85.8, 11.0], [85.9, 11.0], [86.0, 11.0], [86.1, 11.0], [86.2, 11.0], [86.3, 12.0], [86.4, 12.0], [86.5, 12.0], [86.6, 12.0], [86.7, 12.0], [86.8, 12.0], [86.9, 12.0], [87.0, 12.0], [87.1, 12.0], [87.2, 12.0], [87.3, 12.0], [87.4, 12.0], [87.5, 12.0], [87.6, 12.0], [87.7, 12.0], [87.8, 12.0], [87.9, 12.0], [88.0, 12.0], [88.1, 12.0], [88.2, 12.0], [88.3, 13.0], [88.4, 13.0], [88.5, 13.0], [88.6, 13.0], [88.7, 13.0], [88.8, 13.0], [88.9, 13.0], [89.0, 13.0], [89.1, 13.0], [89.2, 13.0], [89.3, 13.0], [89.4, 13.0], [89.5, 13.0], [89.6, 13.0], [89.7, 13.0], [89.8, 13.0], [89.9, 14.0], [90.0, 14.0], [90.1, 14.0], [90.2, 14.0], [90.3, 14.0], [90.4, 14.0], [90.5, 14.0], [90.6, 14.0], [90.7, 14.0], [90.8, 14.0], [90.9, 14.0], [91.0, 14.0], [91.1, 14.0], [91.2, 14.0], [91.3, 15.0], [91.4, 15.0], [91.5, 15.0], [91.6, 15.0], [91.7, 15.0], [91.8, 15.0], [91.9, 15.0], [92.0, 15.0], [92.1, 15.0], [92.2, 16.0], [92.3, 16.0], [92.4, 16.0], [92.5, 16.0], [92.6, 16.0], [92.7, 16.0], [92.8, 16.0], [92.9, 17.0], [93.0, 17.0], [93.1, 17.0], [93.2, 17.0], [93.3, 17.0], [93.4, 17.0], [93.5, 18.0], [93.6, 18.0], [93.7, 18.0], [93.8, 18.0], [93.9, 18.0], [94.0, 19.0], [94.1, 19.0], [94.2, 19.0], [94.3, 19.0], [94.4, 20.0], [94.5, 20.0], [94.6, 20.0], [94.7, 21.0], [94.8, 21.0], [94.9, 21.0], [95.0, 22.0], [95.1, 22.0], [95.2, 22.0], [95.3, 23.0], [95.4, 23.0], [95.5, 24.0], [95.6, 24.0], [95.7, 24.0], [95.8, 25.0], [95.9, 26.0], [96.0, 26.0], [96.1, 27.0], [96.2, 27.0], [96.3, 28.0], [96.4, 28.0], [96.5, 29.0], [96.6, 29.0], [96.7, 30.0], [96.8, 31.0], [96.9, 31.0], [97.0, 32.0], [97.1, 33.0], [97.2, 34.0], [97.3, 35.0], [97.4, 36.0], [97.5, 37.0], [97.6, 38.0], [97.7, 39.0], [97.8, 40.0], [97.9, 41.0], [98.0, 43.0], [98.1, 44.0], [98.2, 46.0], [98.3, 48.0], [98.4, 49.0], [98.5, 51.0], [98.6, 53.0], [98.7, 56.0], [98.8, 59.0], [98.9, 61.0], [99.0, 64.0], [99.1, 68.0], [99.2, 74.0], [99.3, 80.0], [99.4, 87.0], [99.5, 103.0], [99.6, 138.0], [99.7, 169.0], [99.8, 258.0], [99.9, 448.0]], "isOverall": false, "label": "GET thread name", "isController": false}, {"data": [[0.0, 3.0], [0.1, 5.0], [0.2, 5.0], [0.3, 6.0], [0.4, 6.0], [0.5, 6.0], [0.6, 7.0], [0.7, 7.0], [0.8, 7.0], [0.9, 8.0], [1.0, 8.0], [1.1, 8.0], [1.2, 9.0], [1.3, 9.0], [1.4, 10.0], [1.5, 10.0], [1.6, 11.0], [1.7, 11.0], [1.8, 12.0], [1.9, 12.0], [2.0, 13.0], [2.1, 14.0], [2.2, 15.0], [2.3, 15.0], [2.4, 16.0], [2.5, 17.0], [2.6, 18.0], [2.7, 19.0], [2.8, 20.0], [2.9, 22.0], [3.0, 23.0], [3.1, 25.0], [3.2, 26.0], [3.3, 27.0], [3.4, 29.0], [3.5, 31.0], [3.6, 32.0], [3.7, 34.0], [3.8, 36.0], [3.9, 38.0], [4.0, 40.0], [4.1, 42.0], [4.2, 43.0], [4.3, 45.0], [4.4, 48.0], [4.5, 50.0], [4.6, 55.0], [4.7, 57.0], [4.8, 60.0], [4.9, 64.0], [5.0, 68.0], [5.1, 72.0], [5.2, 76.0], [5.3, 81.0], [5.4, 86.0], [5.5, 92.0], [5.6, 96.0], [5.7, 99.0], [5.8, 102.0], [5.9, 107.0], [6.0, 110.0], [6.1, 113.0], [6.2, 117.0], [6.3, 120.0], [6.4, 123.0], [6.5, 125.0], [6.6, 129.0], [6.7, 133.0], [6.8, 138.0], [6.9, 142.0], [7.0, 146.0], [7.1, 151.0], [7.2, 158.0], [7.3, 162.0], [7.4, 167.0], [7.5, 171.0], [7.6, 174.0], [7.7, 178.0], [7.8, 181.0], [7.9, 184.0], [8.0, 187.0], [8.1, 190.0], [8.2, 194.0], [8.3, 198.0], [8.4, 202.0], [8.5, 207.0], [8.6, 211.0], [8.7, 214.0], [8.8, 218.0], [8.9, 223.0], [9.0, 226.0], [9.1, 230.0], [9.2, 236.0], [9.3, 240.0], [9.4, 245.0], [9.5, 251.0], [9.6, 256.0], [9.7, 262.0], [9.8, 266.0], [9.9, 272.0], [10.0, 277.0], [10.1, 284.0], [10.2, 287.0], [10.3, 291.0], [10.4, 295.0], [10.5, 299.0], [10.6, 303.0], [10.7, 308.0], [10.8, 311.0], [10.9, 315.0], [11.0, 319.0], [11.1, 323.0], [11.2, 326.0], [11.3, 330.0], [11.4, 332.0], [11.5, 334.0], [11.6, 337.0], [11.7, 339.0], [11.8, 341.0], [11.9, 344.0], [12.0, 347.0], [12.1, 350.0], [12.2, 353.0], [12.3, 356.0], [12.4, 358.0], [12.5, 361.0], [12.6, 363.0], [12.7, 365.0], [12.8, 367.0], [12.9, 370.0], [13.0, 372.0], [13.1, 374.0], [13.2, 377.0], [13.3, 379.0], [13.4, 381.0], [13.5, 383.0], [13.6, 384.0], [13.7, 386.0], [13.8, 388.0], [13.9, 390.0], [14.0, 391.0], [14.1, 393.0], [14.2, 395.0], [14.3, 397.0], [14.4, 399.0], [14.5, 401.0], [14.6, 403.0], [14.7, 406.0], [14.8, 408.0], [14.9, 410.0], [15.0, 412.0], [15.1, 414.0], [15.2, 416.0], [15.3, 418.0], [15.4, 420.0], [15.5, 422.0], [15.6, 423.0], [15.7, 425.0], [15.8, 427.0], [15.9, 429.0], [16.0, 431.0], [16.1, 433.0], [16.2, 436.0], [16.3, 437.0], [16.4, 439.0], [16.5, 441.0], [16.6, 443.0], [16.7, 445.0], [16.8, 448.0], [16.9, 450.0], [17.0, 452.0], [17.1, 454.0], [17.2, 456.0], [17.3, 458.0], [17.4, 459.0], [17.5, 461.0], [17.6, 463.0], [17.7, 465.0], [17.8, 467.0], [17.9, 470.0], [18.0, 472.0], [18.1, 474.0], [18.2, 476.0], [18.3, 478.0], [18.4, 480.0], [18.5, 481.0], [18.6, 483.0], [18.7, 485.0], [18.8, 486.0], [18.9, 488.0], [19.0, 489.0], [19.1, 492.0], [19.2, 493.0], [19.3, 495.0], [19.4, 496.0], [19.5, 498.0], [19.6, 499.0], [19.7, 501.0], [19.8, 502.0], [19.9, 503.0], [20.0, 505.0], [20.1, 506.0], [20.2, 507.0], [20.3, 509.0], [20.4, 510.0], [20.5, 511.0], [20.6, 512.0], [20.7, 513.0], [20.8, 514.0], [20.9, 515.0], [21.0, 516.0], [21.1, 517.0], [21.2, 518.0], [21.3, 519.0], [21.4, 521.0], [21.5, 522.0], [21.6, 523.0], [21.7, 524.0], [21.8, 525.0], [21.9, 526.0], [22.0, 527.0], [22.1, 528.0], [22.2, 528.0], [22.3, 529.0], [22.4, 530.0], [22.5, 531.0], [22.6, 532.0], [22.7, 533.0], [22.8, 534.0], [22.9, 535.0], [23.0, 535.0], [23.1, 536.0], [23.2, 537.0], [23.3, 538.0], [23.4, 539.0], [23.5, 539.0], [23.6, 540.0], [23.7, 541.0], [23.8, 542.0], [23.9, 543.0], [24.0, 543.0], [24.1, 544.0], [24.2, 545.0], [24.3, 545.0], [24.4, 546.0], [24.5, 547.0], [24.6, 547.0], [24.7, 548.0], [24.8, 549.0], [24.9, 549.0], [25.0, 550.0], [25.1, 551.0], [25.2, 551.0], [25.3, 552.0], [25.4, 552.0], [25.5, 553.0], [25.6, 554.0], [25.7, 554.0], [25.8, 555.0], [25.9, 556.0], [26.0, 556.0], [26.1, 557.0], [26.2, 558.0], [26.3, 558.0], [26.4, 559.0], [26.5, 559.0], [26.6, 560.0], [26.7, 560.0], [26.8, 561.0], [26.9, 561.0], [27.0, 562.0], [27.1, 562.0], [27.2, 563.0], [27.3, 563.0], [27.4, 564.0], [27.5, 564.0], [27.6, 565.0], [27.7, 565.0], [27.8, 566.0], [27.9, 566.0], [28.0, 567.0], [28.1, 567.0], [28.2, 568.0], [28.3, 568.0], [28.4, 569.0], [28.5, 569.0], [28.6, 570.0], [28.7, 570.0], [28.8, 570.0], [28.9, 571.0], [29.0, 571.0], [29.1, 572.0], [29.2, 572.0], [29.3, 572.0], [29.4, 573.0], [29.5, 573.0], [29.6, 574.0], [29.7, 574.0], [29.8, 575.0], [29.9, 575.0], [30.0, 575.0], [30.1, 576.0], [30.2, 576.0], [30.3, 576.0], [30.4, 577.0], [30.5, 577.0], [30.6, 578.0], [30.7, 578.0], [30.8, 578.0], [30.9, 579.0], [31.0, 579.0], [31.1, 580.0], [31.2, 580.0], [31.3, 580.0], [31.4, 581.0], [31.5, 581.0], [31.6, 581.0], [31.7, 582.0], [31.8, 582.0], [31.9, 582.0], [32.0, 583.0], [32.1, 583.0], [32.2, 584.0], [32.3, 584.0], [32.4, 584.0], [32.5, 585.0], [32.6, 585.0], [32.7, 585.0], [32.8, 586.0], [32.9, 586.0], [33.0, 586.0], [33.1, 587.0], [33.2, 587.0], [33.3, 587.0], [33.4, 588.0], [33.5, 588.0], [33.6, 588.0], [33.7, 589.0], [33.8, 589.0], [33.9, 589.0], [34.0, 590.0], [34.1, 590.0], [34.2, 590.0], [34.3, 591.0], [34.4, 591.0], [34.5, 591.0], [34.6, 592.0], [34.7, 592.0], [34.8, 592.0], [34.9, 593.0], [35.0, 593.0], [35.1, 593.0], [35.2, 594.0], [35.3, 594.0], [35.4, 594.0], [35.5, 595.0], [35.6, 595.0], [35.7, 595.0], [35.8, 596.0], [35.9, 596.0], [36.0, 596.0], [36.1, 596.0], [36.2, 597.0], [36.3, 597.0], [36.4, 597.0], [36.5, 598.0], [36.6, 598.0], [36.7, 598.0], [36.8, 599.0], [36.9, 599.0], [37.0, 599.0], [37.1, 599.0], [37.2, 600.0], [37.3, 600.0], [37.4, 600.0], [37.5, 600.0], [37.6, 601.0], [37.7, 601.0], [37.8, 601.0], [37.9, 601.0], [38.0, 602.0], [38.1, 602.0], [38.2, 602.0], [38.3, 603.0], [38.4, 603.0], [38.5, 603.0], [38.6, 604.0], [38.7, 604.0], [38.8, 604.0], [38.9, 605.0], [39.0, 605.0], [39.1, 605.0], [39.2, 605.0], [39.3, 606.0], [39.4, 606.0], [39.5, 606.0], [39.6, 607.0], [39.7, 607.0], [39.8, 607.0], [39.9, 607.0], [40.0, 608.0], [40.1, 608.0], [40.2, 608.0], [40.3, 609.0], [40.4, 609.0], [40.5, 609.0], [40.6, 609.0], [40.7, 610.0], [40.8, 610.0], [40.9, 610.0], [41.0, 611.0], [41.1, 611.0], [41.2, 611.0], [41.3, 612.0], [41.4, 612.0], [41.5, 612.0], [41.6, 613.0], [41.7, 613.0], [41.8, 613.0], [41.9, 614.0], [42.0, 614.0], [42.1, 614.0], [42.2, 614.0], [42.3, 615.0], [42.4, 615.0], [42.5, 615.0], [42.6, 615.0], [42.7, 615.0], [42.8, 616.0], [42.9, 616.0], [43.0, 616.0], [43.1, 617.0], [43.2, 617.0], [43.3, 617.0], [43.4, 618.0], [43.5, 618.0], [43.6, 618.0], [43.7, 618.0], [43.8, 618.0], [43.9, 619.0], [44.0, 619.0], [44.1, 619.0], [44.2, 620.0], [44.3, 620.0], [44.4, 620.0], [44.5, 620.0], [44.6, 621.0], [44.7, 621.0], [44.8, 621.0], [44.9, 621.0], [45.0, 622.0], [45.1, 622.0], [45.2, 622.0], [45.3, 623.0], [45.4, 623.0], [45.5, 623.0], [45.6, 624.0], [45.7, 624.0], [45.8, 624.0], [45.9, 624.0], [46.0, 625.0], [46.1, 625.0], [46.2, 625.0], [46.3, 625.0], [46.4, 626.0], [46.5, 626.0], [46.6, 626.0], [46.7, 627.0], [46.8, 627.0], [46.9, 627.0], [47.0, 627.0], [47.1, 628.0], [47.2, 628.0], [47.3, 628.0], [47.4, 628.0], [47.5, 629.0], [47.6, 629.0], [47.7, 629.0], [47.8, 630.0], [47.9, 630.0], [48.0, 630.0], [48.1, 630.0], [48.2, 631.0], [48.3, 631.0], [48.4, 631.0], [48.5, 631.0], [48.6, 632.0], [48.7, 632.0], [48.8, 632.0], [48.9, 633.0], [49.0, 633.0], [49.1, 633.0], [49.2, 634.0], [49.3, 634.0], [49.4, 634.0], [49.5, 634.0], [49.6, 635.0], [49.7, 635.0], [49.8, 635.0], [49.9, 635.0], [50.0, 635.0], [50.1, 636.0], [50.2, 636.0], [50.3, 636.0], [50.4, 636.0], [50.5, 637.0], [50.6, 637.0], [50.7, 637.0], [50.8, 638.0], [50.9, 638.0], [51.0, 638.0], [51.1, 638.0], [51.2, 639.0], [51.3, 639.0], [51.4, 639.0], [51.5, 639.0], [51.6, 640.0], [51.7, 640.0], [51.8, 640.0], [51.9, 640.0], [52.0, 641.0], [52.1, 641.0], [52.2, 641.0], [52.3, 642.0], [52.4, 642.0], [52.5, 642.0], [52.6, 642.0], [52.7, 643.0], [52.8, 643.0], [52.9, 643.0], [53.0, 643.0], [53.1, 644.0], [53.2, 644.0], [53.3, 644.0], [53.4, 645.0], [53.5, 645.0], [53.6, 645.0], [53.7, 645.0], [53.8, 646.0], [53.9, 646.0], [54.0, 646.0], [54.1, 646.0], [54.2, 647.0], [54.3, 647.0], [54.4, 647.0], [54.5, 647.0], [54.6, 648.0], [54.7, 648.0], [54.8, 648.0], [54.9, 648.0], [55.0, 648.0], [55.1, 649.0], [55.2, 649.0], [55.3, 649.0], [55.4, 649.0], [55.5, 650.0], [55.6, 650.0], [55.7, 650.0], [55.8, 651.0], [55.9, 651.0], [56.0, 651.0], [56.1, 651.0], [56.2, 652.0], [56.3, 652.0], [56.4, 652.0], [56.5, 652.0], [56.6, 653.0], [56.7, 653.0], [56.8, 653.0], [56.9, 654.0], [57.0, 654.0], [57.1, 654.0], [57.2, 654.0], [57.3, 655.0], [57.4, 655.0], [57.5, 655.0], [57.6, 655.0], [57.7, 656.0], [57.8, 656.0], [57.9, 656.0], [58.0, 656.0], [58.1, 657.0], [58.2, 657.0], [58.3, 657.0], [58.4, 658.0], [58.5, 658.0], [58.6, 658.0], [58.7, 658.0], [58.8, 659.0], [58.9, 659.0], [59.0, 659.0], [59.1, 659.0], [59.2, 660.0], [59.3, 660.0], [59.4, 660.0], [59.5, 661.0], [59.6, 661.0], [59.7, 661.0], [59.8, 661.0], [59.9, 662.0], [60.0, 662.0], [60.1, 662.0], [60.2, 662.0], [60.3, 663.0], [60.4, 663.0], [60.5, 663.0], [60.6, 663.0], [60.7, 664.0], [60.8, 664.0], [60.9, 664.0], [61.0, 665.0], [61.1, 665.0], [61.2, 665.0], [61.3, 665.0], [61.4, 666.0], [61.5, 666.0], [61.6, 666.0], [61.7, 667.0], [61.8, 667.0], [61.9, 667.0], [62.0, 667.0], [62.1, 668.0], [62.2, 668.0], [62.3, 668.0], [62.4, 669.0], [62.5, 669.0], [62.6, 669.0], [62.7, 669.0], [62.8, 670.0], [62.9, 670.0], [63.0, 670.0], [63.1, 671.0], [63.2, 671.0], [63.3, 671.0], [63.4, 672.0], [63.5, 672.0], [63.6, 672.0], [63.7, 672.0], [63.8, 673.0], [63.9, 673.0], [64.0, 673.0], [64.1, 673.0], [64.2, 674.0], [64.3, 674.0], [64.4, 674.0], [64.5, 674.0], [64.6, 675.0], [64.7, 675.0], [64.8, 675.0], [64.9, 675.0], [65.0, 676.0], [65.1, 676.0], [65.2, 676.0], [65.3, 676.0], [65.4, 677.0], [65.5, 677.0], [65.6, 677.0], [65.7, 677.0], [65.8, 678.0], [65.9, 678.0], [66.0, 678.0], [66.1, 679.0], [66.2, 679.0], [66.3, 679.0], [66.4, 680.0], [66.5, 680.0], [66.6, 680.0], [66.7, 680.0], [66.8, 681.0], [66.9, 681.0], [67.0, 681.0], [67.1, 681.0], [67.2, 682.0], [67.3, 682.0], [67.4, 682.0], [67.5, 682.0], [67.6, 683.0], [67.7, 683.0], [67.8, 683.0], [67.9, 684.0], [68.0, 684.0], [68.1, 684.0], [68.2, 685.0], [68.3, 685.0], [68.4, 685.0], [68.5, 686.0], [68.6, 686.0], [68.7, 686.0], [68.8, 687.0], [68.9, 687.0], [69.0, 687.0], [69.1, 688.0], [69.2, 688.0], [69.3, 688.0], [69.4, 688.0], [69.5, 689.0], [69.6, 689.0], [69.7, 689.0], [69.8, 689.0], [69.9, 690.0], [70.0, 690.0], [70.1, 690.0], [70.2, 691.0], [70.3, 691.0], [70.4, 691.0], [70.5, 691.0], [70.6, 692.0], [70.7, 692.0], [70.8, 692.0], [70.9, 692.0], [71.0, 693.0], [71.1, 693.0], [71.2, 693.0], [71.3, 694.0], [71.4, 694.0], [71.5, 694.0], [71.6, 695.0], [71.7, 695.0], [71.8, 695.0], [71.9, 695.0], [72.0, 696.0], [72.1, 696.0], [72.2, 696.0], [72.3, 696.0], [72.4, 697.0], [72.5, 697.0], [72.6, 697.0], [72.7, 698.0], [72.8, 698.0], [72.9, 698.0], [73.0, 698.0], [73.1, 699.0], [73.2, 699.0], [73.3, 699.0], [73.4, 700.0], [73.5, 700.0], [73.6, 700.0], [73.7, 700.0], [73.8, 701.0], [73.9, 701.0], [74.0, 701.0], [74.1, 702.0], [74.2, 702.0], [74.3, 702.0], [74.4, 703.0], [74.5, 703.0], [74.6, 703.0], [74.7, 703.0], [74.8, 704.0], [74.9, 704.0], [75.0, 704.0], [75.1, 704.0], [75.2, 705.0], [75.3, 705.0], [75.4, 705.0], [75.5, 705.0], [75.6, 706.0], [75.7, 706.0], [75.8, 706.0], [75.9, 707.0], [76.0, 707.0], [76.1, 707.0], [76.2, 707.0], [76.3, 708.0], [76.4, 708.0], [76.5, 708.0], [76.6, 709.0], [76.7, 709.0], [76.8, 709.0], [76.9, 710.0], [77.0, 710.0], [77.1, 710.0], [77.2, 711.0], [77.3, 711.0], [77.4, 711.0], [77.5, 712.0], [77.6, 712.0], [77.7, 712.0], [77.8, 713.0], [77.9, 713.0], [78.0, 713.0], [78.1, 714.0], [78.2, 714.0], [78.3, 714.0], [78.4, 715.0], [78.5, 715.0], [78.6, 715.0], [78.7, 716.0], [78.8, 716.0], [78.9, 716.0], [79.0, 717.0], [79.1, 717.0], [79.2, 717.0], [79.3, 718.0], [79.4, 718.0], [79.5, 718.0], [79.6, 719.0], [79.7, 719.0], [79.8, 719.0], [79.9, 720.0], [80.0, 720.0], [80.1, 721.0], [80.2, 721.0], [80.3, 721.0], [80.4, 722.0], [80.5, 722.0], [80.6, 722.0], [80.7, 723.0], [80.8, 723.0], [80.9, 723.0], [81.0, 724.0], [81.1, 724.0], [81.2, 725.0], [81.3, 725.0], [81.4, 726.0], [81.5, 726.0], [81.6, 726.0], [81.7, 726.0], [81.8, 727.0], [81.9, 727.0], [82.0, 728.0], [82.1, 728.0], [82.2, 729.0], [82.3, 729.0], [82.4, 729.0], [82.5, 730.0], [82.6, 730.0], [82.7, 731.0], [82.8, 731.0], [82.9, 731.0], [83.0, 732.0], [83.1, 732.0], [83.2, 733.0], [83.3, 733.0], [83.4, 733.0], [83.5, 734.0], [83.6, 734.0], [83.7, 734.0], [83.8, 735.0], [83.9, 735.0], [84.0, 736.0], [84.1, 736.0], [84.2, 737.0], [84.3, 737.0], [84.4, 737.0], [84.5, 738.0], [84.6, 738.0], [84.7, 739.0], [84.8, 739.0], [84.9, 739.0], [85.0, 740.0], [85.1, 740.0], [85.2, 741.0], [85.3, 741.0], [85.4, 742.0], [85.5, 742.0], [85.6, 742.0], [85.7, 743.0], [85.8, 744.0], [85.9, 744.0], [86.0, 744.0], [86.1, 745.0], [86.2, 745.0], [86.3, 746.0], [86.4, 746.0], [86.5, 747.0], [86.6, 747.0], [86.7, 748.0], [86.8, 748.0], [86.9, 749.0], [87.0, 749.0], [87.1, 750.0], [87.2, 751.0], [87.3, 751.0], [87.4, 751.0], [87.5, 752.0], [87.6, 753.0], [87.7, 753.0], [87.8, 754.0], [87.9, 754.0], [88.0, 755.0], [88.1, 755.0], [88.2, 756.0], [88.3, 756.0], [88.4, 757.0], [88.5, 758.0], [88.6, 758.0], [88.7, 759.0], [88.8, 759.0], [88.9, 760.0], [89.0, 761.0], [89.1, 761.0], [89.2, 762.0], [89.3, 763.0], [89.4, 763.0], [89.5, 764.0], [89.6, 765.0], [89.7, 765.0], [89.8, 766.0], [89.9, 767.0], [90.0, 767.0], [90.1, 768.0], [90.2, 769.0], [90.3, 770.0], [90.4, 770.0], [90.5, 771.0], [90.6, 772.0], [90.7, 772.0], [90.8, 773.0], [90.9, 774.0], [91.0, 774.0], [91.1, 775.0], [91.2, 776.0], [91.3, 777.0], [91.4, 778.0], [91.5, 778.0], [91.6, 779.0], [91.7, 780.0], [91.8, 781.0], [91.9, 782.0], [92.0, 783.0], [92.1, 784.0], [92.2, 785.0], [92.3, 786.0], [92.4, 787.0], [92.5, 788.0], [92.6, 789.0], [92.7, 790.0], [92.8, 791.0], [92.9, 791.0], [93.0, 792.0], [93.1, 793.0], [93.2, 794.0], [93.3, 796.0], [93.4, 797.0], [93.5, 798.0], [93.6, 799.0], [93.7, 800.0], [93.8, 801.0], [93.9, 802.0], [94.0, 802.0], [94.1, 803.0], [94.2, 805.0], [94.3, 806.0], [94.4, 807.0], [94.5, 808.0], [94.6, 810.0], [94.7, 811.0], [94.8, 813.0], [94.9, 814.0], [95.0, 816.0], [95.1, 818.0], [95.2, 819.0], [95.3, 821.0], [95.4, 822.0], [95.5, 824.0], [95.6, 825.0], [95.7, 827.0], [95.8, 829.0], [95.9, 831.0], [96.0, 833.0], [96.1, 835.0], [96.2, 838.0], [96.3, 842.0], [96.4, 844.0], [96.5, 847.0], [96.6, 850.0], [96.7, 856.0], [96.8, 862.0], [96.9, 869.0], [97.0, 877.0], [97.1, 882.0], [97.2, 889.0], [97.3, 896.0], [97.4, 909.0], [97.5, 927.0], [97.6, 952.0], [97.7, 980.0], [97.8, 1006.0], [97.9, 1027.0], [98.0, 1055.0], [98.1, 1083.0], [98.2, 1106.0], [98.3, 1134.0], [98.4, 1158.0], [98.5, 1179.0], [98.6, 1200.0], [98.7, 1216.0], [98.8, 1236.0], [98.9, 1248.0], [99.0, 1264.0], [99.1, 1280.0], [99.2, 1306.0], [99.3, 1322.0], [99.4, 1342.0], [99.5, 1361.0], [99.6, 1391.0], [99.7, 1418.0], [99.8, 1471.0], [99.9, 1619.0]], "isOverall": false, "label": "GET employee by id", "isController": false}, {"data": [[0.0, 6.0], [0.1, 8.0], [0.2, 9.0], [0.3, 10.0], [0.4, 11.0], [0.5, 12.0], [0.6, 12.0], [0.7, 13.0], [0.8, 14.0], [0.9, 15.0], [1.0, 15.0], [1.1, 16.0], [1.2, 17.0], [1.3, 18.0], [1.4, 19.0], [1.5, 20.0], [1.6, 21.0], [1.7, 22.0], [1.8, 24.0], [1.9, 25.0], [2.0, 27.0], [2.1, 28.0], [2.2, 29.0], [2.3, 30.0], [2.4, 32.0], [2.5, 33.0], [2.6, 35.0], [2.7, 37.0], [2.8, 39.0], [2.9, 41.0], [3.0, 42.0], [3.1, 44.0], [3.2, 46.0], [3.3, 48.0], [3.4, 49.0], [3.5, 51.0], [3.6, 53.0], [3.7, 55.0], [3.8, 58.0], [3.9, 61.0], [4.0, 65.0], [4.1, 68.0], [4.2, 72.0], [4.3, 76.0], [4.4, 81.0], [4.5, 85.0], [4.6, 92.0], [4.7, 98.0], [4.8, 101.0], [4.9, 107.0], [5.0, 110.0], [5.1, 114.0], [5.2, 120.0], [5.3, 124.0], [5.4, 127.0], [5.5, 130.0], [5.6, 135.0], [5.7, 138.0], [5.8, 142.0], [5.9, 146.0], [6.0, 150.0], [6.1, 154.0], [6.2, 157.0], [6.3, 161.0], [6.4, 164.0], [6.5, 169.0], [6.6, 173.0], [6.7, 177.0], [6.8, 180.0], [6.9, 183.0], [7.0, 187.0], [7.1, 191.0], [7.2, 194.0], [7.3, 198.0], [7.4, 202.0], [7.5, 205.0], [7.6, 209.0], [7.7, 213.0], [7.8, 217.0], [7.9, 220.0], [8.0, 224.0], [8.1, 228.0], [8.2, 232.0], [8.3, 237.0], [8.4, 242.0], [8.5, 248.0], [8.6, 253.0], [8.7, 259.0], [8.8, 265.0], [8.9, 270.0], [9.0, 274.0], [9.1, 281.0], [9.2, 287.0], [9.3, 292.0], [9.4, 295.0], [9.5, 300.0], [9.6, 304.0], [9.7, 307.0], [9.8, 311.0], [9.9, 314.0], [10.0, 317.0], [10.1, 320.0], [10.2, 325.0], [10.3, 328.0], [10.4, 331.0], [10.5, 335.0], [10.6, 338.0], [10.7, 342.0], [10.8, 345.0], [10.9, 348.0], [11.0, 352.0], [11.1, 356.0], [11.2, 359.0], [11.3, 361.0], [11.4, 363.0], [11.5, 366.0], [11.6, 368.0], [11.7, 371.0], [11.8, 373.0], [11.9, 376.0], [12.0, 379.0], [12.1, 381.0], [12.2, 383.0], [12.3, 386.0], [12.4, 388.0], [12.5, 389.0], [12.6, 391.0], [12.7, 393.0], [12.8, 396.0], [12.9, 397.0], [13.0, 400.0], [13.1, 402.0], [13.2, 404.0], [13.3, 407.0], [13.4, 409.0], [13.5, 411.0], [13.6, 413.0], [13.7, 416.0], [13.8, 419.0], [13.9, 421.0], [14.0, 424.0], [14.1, 425.0], [14.2, 426.0], [14.3, 428.0], [14.4, 430.0], [14.5, 432.0], [14.6, 434.0], [14.7, 435.0], [14.8, 437.0], [14.9, 439.0], [15.0, 441.0], [15.1, 443.0], [15.2, 445.0], [15.3, 447.0], [15.4, 448.0], [15.5, 450.0], [15.6, 451.0], [15.7, 453.0], [15.8, 454.0], [15.9, 456.0], [16.0, 458.0], [16.1, 460.0], [16.2, 462.0], [16.3, 463.0], [16.4, 465.0], [16.5, 467.0], [16.6, 469.0], [16.7, 470.0], [16.8, 472.0], [16.9, 474.0], [17.0, 476.0], [17.1, 478.0], [17.2, 480.0], [17.3, 482.0], [17.4, 483.0], [17.5, 485.0], [17.6, 487.0], [17.7, 489.0], [17.8, 490.0], [17.9, 492.0], [18.0, 494.0], [18.1, 496.0], [18.2, 498.0], [18.3, 500.0], [18.4, 501.0], [18.5, 503.0], [18.6, 504.0], [18.7, 506.0], [18.8, 507.0], [18.9, 509.0], [19.0, 510.0], [19.1, 511.0], [19.2, 512.0], [19.3, 514.0], [19.4, 515.0], [19.5, 516.0], [19.6, 517.0], [19.7, 518.0], [19.8, 520.0], [19.9, 521.0], [20.0, 523.0], [20.1, 524.0], [20.2, 525.0], [20.3, 526.0], [20.4, 528.0], [20.5, 529.0], [20.6, 530.0], [20.7, 531.0], [20.8, 532.0], [20.9, 533.0], [21.0, 535.0], [21.1, 536.0], [21.2, 537.0], [21.3, 538.0], [21.4, 539.0], [21.5, 541.0], [21.6, 541.0], [21.7, 542.0], [21.8, 543.0], [21.9, 544.0], [22.0, 545.0], [22.1, 546.0], [22.2, 547.0], [22.3, 547.0], [22.4, 548.0], [22.5, 549.0], [22.6, 549.0], [22.7, 550.0], [22.8, 551.0], [22.9, 551.0], [23.0, 552.0], [23.1, 553.0], [23.2, 553.0], [23.3, 554.0], [23.4, 555.0], [23.5, 556.0], [23.6, 556.0], [23.7, 557.0], [23.8, 557.0], [23.9, 558.0], [24.0, 558.0], [24.1, 559.0], [24.2, 560.0], [24.3, 560.0], [24.4, 561.0], [24.5, 562.0], [24.6, 562.0], [24.7, 563.0], [24.8, 563.0], [24.9, 564.0], [25.0, 565.0], [25.1, 566.0], [25.2, 566.0], [25.3, 567.0], [25.4, 568.0], [25.5, 568.0], [25.6, 569.0], [25.7, 570.0], [25.8, 570.0], [25.9, 571.0], [26.0, 571.0], [26.1, 572.0], [26.2, 572.0], [26.3, 573.0], [26.4, 573.0], [26.5, 574.0], [26.6, 574.0], [26.7, 575.0], [26.8, 576.0], [26.9, 576.0], [27.0, 577.0], [27.1, 577.0], [27.2, 578.0], [27.3, 578.0], [27.4, 579.0], [27.5, 579.0], [27.6, 580.0], [27.7, 580.0], [27.8, 581.0], [27.9, 581.0], [28.0, 581.0], [28.1, 582.0], [28.2, 582.0], [28.3, 583.0], [28.4, 583.0], [28.5, 584.0], [28.6, 584.0], [28.7, 585.0], [28.8, 585.0], [28.9, 586.0], [29.0, 586.0], [29.1, 586.0], [29.2, 587.0], [29.3, 587.0], [29.4, 588.0], [29.5, 588.0], [29.6, 588.0], [29.7, 589.0], [29.8, 589.0], [29.9, 590.0], [30.0, 590.0], [30.1, 591.0], [30.2, 591.0], [30.3, 591.0], [30.4, 592.0], [30.5, 592.0], [30.6, 593.0], [30.7, 593.0], [30.8, 593.0], [30.9, 594.0], [31.0, 594.0], [31.1, 594.0], [31.2, 595.0], [31.3, 595.0], [31.4, 596.0], [31.5, 596.0], [31.6, 597.0], [31.7, 597.0], [31.8, 597.0], [31.9, 598.0], [32.0, 598.0], [32.1, 598.0], [32.2, 599.0], [32.3, 599.0], [32.4, 599.0], [32.5, 600.0], [32.6, 600.0], [32.7, 600.0], [32.8, 601.0], [32.9, 601.0], [33.0, 601.0], [33.1, 602.0], [33.2, 602.0], [33.3, 602.0], [33.4, 603.0], [33.5, 603.0], [33.6, 603.0], [33.7, 604.0], [33.8, 604.0], [33.9, 604.0], [34.0, 605.0], [34.1, 605.0], [34.2, 605.0], [34.3, 606.0], [34.4, 606.0], [34.5, 606.0], [34.6, 607.0], [34.7, 607.0], [34.8, 607.0], [34.9, 608.0], [35.0, 608.0], [35.1, 609.0], [35.2, 609.0], [35.3, 609.0], [35.4, 610.0], [35.5, 610.0], [35.6, 610.0], [35.7, 610.0], [35.8, 611.0], [35.9, 611.0], [36.0, 611.0], [36.1, 612.0], [36.2, 612.0], [36.3, 612.0], [36.4, 613.0], [36.5, 613.0], [36.6, 613.0], [36.7, 614.0], [36.8, 614.0], [36.9, 614.0], [37.0, 615.0], [37.1, 615.0], [37.2, 615.0], [37.3, 616.0], [37.4, 616.0], [37.5, 616.0], [37.6, 617.0], [37.7, 617.0], [37.8, 617.0], [37.9, 618.0], [38.0, 618.0], [38.1, 618.0], [38.2, 619.0], [38.3, 619.0], [38.4, 619.0], [38.5, 619.0], [38.6, 620.0], [38.7, 620.0], [38.8, 620.0], [38.9, 621.0], [39.0, 621.0], [39.1, 621.0], [39.2, 622.0], [39.3, 622.0], [39.4, 622.0], [39.5, 623.0], [39.6, 623.0], [39.7, 623.0], [39.8, 624.0], [39.9, 624.0], [40.0, 624.0], [40.1, 625.0], [40.2, 625.0], [40.3, 625.0], [40.4, 626.0], [40.5, 626.0], [40.6, 626.0], [40.7, 627.0], [40.8, 627.0], [40.9, 627.0], [41.0, 627.0], [41.1, 628.0], [41.2, 628.0], [41.3, 628.0], [41.4, 629.0], [41.5, 629.0], [41.6, 629.0], [41.7, 630.0], [41.8, 630.0], [41.9, 630.0], [42.0, 630.0], [42.1, 631.0], [42.2, 631.0], [42.3, 631.0], [42.4, 632.0], [42.5, 632.0], [42.6, 632.0], [42.7, 632.0], [42.8, 633.0], [42.9, 633.0], [43.0, 633.0], [43.1, 634.0], [43.2, 634.0], [43.3, 634.0], [43.4, 634.0], [43.5, 635.0], [43.6, 635.0], [43.7, 635.0], [43.8, 636.0], [43.9, 636.0], [44.0, 636.0], [44.1, 636.0], [44.2, 637.0], [44.3, 637.0], [44.4, 637.0], [44.5, 638.0], [44.6, 638.0], [44.7, 638.0], [44.8, 639.0], [44.9, 639.0], [45.0, 639.0], [45.1, 640.0], [45.2, 640.0], [45.3, 640.0], [45.4, 641.0], [45.5, 641.0], [45.6, 641.0], [45.7, 641.0], [45.8, 642.0], [45.9, 642.0], [46.0, 642.0], [46.1, 642.0], [46.2, 643.0], [46.3, 643.0], [46.4, 643.0], [46.5, 644.0], [46.6, 644.0], [46.7, 644.0], [46.8, 645.0], [46.9, 645.0], [47.0, 645.0], [47.1, 645.0], [47.2, 646.0], [47.3, 646.0], [47.4, 646.0], [47.5, 647.0], [47.6, 647.0], [47.7, 647.0], [47.8, 647.0], [47.9, 648.0], [48.0, 648.0], [48.1, 648.0], [48.2, 648.0], [48.3, 649.0], [48.4, 649.0], [48.5, 649.0], [48.6, 650.0], [48.7, 650.0], [48.8, 650.0], [48.9, 651.0], [49.0, 651.0], [49.1, 651.0], [49.2, 652.0], [49.3, 652.0], [49.4, 652.0], [49.5, 652.0], [49.6, 653.0], [49.7, 653.0], [49.8, 653.0], [49.9, 654.0], [50.0, 654.0], [50.1, 654.0], [50.2, 654.0], [50.3, 655.0], [50.4, 655.0], [50.5, 655.0], [50.6, 656.0], [50.7, 656.0], [50.8, 656.0], [50.9, 656.0], [51.0, 657.0], [51.1, 657.0], [51.2, 657.0], [51.3, 657.0], [51.4, 658.0], [51.5, 658.0], [51.6, 658.0], [51.7, 658.0], [51.8, 659.0], [51.9, 659.0], [52.0, 659.0], [52.1, 660.0], [52.2, 660.0], [52.3, 660.0], [52.4, 660.0], [52.5, 661.0], [52.6, 661.0], [52.7, 661.0], [52.8, 661.0], [52.9, 662.0], [53.0, 662.0], [53.1, 662.0], [53.2, 662.0], [53.3, 663.0], [53.4, 663.0], [53.5, 663.0], [53.6, 664.0], [53.7, 664.0], [53.8, 664.0], [53.9, 664.0], [54.0, 665.0], [54.1, 665.0], [54.2, 665.0], [54.3, 665.0], [54.4, 666.0], [54.5, 666.0], [54.6, 666.0], [54.7, 666.0], [54.8, 667.0], [54.9, 667.0], [55.0, 667.0], [55.1, 668.0], [55.2, 668.0], [55.3, 668.0], [55.4, 668.0], [55.5, 669.0], [55.6, 669.0], [55.7, 669.0], [55.8, 669.0], [55.9, 670.0], [56.0, 670.0], [56.1, 670.0], [56.2, 671.0], [56.3, 671.0], [56.4, 671.0], [56.5, 671.0], [56.6, 672.0], [56.7, 672.0], [56.8, 672.0], [56.9, 672.0], [57.0, 673.0], [57.1, 673.0], [57.2, 673.0], [57.3, 673.0], [57.4, 674.0], [57.5, 674.0], [57.6, 674.0], [57.7, 675.0], [57.8, 675.0], [57.9, 675.0], [58.0, 675.0], [58.1, 676.0], [58.2, 676.0], [58.3, 676.0], [58.4, 676.0], [58.5, 677.0], [58.6, 677.0], [58.7, 677.0], [58.8, 678.0], [58.9, 678.0], [59.0, 678.0], [59.1, 679.0], [59.2, 679.0], [59.3, 679.0], [59.4, 679.0], [59.5, 680.0], [59.6, 680.0], [59.7, 680.0], [59.8, 680.0], [59.9, 680.0], [60.0, 681.0], [60.1, 681.0], [60.2, 681.0], [60.3, 682.0], [60.4, 682.0], [60.5, 682.0], [60.6, 682.0], [60.7, 683.0], [60.8, 683.0], [60.9, 683.0], [61.0, 683.0], [61.1, 684.0], [61.2, 684.0], [61.3, 684.0], [61.4, 684.0], [61.5, 685.0], [61.6, 685.0], [61.7, 685.0], [61.8, 685.0], [61.9, 686.0], [62.0, 686.0], [62.1, 686.0], [62.2, 687.0], [62.3, 687.0], [62.4, 687.0], [62.5, 687.0], [62.6, 688.0], [62.7, 688.0], [62.8, 688.0], [62.9, 688.0], [63.0, 689.0], [63.1, 689.0], [63.2, 689.0], [63.3, 690.0], [63.4, 690.0], [63.5, 690.0], [63.6, 691.0], [63.7, 691.0], [63.8, 691.0], [63.9, 691.0], [64.0, 692.0], [64.1, 692.0], [64.2, 692.0], [64.3, 693.0], [64.4, 693.0], [64.5, 693.0], [64.6, 693.0], [64.7, 694.0], [64.8, 694.0], [64.9, 694.0], [65.0, 694.0], [65.1, 695.0], [65.2, 695.0], [65.3, 695.0], [65.4, 695.0], [65.5, 696.0], [65.6, 696.0], [65.7, 696.0], [65.8, 697.0], [65.9, 697.0], [66.0, 697.0], [66.1, 697.0], [66.2, 698.0], [66.3, 698.0], [66.4, 698.0], [66.5, 699.0], [66.6, 699.0], [66.7, 699.0], [66.8, 699.0], [66.9, 700.0], [67.0, 700.0], [67.1, 700.0], [67.2, 700.0], [67.3, 701.0], [67.4, 701.0], [67.5, 701.0], [67.6, 702.0], [67.7, 702.0], [67.8, 702.0], [67.9, 702.0], [68.0, 703.0], [68.1, 703.0], [68.2, 703.0], [68.3, 704.0], [68.4, 704.0], [68.5, 704.0], [68.6, 704.0], [68.7, 705.0], [68.8, 705.0], [68.9, 705.0], [69.0, 705.0], [69.1, 706.0], [69.2, 706.0], [69.3, 706.0], [69.4, 707.0], [69.5, 707.0], [69.6, 707.0], [69.7, 708.0], [69.8, 708.0], [69.9, 708.0], [70.0, 709.0], [70.1, 709.0], [70.2, 709.0], [70.3, 709.0], [70.4, 710.0], [70.5, 710.0], [70.6, 710.0], [70.7, 711.0], [70.8, 711.0], [70.9, 711.0], [71.0, 712.0], [71.1, 712.0], [71.2, 712.0], [71.3, 712.0], [71.4, 713.0], [71.5, 713.0], [71.6, 713.0], [71.7, 713.0], [71.8, 714.0], [71.9, 714.0], [72.0, 714.0], [72.1, 714.0], [72.2, 715.0], [72.3, 715.0], [72.4, 715.0], [72.5, 716.0], [72.6, 716.0], [72.7, 716.0], [72.8, 716.0], [72.9, 716.0], [73.0, 717.0], [73.1, 717.0], [73.2, 717.0], [73.3, 718.0], [73.4, 718.0], [73.5, 718.0], [73.6, 718.0], [73.7, 719.0], [73.8, 719.0], [73.9, 719.0], [74.0, 719.0], [74.1, 720.0], [74.2, 720.0], [74.3, 720.0], [74.4, 721.0], [74.5, 721.0], [74.6, 722.0], [74.7, 722.0], [74.8, 722.0], [74.9, 722.0], [75.0, 723.0], [75.1, 723.0], [75.2, 723.0], [75.3, 724.0], [75.4, 724.0], [75.5, 724.0], [75.6, 725.0], [75.7, 725.0], [75.8, 725.0], [75.9, 726.0], [76.0, 726.0], [76.1, 726.0], [76.2, 726.0], [76.3, 727.0], [76.4, 727.0], [76.5, 728.0], [76.6, 728.0], [76.7, 728.0], [76.8, 728.0], [76.9, 729.0], [77.0, 729.0], [77.1, 729.0], [77.2, 730.0], [77.3, 730.0], [77.4, 730.0], [77.5, 731.0], [77.6, 731.0], [77.7, 731.0], [77.8, 732.0], [77.9, 732.0], [78.0, 733.0], [78.1, 733.0], [78.2, 733.0], [78.3, 734.0], [78.4, 734.0], [78.5, 734.0], [78.6, 735.0], [78.7, 735.0], [78.8, 735.0], [78.9, 736.0], [79.0, 736.0], [79.1, 736.0], [79.2, 737.0], [79.3, 737.0], [79.4, 738.0], [79.5, 738.0], [79.6, 738.0], [79.7, 739.0], [79.8, 739.0], [79.9, 740.0], [80.0, 740.0], [80.1, 740.0], [80.2, 740.0], [80.3, 741.0], [80.4, 741.0], [80.5, 742.0], [80.6, 742.0], [80.7, 742.0], [80.8, 743.0], [80.9, 743.0], [81.0, 743.0], [81.1, 744.0], [81.2, 744.0], [81.3, 744.0], [81.4, 745.0], [81.5, 745.0], [81.6, 746.0], [81.7, 746.0], [81.8, 747.0], [81.9, 747.0], [82.0, 748.0], [82.1, 748.0], [82.2, 748.0], [82.3, 749.0], [82.4, 749.0], [82.5, 750.0], [82.6, 750.0], [82.7, 751.0], [82.8, 751.0], [82.9, 752.0], [83.0, 752.0], [83.1, 753.0], [83.2, 753.0], [83.3, 753.0], [83.4, 754.0], [83.5, 754.0], [83.6, 755.0], [83.7, 755.0], [83.8, 756.0], [83.9, 756.0], [84.0, 756.0], [84.1, 757.0], [84.2, 757.0], [84.3, 758.0], [84.4, 758.0], [84.5, 759.0], [84.6, 759.0], [84.7, 759.0], [84.8, 760.0], [84.9, 760.0], [85.0, 761.0], [85.1, 761.0], [85.2, 761.0], [85.3, 762.0], [85.4, 762.0], [85.5, 763.0], [85.6, 763.0], [85.7, 764.0], [85.8, 764.0], [85.9, 765.0], [86.0, 765.0], [86.1, 766.0], [86.2, 766.0], [86.3, 767.0], [86.4, 767.0], [86.5, 768.0], [86.6, 768.0], [86.7, 768.0], [86.8, 769.0], [86.9, 770.0], [87.0, 770.0], [87.1, 771.0], [87.2, 771.0], [87.3, 772.0], [87.4, 772.0], [87.5, 773.0], [87.6, 773.0], [87.7, 774.0], [87.8, 775.0], [87.9, 775.0], [88.0, 776.0], [88.1, 776.0], [88.2, 777.0], [88.3, 777.0], [88.4, 778.0], [88.5, 779.0], [88.6, 779.0], [88.7, 780.0], [88.8, 781.0], [88.9, 781.0], [89.0, 782.0], [89.1, 783.0], [89.2, 784.0], [89.3, 784.0], [89.4, 785.0], [89.5, 786.0], [89.6, 786.0], [89.7, 787.0], [89.8, 788.0], [89.9, 788.0], [90.0, 789.0], [90.1, 789.0], [90.2, 790.0], [90.3, 790.0], [90.4, 791.0], [90.5, 792.0], [90.6, 793.0], [90.7, 794.0], [90.8, 795.0], [90.9, 795.0], [91.0, 796.0], [91.1, 797.0], [91.2, 798.0], [91.3, 799.0], [91.4, 799.0], [91.5, 800.0], [91.6, 801.0], [91.7, 801.0], [91.8, 802.0], [91.9, 803.0], [92.0, 804.0], [92.1, 805.0], [92.2, 806.0], [92.3, 807.0], [92.4, 808.0], [92.5, 809.0], [92.6, 810.0], [92.7, 811.0], [92.8, 812.0], [92.9, 813.0], [93.0, 814.0], [93.1, 815.0], [93.2, 815.0], [93.3, 816.0], [93.4, 817.0], [93.5, 818.0], [93.6, 819.0], [93.7, 820.0], [93.8, 822.0], [93.9, 823.0], [94.0, 824.0], [94.1, 825.0], [94.2, 826.0], [94.3, 827.0], [94.4, 829.0], [94.5, 830.0], [94.6, 832.0], [94.7, 833.0], [94.8, 835.0], [94.9, 836.0], [95.0, 838.0], [95.1, 839.0], [95.2, 841.0], [95.3, 842.0], [95.4, 845.0], [95.5, 846.0], [95.6, 848.0], [95.7, 851.0], [95.8, 853.0], [95.9, 856.0], [96.0, 858.0], [96.1, 861.0], [96.2, 865.0], [96.3, 869.0], [96.4, 873.0], [96.5, 878.0], [96.6, 881.0], [96.7, 886.0], [96.8, 891.0], [96.9, 897.0], [97.0, 906.0], [97.1, 916.0], [97.2, 925.0], [97.3, 939.0], [97.4, 962.0], [97.5, 983.0], [97.6, 1002.0], [97.7, 1027.0], [97.8, 1042.0], [97.9, 1070.0], [98.0, 1096.0], [98.1, 1119.0], [98.2, 1139.0], [98.3, 1161.0], [98.4, 1182.0], [98.5, 1196.0], [98.6, 1211.0], [98.7, 1229.0], [98.8, 1244.0], [98.9, 1258.0], [99.0, 1270.0], [99.1, 1286.0], [99.2, 1307.0], [99.3, 1328.0], [99.4, 1346.0], [99.5, 1368.0], [99.6, 1390.0], [99.7, 1411.0], [99.8, 1461.0], [99.9, 1571.0]], "isOverall": false, "label": "POST employee", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 39789.0, "series": [{"data": [[0.0, 1317.0], [600.0, 7806.0], [700.0, 13567.0], [800.0, 7794.0], [900.0, 1676.0], [1000.0, 217.0], [1100.0, 149.0], [1200.0, 177.0], [1300.0, 225.0], [1400.0, 196.0], [1500.0, 88.0], [100.0, 1008.0], [1600.0, 22.0], [1700.0, 13.0], [1800.0, 10.0], [1900.0, 8.0], [2000.0, 9.0], [2100.0, 10.0], [2300.0, 2.0], [2200.0, 6.0], [2400.0, 1.0], [2700.0, 1.0], [200.0, 1064.0], [300.0, 920.0], [400.0, 1465.0], [500.0, 2249.0]], "isOverall": false, "label": "GET All employees", "isController": false}, {"data": [[0.0, 39789.0], [600.0, 1.0], [700.0, 2.0], [11200.0, 3.0], [11100.0, 1.0], [3000.0, 1.0], [200.0, 30.0], [1000.0, 4.0], [4100.0, 3.0], [300.0, 22.0], [5100.0, 5.0], [100.0, 104.0], [400.0, 20.0], [7100.0, 6.0], [7200.0, 1.0], [500.0, 2.0], [2000.0, 6.0]], "isOverall": false, "label": "GET thread name", "isController": false}, {"data": [[0.0, 2287.0], [2100.0, 3.0], [600.0, 14484.0], [700.0, 8126.0], [2800.0, 2.0], [200.0, 868.0], [800.0, 1462.0], [900.0, 174.0], [1000.0, 162.0], [1100.0, 167.0], [300.0, 1566.0], [1200.0, 226.0], [1300.0, 189.0], [1400.0, 85.0], [1500.0, 20.0], [100.0, 1048.0], [400.0, 2084.0], [1600.0, 6.0], [1700.0, 3.0], [1800.0, 6.0], [1900.0, 15.0], [500.0, 7010.0], [2000.0, 7.0]], "isOverall": false, "label": "GET employee by id", "isController": false}, {"data": [[0.0, 1897.0], [2100.0, 5.0], [600.0, 13739.0], [700.0, 9828.0], [2800.0, 2.0], [200.0, 851.0], [800.0, 2211.0], [900.0, 259.0], [1000.0, 173.0], [1100.0, 207.0], [300.0, 1407.0], [1200.0, 250.0], [1300.0, 199.0], [1400.0, 81.0], [1500.0, 19.0], [100.0, 1043.0], [400.0, 2118.0], [1600.0, 5.0], [1700.0, 4.0], [1800.0, 1.0], [1900.0, 11.0], [500.0, 5680.0], [2000.0, 10.0]], "isOverall": false, "label": "POST employee", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 11200.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 315.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 98714.0, "series": [{"data": [[0.0, 60971.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 98714.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 315.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 32.89486552567246, "minX": 1.7347071E12, "maxY": 200.0, "series": [{"data": [[1.73470722E12, 200.0], [1.73470752E12, 139.03507766079397], [1.7347074E12, 191.19853508095542], [1.73470758E12, 54.307359307359405], [1.7347071E12, 32.89486552567246], [1.73470728E12, 200.0], [1.73470746E12, 174.77311538029412], [1.73470716E12, 157.33583759590795], [1.73470734E12, 200.0]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.73470758E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 4.862068965517241, "minX": 1.0, "maxY": 1047.5555555555554, "series": [{"data": [[2.0, 52.25], [3.0, 78.5], [4.0, 69.0], [5.0, 166.14285714285717], [6.0, 89.0], [7.0, 363.0], [8.0, 137.25], [10.0, 594.1666666666666], [11.0, 118.0], [12.0, 94.46153846153845], [13.0, 63.9032258064516], [14.0, 55.973684210526315], [15.0, 83.4375], [16.0, 58.83333333333334], [17.0, 74.17948717948718], [18.0, 54.800000000000004], [19.0, 55.60975609756099], [20.0, 74.96666666666667], [21.0, 68.53191489361703], [22.0, 93.63157894736842], [23.0, 70.95238095238098], [24.0, 64.5], [25.0, 96.65573770491804], [26.0, 73.5], [27.0, 73.77551020408163], [28.0, 103.14754098360655], [29.0, 91.09999999999998], [30.0, 101.42592592592592], [31.0, 108.35483870967742], [32.0, 164.3076923076923], [33.0, 108.83783783783784], [34.0, 84.99999999999999], [35.0, 105.59574468085107], [36.0, 126.35000000000004], [37.0, 126.25000000000001], [38.0, 104.81818181818181], [39.0, 93.25000000000004], [40.0, 128.65454545454548], [41.0, 129.85000000000002], [42.0, 217.2592592592593], [43.0, 182.00000000000003], [44.0, 215.95238095238093], [45.0, 229.62264150943395], [46.0, 190.83333333333337], [47.0, 202.34375000000003], [48.0, 198.33333333333334], [49.0, 206.74074074074076], [50.0, 251.3947368421053], [51.0, 220.58974358974356], [52.0, 233.02777777777774], [53.0, 193.51612903225808], [54.0, 244.77500000000003], [55.0, 220.28125000000006], [56.0, 203.50000000000003], [57.0, 232.12121212121215], [58.0, 246.67741935483878], [59.0, 256.2888888888889], [60.0, 232.2352941176471], [61.0, 261.28260869565224], [62.0, 237.49999999999997], [63.0, 276.5869565217392], [64.0, 246.04347826086953], [65.0, 263.06896551724145], [66.0, 232.58823529411762], [67.0, 279.77419354838713], [68.0, 268.5135135135135], [69.0, 278.2820512820513], [70.0, 216.4222222222222], [71.0, 304.2285714285714], [72.0, 350.7096774193549], [73.0, 321.29333333333324], [74.0, 304.2686567164179], [75.0, 340.825396825397], [76.0, 297.30434782608717], [77.0, 260.5357142857143], [78.0, 283.53333333333336], [79.0, 315.17857142857144], [80.0, 351.0322580645162], [81.0, 293.8157894736843], [82.0, 340.05555555555554], [83.0, 241.70370370370364], [84.0, 334.29629629629636], [85.0, 389.9189189189189], [86.0, 310.6756756756757], [87.0, 309.03125000000006], [88.0, 352.91666666666674], [89.0, 245.68749999999997], [90.0, 443.1999999999999], [91.0, 435.96610169491527], [92.0, 303.375], [93.0, 425.08], [94.0, 482.6296296296295], [95.0, 451.3076923076924], [96.0, 514.2105263157895], [97.0, 421.342105263158], [98.0, 450.13513513513504], [99.0, 484.2089552238806], [100.0, 446.16901408450707], [101.0, 349.948717948718], [102.0, 464.57037037037037], [103.0, 427.2459016393444], [104.0, 456.4615384615384], [105.0, 447.8113207547169], [106.0, 414.52941176470586], [107.0, 419.1282051282051], [108.0, 343.655172413793], [109.0, 452.5972222222223], [110.0, 493.34177215189885], [111.0, 468.7], [112.0, 370.91666666666663], [113.0, 517.4077669902914], [114.0, 550.5483870967743], [115.0, 518.3194444444443], [116.0, 428.86956521739125], [117.0, 481.48979591836735], [118.0, 483.7999999999999], [119.0, 508.3750000000001], [120.0, 491.0238095238095], [121.0, 494.3499999999999], [122.0, 584.2087912087915], [123.0, 568.7391304347826], [124.0, 505.77083333333337], [125.0, 432.6428571428571], [126.0, 555.9740259740261], [127.0, 516.1037735849058], [128.0, 536.4657534246577], [129.0, 488.66153846153844], [130.0, 563.7642857142858], [131.0, 553.5365853658536], [132.0, 482.6], [133.0, 510.72881355932213], [134.0, 562.6899224806199], [135.0, 516.4285714285714], [136.0, 572.4758064516128], [137.0, 548.1428571428571], [138.0, 552.4603174603176], [139.0, 611.5963302752297], [140.0, 567.6162790697675], [141.0, 595.6612903225805], [142.0, 614.6481481481477], [143.0, 602.0841584158414], [144.0, 597.722222222222], [145.0, 617.0625], [146.0, 634.7999999999998], [147.0, 521.8205128205128], [148.0, 594.3118279569895], [149.0, 597.9782608695651], [150.0, 676.3622448979588], [151.0, 656.578947368421], [152.0, 610.6627906976745], [153.0, 611.859375], [154.0, 675.7575757575759], [155.0, 661.7450980392163], [156.0, 678.7814207650275], [157.0, 688.119402985075], [158.0, 613.6499999999997], [159.0, 726.6923076923076], [160.0, 726.8792569659444], [161.0, 770.111111111111], [162.0, 774.5073313782995], [163.0, 718.8756756756753], [164.0, 615.6800000000001], [165.0, 653.5684210526317], [166.0, 752.6208791208793], [167.0, 671.5128205128204], [168.0, 772.6758620689656], [169.0, 757.596226415094], [170.0, 794.7205240174675], [171.0, 906.748235294117], [172.0, 946.089552238806], [173.0, 840.1528545119702], [174.0, 767.6842105263158], [175.0, 740.5051546391753], [176.0, 756.4144144144144], [177.0, 780.4355971896954], [178.0, 813.6209850107065], [179.0, 914.6869300911854], [180.0, 1047.5555555555554], [181.0, 782.6618037135281], [182.0, 754.5977528089884], [183.0, 742.9378238341969], [184.0, 621.5853658536586], [185.0, 800.780346820809], [186.0, 775.2004048583001], [187.0, 727.5], [188.0, 770.2306122448981], [189.0, 757.8345864661652], [190.0, 800.9682539682541], [191.0, 719.7735849056603], [192.0, 736.7142857142854], [193.0, 764.4864864864863], [194.0, 844.7291666666667], [195.0, 833.3790322580643], [196.0, 743.0135135135137], [197.0, 815.5375000000006], [198.0, 692.1162790697674], [199.0, 761.2053571428573], [200.0, 751.630753977618], [1.0, 46.0]], "isOverall": false, "label": "GET All employees", "isController": false}, {"data": [[172.91695000000183, 691.6177999999946]], "isOverall": false, "label": "GET All employees-Aggregated", "isController": false}, {"data": [[2.0, 43.5], [3.0, 12.0], [4.0, 8.0], [5.0, 10.5], [7.0, 204.66666666666669], [8.0, 5.333333333333333], [10.0, 153.6], [12.0, 75.24137931034485], [13.0, 7.0], [14.0, 7.972972972972973], [15.0, 54.4], [16.0, 12.078947368421055], [17.0, 8.128205128205128], [18.0, 6.212765957446809], [19.0, 6.311111111111111], [20.0, 6.172413793103448], [21.0, 6.122448979591837], [22.0, 6.232142857142858], [23.0, 13.75], [24.0, 11.734693877551017], [25.0, 5.566666666666667], [26.0, 5.877551020408164], [27.0, 6.808510638297872], [28.0, 5.67741935483871], [29.0, 7.833333333333335], [30.0, 6.272727272727272], [31.0, 8.333333333333336], [32.0, 44.26315789473685], [33.0, 30.285714285714292], [34.0, 6.9183673469387745], [35.0, 6.239130434782608], [36.0, 5.533333333333333], [37.0, 6.1914893617021285], [38.0, 8.093023255813952], [39.0, 8.333333333333332], [40.0, 6.796296296296295], [41.0, 12.21951219512195], [42.0, 5.309090909090909], [43.0, 6.653846153846153], [44.0, 30.357142857142872], [45.0, 5.653061224489796], [46.0, 6.321428571428569], [47.0, 7.032258064516128], [48.0, 31.09090909090909], [49.0, 18.96551724137931], [50.0, 5.945945945945946], [51.0, 5.05128205128205], [52.0, 7.486486486486487], [53.0, 7.566666666666666], [54.0, 7.333333333333334], [55.0, 8.064516129032258], [56.0, 14.46153846153846], [57.0, 5.09090909090909], [58.0, 6.451612903225806], [59.0, 7.022222222222222], [60.0, 6.314285714285715], [61.0, 5.577777777777779], [62.0, 6.870967741935483], [63.0, 5.30232558139535], [64.0, 10.574468085106382], [65.0, 6.400000000000001], [66.0, 6.5], [67.0, 7.516129032258062], [68.0, 10.789473684210527], [69.0, 8.039473684210527], [70.0, 6.34090909090909], [71.0, 12.045454545454543], [72.0, 7.153846153846153], [73.0, 5.945205479452054], [74.0, 9.999999999999998], [75.0, 7.016666666666669], [76.0, 17.411764705882348], [77.0, 5.035714285714286], [78.0, 5.105263157894737], [79.0, 8.727272727272732], [80.0, 7.275862068965517], [81.0, 12.64864864864865], [82.0, 15.636363636363644], [83.0, 5.481481481481483], [84.0, 7.695652173913042], [85.0, 10.833333333333336], [86.0, 18.864864864864867], [87.0, 24.666666666666657], [88.0, 9.545454545454543], [89.0, 34.77142857142857], [90.0, 6.48936170212766], [91.0, 6.087719298245614], [92.0, 6.562499999999999], [93.0, 6.115384615384617], [94.0, 5.107142857142858], [95.0, 10.631578947368423], [96.0, 6.461538461538462], [97.0, 5.1891891891891895], [98.0, 6.693333333333336], [99.0, 5.393939393939395], [100.0, 7.771428571428569], [101.0, 9.575000000000005], [102.0, 6.111111111111111], [103.0, 5.393442622950819], [104.0, 12.500000000000004], [105.0, 5.980392156862745], [106.0, 18.38235294117647], [107.0, 7.599999999999999], [108.0, 4.862068965517241], [109.0, 5.314285714285714], [110.0, 5.812500000000001], [111.0, 7.980000000000001], [112.0, 7.75], [113.0, 7.884615384615379], [114.0, 7.593548387096776], [115.0, 5.750000000000001], [116.0, 6.0], [117.0, 18.369565217391308], [118.0, 5.787234042553192], [119.0, 14.57894736842105], [120.0, 8.317073170731708], [121.0, 6.146341463414636], [122.0, 6.344444444444447], [123.0, 7.314285714285717], [124.0, 6.041666666666667], [125.0, 6.790697674418604], [126.0, 5.454545454545455], [127.0, 5.355769230769231], [128.0, 5.986666666666666], [129.0, 11.746031746031747], [130.0, 15.88652482269503], [131.0, 14.682926829268297], [132.0, 6.314285714285716], [133.0, 8.207547169811319], [134.0, 6.7846153846153845], [135.0, 11.599999999999998], [136.0, 6.777777777777779], [137.0, 6.101694915254238], [138.0, 5.835820895522388], [139.0, 8.372727272727273], [140.0, 4.8809523809523805], [141.0, 5.301587301587302], [142.0, 5.870370370370372], [143.0, 9.27227722772277], [144.0, 7.972222222222229], [145.0, 11.197530864197534], [146.0, 8.932432432432432], [147.0, 6.375000000000001], [148.0, 5.402173913043478], [149.0, 5.531914893617023], [150.0, 7.387755102040815], [151.0, 5.105263157894736], [152.0, 5.776470588235291], [153.0, 8.78125], [154.0, 6.0307692307692315], [155.0, 6.721153846153846], [156.0, 11.054644808743172], [157.0, 6.3235294117647065], [158.0, 5.423076923076924], [159.0, 6.3055555555555545], [160.0, 9.716510903426789], [161.0, 5.604651162790696], [162.0, 6.334310850439883], [163.0, 104.92432432432442], [164.0, 6.454545454545455], [165.0, 9.019801980198022], [166.0, 74.86991869918701], [167.0, 14.0], [168.0, 41.08532423208194], [169.0, 25.458333333333336], [170.0, 8.49339207048458], [171.0, 7.341981132075474], [172.0, 12.866666666666667], [173.0, 6.752767527675278], [174.0, 6.179577464788733], [175.0, 7.259640102827766], [176.0, 6.560747663551402], [177.0, 9.701631701631715], [178.0, 6.148387096774194], [179.0, 7.0785498489425995], [180.0, 7.539682539682543], [181.0, 8.249001331557936], [182.0, 13.035955056179775], [183.0, 5.093264248704662], [184.0, 6.829268292682928], [185.0, 6.452966714905936], [186.0, 6.048484848484852], [187.0, 27.206185567010316], [188.0, 10.193877551020403], [189.0, 26.059701492537286], [190.0, 6.444444444444446], [191.0, 24.037735849056606], [192.0, 6.390625], [193.0, 119.91666666666663], [194.0, 5.224489795918368], [195.0, 7.264], [196.0, 5.4657534246575326], [197.0, 6.863354037267082], [198.0, 5.6046511627907005], [199.0, 8.031249999999996], [200.0, 13.023178964263874]], "isOverall": false, "label": "GET thread name", "isController": false}, {"data": [[172.91942500000124, 12.501699999999923]], "isOverall": false, "label": "GET thread name-Aggregated", "isController": false}, {"data": [[2.0, 6.0], [4.0, 111.16666666666666], [5.0, 128.0], [7.0, 7.833333333333333], [8.0, 8.0], [10.0, 479.8], [11.0, 7.0], [12.0, 10.846153846153847], [13.0, 12.030303030303031], [14.0, 12.857142857142856], [15.0, 51.76470588235294], [16.0, 19.175000000000004], [17.0, 21.476190476190474], [18.0, 14.243902439024392], [19.0, 14.119999999999996], [20.0, 21.107142857142858], [21.0, 23.979999999999993], [22.0, 30.792452830188683], [23.0, 30.74358974358975], [24.0, 25.638297872340424], [25.0, 35.62499999999999], [26.0, 33.404761904761905], [27.0, 33.32], [28.0, 43.95384615384616], [29.0, 40.07142857142857], [30.0, 37.88333333333334], [31.0, 70.09375000000001], [32.0, 102.78260869565219], [33.0, 61.69444444444444], [34.0, 48.69999999999999], [35.0, 44.06666666666666], [36.0, 65.8], [37.0, 54.395833333333336], [38.0, 55.88095238095238], [39.0, 51.95555555555556], [40.0, 60.5686274509804], [41.0, 93.73809523809523], [42.0, 111.15555555555554], [43.0, 106.19230769230768], [44.0, 104.20689655172413], [45.0, 143.54545454545456], [46.0, 122.10344827586209], [47.0, 108.11764705882355], [48.0, 94.88571428571427], [49.0, 98.32142857142858], [50.0, 194.55882352941177], [51.0, 104.20000000000002], [52.0, 125.04], [53.0, 134.53846153846155], [54.0, 136.45652173913047], [55.0, 147.23999999999998], [56.0, 112.14285714285715], [57.0, 155.625], [58.0, 199.00000000000006], [59.0, 154.16666666666669], [60.0, 148.63157894736835], [61.0, 189.47058823529412], [62.0, 135.40625000000003], [63.0, 232.04761904761904], [64.0, 171.4655172413793], [65.0, 162.80000000000004], [66.0, 159.1212121212121], [67.0, 194.95833333333331], [68.0, 155.7297297297297], [69.0, 243.28915662650604], [70.0, 162.33333333333331], [71.0, 142.87500000000003], [72.0, 296.906976744186], [73.0, 147.83673469387756], [74.0, 203.91860465116275], [75.0, 241.57446808510636], [76.0, 292.8666666666666], [77.0, 185.38888888888889], [78.0, 282.48275862068965], [79.0, 193.62068965517244], [80.0, 216.7619047619048], [81.0, 210.49999999999997], [82.0, 242.67647058823528], [83.0, 205.82352941176464], [84.0, 279.5], [85.0, 302.7586206896552], [86.0, 213.58536585365857], [87.0, 241.73333333333332], [88.0, 268.19999999999993], [89.0, 184.15625], [90.0, 339.80952380952374], [91.0, 282.59615384615375], [92.0, 262.33333333333337], [93.0, 407.52941176470586], [94.0, 365.4864864864866], [95.0, 308.9555555555555], [96.0, 375.5800000000001], [97.0, 360.80645161290323], [98.0, 361.61176470588236], [99.0, 394.06818181818187], [100.0, 326.2967032967034], [101.0, 277.0], [102.0, 378.3880597014926], [103.0, 347.1851851851852], [104.0, 346.10769230769233], [105.0, 341.09999999999997], [106.0, 348.0666666666667], [107.0, 337.6181818181819], [108.0, 270.0], [109.0, 355.6231884057971], [110.0, 423.88888888888874], [111.0, 355.26984126984127], [112.0, 330.74999999999994], [113.0, 423.97894736842096], [114.0, 431.32026143790847], [115.0, 422.53030303030283], [116.0, 328.2758620689656], [117.0, 375.3396226415095], [118.0, 409.5714285714286], [119.0, 357.5614035087719], [120.0, 402.41176470588243], [121.0, 397.43750000000006], [122.0, 489.9411764705882], [123.0, 473.94594594594594], [124.0, 413.52000000000004], [125.0, 399.12765957446805], [126.0, 449.0416666666668], [127.0, 450.7717391304348], [128.0, 454.9886363636363], [129.0, 401.7968750000001], [130.0, 499.99248120300757], [131.0, 438.8780487804878], [132.0, 372.3030303030303], [133.0, 430.2666666666667], [134.0, 481.73770491803276], [135.0, 495.02173913043487], [136.0, 470.93700787401593], [137.0, 467.87878787878793], [138.0, 436.438596491228], [139.0, 497.5172413793104], [140.0, 493.36764705882354], [141.0, 505.42307692307696], [142.0, 538.893805309734], [143.0, 524.2365591397851], [144.0, 512.3904761904761], [145.0, 531.3048780487808], [146.0, 513.6894409937887], [147.0, 421.48837209302326], [148.0, 515.011627906977], [149.0, 479.1470588235294], [150.0, 576.6048780487804], [151.0, 493.8135593220339], [152.0, 502.6020408163266], [153.0, 523.2686567164179], [154.0, 622.0400000000001], [155.0, 557.6489361702126], [156.0, 589.6067415730339], [157.0, 548.3536585365854], [158.0, 501.2282608695653], [159.0, 630.0588235294117], [160.0, 619.6823899371071], [161.0, 654.864516129032], [162.0, 651.3383233532935], [163.0, 585.2060301507539], [164.0, 487.63157894736844], [165.0, 607.6730769230769], [166.0, 646.5936599423628], [167.0, 581.0740740740741], [168.0, 677.8655172413798], [169.0, 650.7750865051898], [170.0, 668.8189655172412], [171.0, 804.5741626794262], [172.0, 813.4060150375939], [173.0, 714.326295585413], [174.0, 662.7735191637631], [175.0, 652.6463414634147], [176.0, 627.5000000000001], [177.0, 681.1485849056608], [178.0, 685.7654867256634], [179.0, 824.4011799410029], [180.0, 881.018970189702], [181.0, 683.6040540540544], [182.0, 652.6688453159038], [183.0, 629.7358490566036], [184.0, 511.79999999999995], [185.0, 697.8017621145374], [186.0, 676.6263048016702], [187.0, 644.9891304347827], [188.0, 659.5258799171843], [189.0, 656.7595818815331], [190.0, 675.9343065693433], [191.0, 647.5714285714288], [192.0, 643.2909090909089], [193.0, 707.2], [194.0, 718.1206896551723], [195.0, 737.1228070175442], [196.0, 651.953125], [197.0, 694.7094972067039], [198.0, 577.9722222222222], [199.0, 670.6418604651166], [200.0, 657.126777195217]], "isOverall": false, "label": "GET employee by id", "isController": false}, {"data": [[172.92217500000015, 595.1078250000045]], "isOverall": false, "label": "GET employee by id-Aggregated", "isController": false}, {"data": [[2.0, 10.0], [3.0, 163.33333333333331], [4.0, 11.0], [5.0, 13.0], [7.0, 366.7142857142857], [8.0, 8.333333333333334], [10.0, 8.0], [11.0, 24.0], [12.0, 59.84615384615386], [13.0, 21.94285714285714], [14.0, 20.631578947368425], [15.0, 59.00000000000001], [16.0, 22.416666666666664], [17.0, 26.307692307692307], [18.0, 24.208333333333332], [19.0, 22.608695652173914], [20.0, 30.32203389830508], [21.0, 30.282608695652176], [22.0, 42.25454545454545], [23.0, 39.824999999999996], [24.0, 31.61702127659574], [25.0, 44.725806451612904], [26.0, 37.75], [27.0, 39.81250000000001], [28.0, 53.83076923076922], [29.0, 52.87755102040815], [30.0, 49.81132075471698], [31.0, 72.93548387096774], [32.0, 109.05555555555557], [33.0, 70.93478260869566], [34.0, 57.02173913043477], [35.0, 61.978260869565226], [36.0, 77.97014925373135], [37.0, 78.96000000000001], [38.0, 59.277777777777786], [39.0, 68.50000000000001], [40.0, 72.93023255813955], [41.0, 75.22857142857144], [42.0, 139.76363636363635], [43.0, 115.44000000000003], [44.0, 133.7166666666667], [45.0, 138.99999999999994], [46.0, 119.32142857142857], [47.0, 117.45833333333334], [48.0, 121.61764705882354], [49.0, 113.41463414634147], [50.0, 203.96969696969694], [51.0, 118.36111111111109], [52.0, 147.9761904761905], [53.0, 135.57142857142858], [54.0, 146.8684210526316], [55.0, 170.63157894736847], [56.0, 128.23333333333332], [57.0, 164.07894736842104], [58.0, 199.62068965517247], [59.0, 169.70588235294116], [60.0, 160.27777777777783], [61.0, 173.17777777777772], [62.0, 185.1081081081081], [63.0, 195.06249999999997], [64.0, 181.69230769230768], [65.0, 181.94871794871798], [66.0, 177.45454545454547], [67.0, 196.55555555555554], [68.0, 200.77272727272725], [69.0, 232.5757575757575], [70.0, 257.9838709677419], [71.0, 198.27272727272728], [72.0, 338.5], [73.0, 256.27906976744197], [74.0, 318.2499999999999], [75.0, 274.8260869565218], [76.0, 245.3023255813953], [77.0, 203.5], [78.0, 236.0], [79.0, 248.91549295774655], [80.0, 245.81481481481487], [81.0, 311.60526315789474], [82.0, 231.33333333333331], [83.0, 210.75000000000003], [84.0, 259.2777777777777], [85.0, 283.9722222222223], [86.0, 243.34615384615387], [87.0, 261.46153846153845], [88.0, 290.360655737705], [89.0, 246.53846153846158], [90.0, 334.9333333333333], [91.0, 310.94827586206895], [92.0, 277.42857142857144], [93.0, 386.3333333333333], [94.0, 418.97297297297297], [95.0, 366.7027027027028], [96.0, 379.53731343283584], [97.0, 324.5199999999999], [98.0, 371.264705882353], [99.0, 413.1], [100.0, 356.9518072289157], [101.0, 283.59375], [102.0, 373.46376811594223], [103.0, 360.4200000000001], [104.0, 350.44285714285706], [105.0, 382.4666666666667], [106.0, 308.12], [107.0, 357.37499999999994], [108.0, 270.6190476190476], [109.0, 371.016393442623], [110.0, 426.1898734177215], [111.0, 362.49206349206344], [112.0, 327.9473684210526], [113.0, 432.5858585858587], [114.0, 441.7933333333332], [115.0, 424.45882352941186], [116.0, 328.5681818181818], [117.0, 411.8837209302325], [118.0, 416.9130434782608], [119.0, 410.06349206349205], [120.0, 418.6530612244898], [121.0, 391.8695652173913], [122.0, 490.34782608695645], [123.0, 494.5925925925925], [124.0, 423.0888888888889], [125.0, 403.0476190476191], [126.0, 454.64935064935065], [127.0, 451.14999999999986], [128.0, 457.3488372093023], [129.0, 442.69696969696975], [130.0, 516.0082644628098], [131.0, 468.87804878048775], [132.0, 406.8809523809524], [133.0, 462.2857142857143], [134.0, 490.13636363636374], [135.0, 482.1111111111111], [136.0, 476.359375], [137.0, 471.64516129032256], [138.0, 457.1698113207548], [139.0, 510.3495934959351], [140.0, 497.0506329113926], [141.0, 468.5245901639344], [142.0, 527.6912442396314], [143.0, 552.9591836734699], [144.0, 528.9142857142858], [145.0, 515.9782608695651], [146.0, 521.6506024096385], [147.0, 458.00000000000006], [148.0, 530.8333333333333], [149.0, 492.99999999999994], [150.0, 561.3915094339623], [151.0, 503.0779220779222], [152.0, 524.1805555555557], [153.0, 511.8281250000001], [154.0, 622.9444444444446], [155.0, 573.082474226804], [156.0, 591.4744897959181], [157.0, 570.6071428571429], [158.0, 523.0602409638553], [159.0, 651.1111111111112], [160.0, 619.8987341772153], [161.0, 667.4868421052632], [162.0, 658.5028089887641], [163.0, 607.0404040404038], [164.0, 534.1489361702128], [165.0, 577.8160919540228], [166.0, 667.768361581921], [167.0, 568.96875], [168.0, 674.7845659163987], [169.0, 662.7032967032969], [170.0, 685.7945205479455], [171.0, 828.4564705882351], [172.0, 907.7310924369742], [173.0, 733.0952380952383], [174.0, 679.486111111111], [175.0, 664.8839506172842], [176.0, 661.7606837606837], [177.0, 682.1491442542791], [178.0, 722.2413793103451], [179.0, 841.4622641509446], [180.0, 919.1477572559369], [181.0, 689.1851851851845], [182.0, 665.8074398249461], [183.0, 646.5050505050505], [184.0, 536.236842105263], [185.0, 724.7884615384615], [186.0, 693.8965517241379], [187.0, 644.2717391304346], [188.0, 687.5568627450982], [189.0, 679.7414448669202], [190.0, 703.0141843971634], [191.0, 701.2500000000002], [192.0, 684.1914893617021], [193.0, 694.8399999999999], [194.0, 758.9310344827585], [195.0, 735.1276595744679], [196.0, 659.2957746478874], [197.0, 719.593939393939], [198.0, 611.1855670103092], [199.0, 706.9855769230774], [200.0, 680.9027522069573]], "isOverall": false, "label": "POST employee", "isController": false}, {"data": [[172.92197500000117, 615.5653249999996]], "isOverall": false, "label": "POST employee-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 200.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 9191.916666666666, "minX": 1.7347071E12, "maxY": 509923.68333333335, "series": [{"data": [[1.73470722E12, 485258.4], [1.73470752E12, 397430.63333333336], [1.7347074E12, 427392.15], [1.73470758E12, 54705.98333333333], [1.7347071E12, 132742.75], [1.73470728E12, 468246.25], [1.73470746E12, 366709.7], [1.73470716E12, 509923.68333333335], [1.73470734E12, 448025.9166666667]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.73470722E12, 85788.18333333333], [1.73470752E12, 69834.93333333333], [1.7347074E12, 75544.0], [1.73470758E12, 9191.916666666666], [1.7347071E12, 23833.95], [1.73470728E12, 82886.51666666666], [1.73470746E12, 64819.333333333336], [1.73470716E12, 91082.46666666666], [1.73470734E12, 79203.95]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.73470758E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 7.496611318197223, "minX": 1.7347071E12, "maxY": 850.2651413189758, "series": [{"data": [[1.73470722E12, 727.3569371505996], [1.73470752E12, 644.0320247933868], [1.7347074E12, 795.7360015393507], [1.73470758E12, 279.49406528189917], [1.7347071E12, 111.87982565379819], [1.73470728E12, 752.0075518089228], [1.73470746E12, 850.2651413189758], [1.73470716E12, 544.7300970873788], [1.73470734E12, 791.4218061673997]], "isOverall": false, "label": "GET All employees", "isController": false}, {"data": [[1.73470722E12, 7.496611318197223], [1.73470752E12, 14.71227406473305], [1.7347074E12, 7.83433095192124], [1.73470758E12, 7.900840336134451], [1.7347071E12, 12.335336538461556], [1.73470728E12, 10.741221910112374], [1.73470746E12, 13.109959441189739], [1.73470716E12, 22.215155829773746], [1.73470734E12, 11.058380760051392]], "isOverall": false, "label": "GET thread name", "isController": false}, {"data": [[1.73470722E12, 641.7345658073268], [1.73470752E12, 539.8509485094862], [1.7347074E12, 690.5929493353875], [1.73470758E12, 180.92824427480926], [1.7347071E12, 58.015365703749204], [1.73470728E12, 653.853983853985], [1.73470746E12, 734.6760215536606], [1.73470716E12, 461.82409484139697], [1.73470734E12, 689.8163602941189]], "isOverall": false, "label": "GET employee by id", "isController": false}, {"data": [[1.73470722E12, 657.7858839497812], [1.73470752E12, 547.8674598204976], [1.7347074E12, 716.0480231436845], [1.73470758E12, 225.20583468395455], [1.7347071E12, 68.17061323618701], [1.73470728E12, 687.0496404139612], [1.73470746E12, 753.357142857143], [1.73470716E12, 481.12768667409637], [1.73470734E12, 711.3536450662723]], "isOverall": false, "label": "POST employee", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.73470758E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 7.493730938664858, "minX": 1.7347071E12, "maxY": 850.0127860026942, "series": [{"data": [[1.73470722E12, 726.9767914619657], [1.73470752E12, 643.6882231404962], [1.7347074E12, 795.4725803348082], [1.73470758E12, 278.63204747774546], [1.7347071E12, 111.60585305105857], [1.73470728E12, 751.1299613628371], [1.73470746E12, 850.0127860026942], [1.73470716E12, 544.4711974110049], [1.73470734E12, 791.1350954478709]], "isOverall": false, "label": "GET All employees", "isController": false}, {"data": [[1.73470722E12, 7.493730938664858], [1.73470752E12, 14.709751996637278], [1.7347074E12, 7.831048464954606], [1.73470758E12, 7.897478991596634], [1.7347071E12, 12.32271634615385], [1.73470728E12, 10.737886235955065], [1.73470746E12, 13.105227579991], [1.73470716E12, 22.211358962189543], [1.73470734E12, 11.05581053791075]], "isOverall": false, "label": "GET thread name", "isController": false}, {"data": [[1.73470722E12, 641.6087177747636], [1.73470752E12, 539.7119032728798], [1.7347074E12, 690.4411481410139], [1.73470758E12, 180.6564885496183], [1.7347071E12, 57.848186846957596], [1.73470728E12, 653.6800631800646], [1.73470746E12, 734.5532105972151], [1.73470716E12, 461.6927266901641], [1.73470734E12, 689.6928308823525]], "isOverall": false, "label": "GET employee by id", "isController": false}, {"data": [[1.73470722E12, 657.6330166270758], [1.73470752E12, 547.6944270507199], [1.7347074E12, 715.9191899710737], [1.73470758E12, 224.53970826580212], [1.7347071E12, 67.99028536733454], [1.73470728E12, 686.7570601648811], [1.73470746E12, 753.2050763701715], [1.73470716E12, 480.9735710874063], [1.73470734E12, 711.2122606774676]], "isOverall": false, "label": "POST employee", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.73470758E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.7347071E12, "maxY": 14.913304856826434, "series": [{"data": [[1.73470722E12, 0.002879891580552262], [1.73470752E12, 0.013016528925619835], [1.7347074E12, 0.0013469309216855927], [1.73470758E12, 0.025222551928783383], [1.7347071E12, 0.0], [1.73470728E12, 0.004039339655778008], [1.73470746E12, 0.01121579183490354], [1.73470716E12, 0.0], [1.73470734E12, 0.0020190895741556496]], "isOverall": false, "label": "GET All employees", "isController": false}, {"data": [[1.73470722E12, 0.6409691629955955], [1.73470752E12, 7.249684741488027], [1.7347074E12, 0.289824290403552], [1.73470758E12, 0.0], [1.7347071E12, 2.668269230769234], [1.73470728E12, 0.3720154494382014], [1.73470746E12, 5.5666967102298335], [1.73470716E12, 14.913304856826434], [1.73470734E12, 0.5803194418946215]], "isOverall": false, "label": "GET thread name", "isController": false}, {"data": [[1.73470722E12, 6.784260515603781E-4], [1.73470752E12, 0.0018761726078799232], [1.7347074E12, 7.705644384511639E-4], [1.73470758E12, 0.0], [1.7347071E12, 0.0], [1.73470728E12, 8.775008775008772E-4], [1.73470746E12, 0.0026942074539739566], [1.73470716E12, 0.0], [1.73470734E12, 0.0011029411764705917]], "isOverall": false, "label": "GET employee by id", "isController": false}, {"data": [[1.73470722E12, 0.0], [1.73470752E12, 0.0], [1.7347074E12, 0.0], [1.73470758E12, 0.0], [1.7347071E12, 0.0], [1.73470728E12, 0.0], [1.73470746E12, 0.0], [1.73470716E12, 0.0], [1.73470734E12, 0.0]], "isOverall": false, "label": "POST employee", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.73470758E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.7347071E12, "maxY": 11232.0, "series": [{"data": [[1.73470722E12, 1982.0], [1.73470752E12, 11221.0], [1.7347074E12, 2195.0], [1.73470758E12, 796.0], [1.7347071E12, 1040.0], [1.73470728E12, 2016.0], [1.73470746E12, 7174.0], [1.73470716E12, 11232.0], [1.73470734E12, 2143.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.73470722E12, 1.0], [1.73470752E12, 1.0], [1.7347074E12, 1.0], [1.73470758E12, 1.0], [1.7347071E12, 1.0], [1.73470728E12, 1.0], [1.73470746E12, 1.0], [1.73470716E12, 1.0], [1.73470734E12, 1.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.73470722E12, 774.9000000000015], [1.73470752E12, 717.0], [1.7347074E12, 844.0], [1.73470758E12, 359.0], [1.7347071E12, 149.0], [1.73470728E12, 798.0], [1.73470746E12, 928.0], [1.73470716E12, 692.0], [1.73470734E12, 829.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.73470722E12, 1230.950000000008], [1.73470752E12, 966.7800000000061], [1.7347074E12, 1304.950000000008], [1.73470758E12, 685.7399999999998], [1.7347071E12, 254.0], [1.73470728E12, 1258.9900000000016], [1.73470746E12, 1449.9700000000012], [1.73470716E12, 1020.950000000008], [1.73470734E12, 1326.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.73470722E12, 643.0], [1.73470752E12, 523.0], [1.7347074E12, 689.0], [1.73470758E12, 160.0], [1.7347071E12, 45.5], [1.73470728E12, 664.0], [1.73470746E12, 702.0], [1.73470716E12, 511.0], [1.73470734E12, 690.0]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.73470722E12, 814.0], [1.73470752E12, 769.0], [1.7347074E12, 891.0], [1.73470758E12, 457.0], [1.7347071E12, 185.0], [1.73470728E12, 840.0], [1.73470746E12, 1137.0], [1.73470716E12, 736.0], [1.73470734E12, 873.9500000000007]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.73470758E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 11.0, "minX": 15.0, "maxY": 1140.5, "series": [{"data": [[15.0, 12.0], [19.0, 143.0], [35.0, 11.0], [173.0, 943.0], [177.0, 979.0], [181.0, 796.0], [206.0, 1140.5], [223.0, 1132.0], [216.0, 1020.5], [229.0, 1122.0], [246.0, 49.0], [253.0, 814.0], [248.0, 886.5], [263.0, 881.0], [268.0, 143.5], [285.0, 697.0], [278.0, 786.5], [287.0, 399.0], [275.0, 788.0], [276.0, 715.5], [282.0, 738.0], [273.0, 561.0], [291.0, 689.5], [292.0, 804.0], [301.0, 697.0], [293.0, 674.5], [289.0, 67.0], [297.0, 666.0], [299.0, 641.0], [298.0, 680.0], [300.0, 286.0], [302.0, 427.0], [317.0, 704.0], [313.0, 649.0], [310.0, 576.0], [308.0, 691.5], [306.0, 711.5], [305.0, 659.0], [311.0, 446.0], [314.0, 470.0], [315.0, 530.5], [312.0, 694.5], [318.0, 579.0], [319.0, 695.0], [316.0, 708.0], [307.0, 535.5], [333.0, 404.5], [321.0, 569.0], [322.0, 669.5], [328.0, 315.5], [334.0, 591.0], [335.0, 611.5], [324.0, 660.0], [327.0, 550.0], [326.0, 731.5], [325.0, 598.5], [323.0, 494.0], [332.0, 580.0], [331.0, 620.0], [329.0, 591.0], [330.0, 667.0], [350.0, 659.0], [338.0, 627.0], [345.0, 683.0], [347.0, 667.0], [346.0, 728.5], [344.0, 641.5], [336.0, 670.5], [337.0, 650.0], [348.0, 654.0], [339.0, 539.0], [349.0, 735.0], [343.0, 693.0], [340.0, 686.5], [341.0, 644.0], [342.0, 675.0], [365.0, 687.0], [366.0, 734.0], [360.0, 673.0], [361.0, 653.0], [367.0, 639.0], [362.0, 617.0], [363.0, 670.0], [358.0, 675.5], [364.0, 663.0], [353.0, 722.0], [354.0, 680.5], [359.0, 715.0], [357.0, 673.0], [355.0, 690.0], [380.0, 682.0], [376.0, 644.5], [381.0, 676.0], [379.0, 666.0], [368.0, 669.0], [369.0, 705.0], [371.0, 627.0], [370.0, 695.0], [374.0, 640.0], [375.0, 687.0], [382.0, 668.0], [383.0, 649.0], [373.0, 674.0], [378.0, 677.0], [377.0, 672.5], [372.0, 699.0], [387.0, 594.0], [398.0, 633.0], [392.0, 613.0], [395.0, 657.0], [394.0, 653.5], [393.0, 653.0], [391.0, 663.0], [384.0, 639.0], [386.0, 692.0], [385.0, 660.5], [397.0, 644.0], [399.0, 624.0], [388.0, 645.5], [389.0, 656.0], [396.0, 623.0], [414.0, 590.5], [409.0, 525.0], [410.0, 593.0], [403.0, 645.5], [413.0, 661.0], [412.0, 642.5], [408.0, 626.0], [415.0, 574.0], [407.0, 629.0], [404.0, 645.5], [406.0, 653.0], [405.0, 634.5], [401.0, 597.0], [400.0, 643.0], [431.0, 389.0], [416.0, 543.5], [417.0, 543.0], [425.0, 512.0], [426.0, 378.0], [424.0, 553.5], [418.0, 399.0], [419.0, 580.0], [428.0, 573.0], [429.0, 594.0], [420.0, 558.5], [421.0, 635.0], [422.0, 618.5], [423.0, 599.0], [445.0, 224.0], [441.0, 110.0], [447.0, 147.0], [440.0, 218.0], [432.0, 181.0], [439.0, 563.0], [438.0, 392.5], [442.0, 363.0], [443.0, 596.0], [436.0, 338.0], [444.0, 580.5], [451.0, 194.0], [452.0, 219.5], [458.0, 432.0], [464.0, 141.0], [495.0, 22.0], [512.0, 55.0], [555.0, 437.0], [651.0, 60.0], [690.0, 31.0], [696.0, 50.0], [739.0, 20.0], [743.0, 35.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 743.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 11.0, "minX": 15.0, "maxY": 1140.5, "series": [{"data": [[15.0, 12.0], [19.0, 140.0], [35.0, 11.0], [173.0, 943.0], [177.0, 979.0], [181.0, 796.0], [206.0, 1140.5], [223.0, 1132.0], [216.0, 1020.5], [229.0, 1122.0], [246.0, 49.0], [253.0, 814.0], [248.0, 886.5], [263.0, 881.0], [268.0, 143.5], [285.0, 697.0], [278.0, 786.5], [287.0, 399.0], [275.0, 788.0], [276.0, 715.5], [282.0, 738.0], [273.0, 561.0], [291.0, 689.5], [292.0, 804.0], [301.0, 697.0], [293.0, 674.5], [289.0, 67.0], [297.0, 666.0], [299.0, 641.0], [298.0, 680.0], [300.0, 286.0], [302.0, 427.0], [317.0, 704.0], [313.0, 649.0], [310.0, 575.5], [308.0, 691.0], [306.0, 711.0], [305.0, 658.0], [311.0, 446.0], [314.0, 470.0], [315.0, 530.5], [312.0, 694.0], [318.0, 579.0], [319.0, 695.0], [316.0, 707.5], [307.0, 535.5], [333.0, 404.0], [321.0, 568.0], [322.0, 668.5], [328.0, 315.5], [334.0, 590.5], [335.0, 611.5], [324.0, 660.0], [327.0, 550.0], [326.0, 731.5], [325.0, 598.5], [323.0, 494.0], [332.0, 579.5], [331.0, 620.0], [329.0, 591.0], [330.0, 667.0], [350.0, 659.0], [338.0, 627.0], [345.0, 682.5], [347.0, 667.0], [346.0, 728.5], [344.0, 641.5], [336.0, 670.5], [337.0, 650.0], [348.0, 654.0], [339.0, 539.0], [349.0, 735.0], [343.0, 693.0], [340.0, 686.5], [341.0, 644.0], [342.0, 675.0], [365.0, 687.0], [366.0, 734.0], [360.0, 673.0], [361.0, 652.0], [367.0, 639.0], [362.0, 617.0], [363.0, 670.0], [358.0, 675.0], [364.0, 663.0], [353.0, 722.0], [354.0, 680.0], [359.0, 715.0], [357.0, 673.0], [355.0, 690.0], [380.0, 681.0], [376.0, 644.5], [381.0, 675.0], [379.0, 666.0], [368.0, 669.0], [369.0, 704.0], [371.0, 627.0], [370.0, 695.0], [374.0, 639.5], [375.0, 687.0], [382.0, 667.5], [383.0, 649.0], [373.0, 673.5], [378.0, 677.0], [377.0, 672.0], [372.0, 699.0], [387.0, 594.0], [398.0, 633.0], [392.0, 613.0], [395.0, 657.0], [394.0, 653.5], [393.0, 653.0], [391.0, 663.0], [384.0, 639.0], [386.0, 691.5], [385.0, 660.5], [397.0, 644.0], [399.0, 624.0], [388.0, 645.0], [389.0, 655.5], [396.0, 623.0], [414.0, 590.5], [409.0, 525.0], [410.0, 593.0], [403.0, 644.5], [413.0, 660.0], [412.0, 642.5], [408.0, 626.0], [415.0, 574.0], [407.0, 628.5], [404.0, 645.0], [406.0, 652.0], [405.0, 634.5], [401.0, 597.0], [400.0, 643.0], [431.0, 389.0], [416.0, 543.5], [417.0, 543.0], [425.0, 511.5], [426.0, 377.0], [424.0, 553.5], [418.0, 399.0], [419.0, 580.0], [428.0, 573.0], [429.0, 594.0], [420.0, 558.5], [421.0, 635.0], [422.0, 617.5], [423.0, 598.0], [445.0, 223.5], [441.0, 110.0], [447.0, 147.0], [440.0, 218.0], [432.0, 181.0], [439.0, 563.0], [438.0, 392.5], [442.0, 362.5], [443.0, 596.0], [436.0, 338.0], [444.0, 580.0], [451.0, 194.0], [452.0, 219.5], [458.0, 432.0], [464.0, 140.5], [495.0, 22.0], [512.0, 55.0], [555.0, 432.0], [651.0, 60.0], [690.0, 30.0], [696.0, 50.0], [739.0, 20.0], [743.0, 35.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 743.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 41.03333333333333, "minX": 1.7347071E12, "maxY": 419.43333333333334, "series": [{"data": [[1.73470722E12, 393.25], [1.73470752E12, 318.31666666666666], [1.7347074E12, 345.55], [1.73470758E12, 41.03333333333333], [1.7347071E12, 110.03333333333333], [1.73470728E12, 379.81666666666666], [1.73470746E12, 296.45], [1.73470716E12, 419.43333333333334], [1.73470734E12, 362.78333333333336]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.73470758E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 42.35, "minX": 1.7347071E12, "maxY": 417.06666666666666, "series": [{"data": [[1.73470722E12, 393.25], [1.73470752E12, 319.76666666666665], [1.7347074E12, 345.8666666666667], [1.73470758E12, 42.35], [1.7347071E12, 109.06666666666666], [1.73470728E12, 379.81666666666666], [1.73470746E12, 296.7], [1.73470716E12, 417.06666666666666], [1.73470734E12, 362.78333333333336]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.73470758E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 9.916666666666666, "minX": 1.7347071E12, "maxY": 105.35, "series": [{"data": [[1.73470722E12, 98.36666666666666], [1.73470752E12, 79.3], [1.7347074E12, 86.31666666666666], [1.73470758E12, 9.916666666666666], [1.7347071E12, 27.733333333333334], [1.73470728E12, 94.93333333333334], [1.73470746E12, 73.96666666666667], [1.73470716E12, 105.35], [1.73470734E12, 90.78333333333333]], "isOverall": false, "label": "GET thread name-success", "isController": false}, {"data": [[1.73470722E12, 98.38333333333334], [1.73470752E12, 80.66666666666667], [1.7347074E12, 86.61666666666666], [1.73470758E12, 11.233333333333333], [1.7347071E12, 26.766666666666666], [1.73470728E12, 94.9], [1.73470746E12, 74.3], [1.73470716E12, 103.0], [1.73470734E12, 90.8]], "isOverall": false, "label": "GET All employees-success", "isController": false}, {"data": [[1.73470722E12, 98.23333333333333], [1.73470752E12, 79.85], [1.7347074E12, 86.41666666666667], [1.73470758E12, 10.283333333333333], [1.7347071E12, 27.45], [1.73470728E12, 95.01666666666667], [1.73470746E12, 74.2], [1.73470716E12, 104.68333333333334], [1.73470734E12, 90.53333333333333]], "isOverall": false, "label": "POST employee-success", "isController": false}, {"data": [[1.73470722E12, 98.26666666666667], [1.73470752E12, 79.95], [1.7347074E12, 86.51666666666667], [1.73470758E12, 10.916666666666666], [1.7347071E12, 27.116666666666667], [1.73470728E12, 94.96666666666667], [1.73470746E12, 74.23333333333333], [1.73470716E12, 104.03333333333333], [1.73470734E12, 90.66666666666667]], "isOverall": false, "label": "GET employee by id-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.73470758E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 42.35, "minX": 1.7347071E12, "maxY": 417.06666666666666, "series": [{"data": [[1.73470722E12, 393.25], [1.73470752E12, 319.76666666666665], [1.7347074E12, 345.8666666666667], [1.73470758E12, 42.35], [1.7347071E12, 109.06666666666666], [1.73470728E12, 379.81666666666666], [1.73470746E12, 296.7], [1.73470716E12, 417.06666666666666], [1.73470734E12, 362.78333333333336]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.73470758E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

