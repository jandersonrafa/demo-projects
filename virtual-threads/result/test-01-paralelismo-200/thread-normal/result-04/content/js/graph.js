/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 19423.0, "series": [{"data": [[0.0, 35.0], [0.1, 48.0], [0.2, 52.0], [0.3, 57.0], [0.4, 60.0], [0.5, 64.0], [0.6, 68.0], [0.7, 73.0], [0.8, 77.0], [0.9, 81.0], [1.0, 85.0], [1.1, 89.0], [1.2, 91.0], [1.3, 95.0], [1.4, 98.0], [1.5, 101.0], [1.6, 103.0], [1.7, 106.0], [1.8, 109.0], [1.9, 111.0], [2.0, 114.0], [2.1, 117.0], [2.2, 120.0], [2.3, 122.0], [2.4, 124.0], [2.5, 127.0], [2.6, 131.0], [2.7, 135.0], [2.8, 138.0], [2.9, 142.0], [3.0, 148.0], [3.1, 152.0], [3.2, 161.0], [3.3, 171.0], [3.4, 181.0], [3.5, 188.0], [3.6, 197.0], [3.7, 209.0], [3.8, 218.0], [3.9, 225.0], [4.0, 234.0], [4.1, 245.0], [4.2, 254.0], [4.3, 263.0], [4.4, 272.0], [4.5, 281.0], [4.6, 290.0], [4.7, 300.0], [4.8, 309.0], [4.9, 320.0], [5.0, 329.0], [5.1, 336.0], [5.2, 342.0], [5.3, 345.0], [5.4, 347.0], [5.5, 352.0], [5.6, 359.0], [5.7, 366.0], [5.8, 372.0], [5.9, 379.0], [6.0, 389.0], [6.1, 396.0], [6.2, 402.0], [6.3, 409.0], [6.4, 416.0], [6.5, 423.0], [6.6, 431.0], [6.7, 435.0], [6.8, 442.0], [6.9, 449.0], [7.0, 454.0], [7.1, 463.0], [7.2, 470.0], [7.3, 478.0], [7.4, 486.0], [7.5, 494.0], [7.6, 501.0], [7.7, 508.0], [7.8, 515.0], [7.9, 521.0], [8.0, 528.0], [8.1, 534.0], [8.2, 541.0], [8.3, 546.0], [8.4, 550.0], [8.5, 555.0], [8.6, 560.0], [8.7, 565.0], [8.8, 569.0], [8.9, 573.0], [9.0, 576.0], [9.1, 580.0], [9.2, 585.0], [9.3, 590.0], [9.4, 595.0], [9.5, 600.0], [9.6, 606.0], [9.7, 611.0], [9.8, 615.0], [9.9, 618.0], [10.0, 623.0], [10.1, 628.0], [10.2, 632.0], [10.3, 638.0], [10.4, 644.0], [10.5, 649.0], [10.6, 655.0], [10.7, 661.0], [10.8, 665.0], [10.9, 671.0], [11.0, 676.0], [11.1, 681.0], [11.2, 685.0], [11.3, 689.0], [11.4, 693.0], [11.5, 697.0], [11.6, 701.0], [11.7, 705.0], [11.8, 708.0], [11.9, 711.0], [12.0, 714.0], [12.1, 717.0], [12.2, 720.0], [12.3, 723.0], [12.4, 725.0], [12.5, 727.0], [12.6, 729.0], [12.7, 731.0], [12.8, 734.0], [12.9, 736.0], [13.0, 739.0], [13.1, 741.0], [13.2, 744.0], [13.3, 747.0], [13.4, 748.0], [13.5, 751.0], [13.6, 753.0], [13.7, 755.0], [13.8, 757.0], [13.9, 759.0], [14.0, 761.0], [14.1, 764.0], [14.2, 765.0], [14.3, 767.0], [14.4, 769.0], [14.5, 771.0], [14.6, 773.0], [14.7, 775.0], [14.8, 777.0], [14.9, 778.0], [15.0, 780.0], [15.1, 782.0], [15.2, 783.0], [15.3, 785.0], [15.4, 786.0], [15.5, 788.0], [15.6, 789.0], [15.7, 790.0], [15.8, 793.0], [15.9, 795.0], [16.0, 796.0], [16.1, 798.0], [16.2, 799.0], [16.3, 801.0], [16.4, 802.0], [16.5, 804.0], [16.6, 805.0], [16.7, 807.0], [16.8, 808.0], [16.9, 809.0], [17.0, 810.0], [17.1, 811.0], [17.2, 813.0], [17.3, 814.0], [17.4, 816.0], [17.5, 817.0], [17.6, 818.0], [17.7, 819.0], [17.8, 820.0], [17.9, 821.0], [18.0, 822.0], [18.1, 823.0], [18.2, 825.0], [18.3, 826.0], [18.4, 827.0], [18.5, 828.0], [18.6, 829.0], [18.7, 830.0], [18.8, 831.0], [18.9, 832.0], [19.0, 834.0], [19.1, 835.0], [19.2, 836.0], [19.3, 837.0], [19.4, 838.0], [19.5, 839.0], [19.6, 840.0], [19.7, 841.0], [19.8, 841.0], [19.9, 842.0], [20.0, 843.0], [20.1, 844.0], [20.2, 845.0], [20.3, 845.0], [20.4, 846.0], [20.5, 847.0], [20.6, 848.0], [20.7, 849.0], [20.8, 850.0], [20.9, 851.0], [21.0, 851.0], [21.1, 852.0], [21.2, 853.0], [21.3, 854.0], [21.4, 854.0], [21.5, 855.0], [21.6, 856.0], [21.7, 857.0], [21.8, 858.0], [21.9, 858.0], [22.0, 859.0], [22.1, 860.0], [22.2, 861.0], [22.3, 861.0], [22.4, 862.0], [22.5, 863.0], [22.6, 863.0], [22.7, 864.0], [22.8, 865.0], [22.9, 866.0], [23.0, 866.0], [23.1, 867.0], [23.2, 868.0], [23.3, 868.0], [23.4, 869.0], [23.5, 869.0], [23.6, 870.0], [23.7, 871.0], [23.8, 871.0], [23.9, 872.0], [24.0, 873.0], [24.1, 873.0], [24.2, 874.0], [24.3, 874.0], [24.4, 875.0], [24.5, 876.0], [24.6, 876.0], [24.7, 877.0], [24.8, 878.0], [24.9, 878.0], [25.0, 879.0], [25.1, 879.0], [25.2, 880.0], [25.3, 880.0], [25.4, 881.0], [25.5, 881.0], [25.6, 882.0], [25.7, 883.0], [25.8, 883.0], [25.9, 884.0], [26.0, 885.0], [26.1, 885.0], [26.2, 886.0], [26.3, 886.0], [26.4, 887.0], [26.5, 888.0], [26.6, 888.0], [26.7, 889.0], [26.8, 889.0], [26.9, 890.0], [27.0, 890.0], [27.1, 891.0], [27.2, 891.0], [27.3, 892.0], [27.4, 892.0], [27.5, 893.0], [27.6, 893.0], [27.7, 894.0], [27.8, 894.0], [27.9, 895.0], [28.0, 895.0], [28.1, 896.0], [28.2, 897.0], [28.3, 897.0], [28.4, 898.0], [28.5, 898.0], [28.6, 899.0], [28.7, 899.0], [28.8, 900.0], [28.9, 900.0], [29.0, 901.0], [29.1, 901.0], [29.2, 902.0], [29.3, 902.0], [29.4, 902.0], [29.5, 903.0], [29.6, 903.0], [29.7, 904.0], [29.8, 904.0], [29.9, 905.0], [30.0, 905.0], [30.1, 906.0], [30.2, 906.0], [30.3, 907.0], [30.4, 907.0], [30.5, 908.0], [30.6, 908.0], [30.7, 908.0], [30.8, 909.0], [30.9, 909.0], [31.0, 910.0], [31.1, 910.0], [31.2, 910.0], [31.3, 911.0], [31.4, 911.0], [31.5, 912.0], [31.6, 912.0], [31.7, 913.0], [31.8, 914.0], [31.9, 914.0], [32.0, 914.0], [32.1, 915.0], [32.2, 915.0], [32.3, 916.0], [32.4, 916.0], [32.5, 917.0], [32.6, 917.0], [32.7, 918.0], [32.8, 918.0], [32.9, 918.0], [33.0, 919.0], [33.1, 919.0], [33.2, 920.0], [33.3, 920.0], [33.4, 921.0], [33.5, 921.0], [33.6, 921.0], [33.7, 922.0], [33.8, 922.0], [33.9, 923.0], [34.0, 923.0], [34.1, 923.0], [34.2, 924.0], [34.3, 924.0], [34.4, 925.0], [34.5, 925.0], [34.6, 926.0], [34.7, 926.0], [34.8, 927.0], [34.9, 927.0], [35.0, 927.0], [35.1, 928.0], [35.2, 928.0], [35.3, 929.0], [35.4, 929.0], [35.5, 929.0], [35.6, 930.0], [35.7, 930.0], [35.8, 930.0], [35.9, 931.0], [36.0, 931.0], [36.1, 932.0], [36.2, 932.0], [36.3, 932.0], [36.4, 933.0], [36.5, 933.0], [36.6, 934.0], [36.7, 934.0], [36.8, 934.0], [36.9, 935.0], [37.0, 935.0], [37.1, 935.0], [37.2, 936.0], [37.3, 936.0], [37.4, 937.0], [37.5, 937.0], [37.6, 937.0], [37.7, 938.0], [37.8, 938.0], [37.9, 938.0], [38.0, 939.0], [38.1, 939.0], [38.2, 939.0], [38.3, 940.0], [38.4, 940.0], [38.5, 940.0], [38.6, 941.0], [38.7, 941.0], [38.8, 942.0], [38.9, 942.0], [39.0, 942.0], [39.1, 943.0], [39.2, 943.0], [39.3, 943.0], [39.4, 944.0], [39.5, 944.0], [39.6, 945.0], [39.7, 945.0], [39.8, 945.0], [39.9, 946.0], [40.0, 946.0], [40.1, 946.0], [40.2, 947.0], [40.3, 947.0], [40.4, 947.0], [40.5, 948.0], [40.6, 948.0], [40.7, 948.0], [40.8, 949.0], [40.9, 949.0], [41.0, 950.0], [41.1, 950.0], [41.2, 950.0], [41.3, 950.0], [41.4, 951.0], [41.5, 951.0], [41.6, 951.0], [41.7, 952.0], [41.8, 952.0], [41.9, 953.0], [42.0, 953.0], [42.1, 953.0], [42.2, 954.0], [42.3, 954.0], [42.4, 954.0], [42.5, 955.0], [42.6, 955.0], [42.7, 955.0], [42.8, 956.0], [42.9, 956.0], [43.0, 956.0], [43.1, 957.0], [43.2, 957.0], [43.3, 957.0], [43.4, 958.0], [43.5, 958.0], [43.6, 958.0], [43.7, 959.0], [43.8, 959.0], [43.9, 959.0], [44.0, 960.0], [44.1, 960.0], [44.2, 960.0], [44.3, 961.0], [44.4, 961.0], [44.5, 962.0], [44.6, 962.0], [44.7, 962.0], [44.8, 962.0], [44.9, 963.0], [45.0, 963.0], [45.1, 963.0], [45.2, 964.0], [45.3, 964.0], [45.4, 964.0], [45.5, 965.0], [45.6, 965.0], [45.7, 965.0], [45.8, 965.0], [45.9, 966.0], [46.0, 966.0], [46.1, 966.0], [46.2, 967.0], [46.3, 967.0], [46.4, 967.0], [46.5, 967.0], [46.6, 968.0], [46.7, 968.0], [46.8, 968.0], [46.9, 969.0], [47.0, 969.0], [47.1, 969.0], [47.2, 970.0], [47.3, 970.0], [47.4, 970.0], [47.5, 970.0], [47.6, 971.0], [47.7, 971.0], [47.8, 972.0], [47.9, 972.0], [48.0, 972.0], [48.1, 973.0], [48.2, 973.0], [48.3, 973.0], [48.4, 974.0], [48.5, 974.0], [48.6, 974.0], [48.7, 975.0], [48.8, 975.0], [48.9, 975.0], [49.0, 976.0], [49.1, 976.0], [49.2, 976.0], [49.3, 977.0], [49.4, 977.0], [49.5, 977.0], [49.6, 978.0], [49.7, 978.0], [49.8, 978.0], [49.9, 979.0], [50.0, 979.0], [50.1, 979.0], [50.2, 980.0], [50.3, 980.0], [50.4, 980.0], [50.5, 980.0], [50.6, 981.0], [50.7, 981.0], [50.8, 981.0], [50.9, 982.0], [51.0, 982.0], [51.1, 982.0], [51.2, 983.0], [51.3, 983.0], [51.4, 983.0], [51.5, 984.0], [51.6, 984.0], [51.7, 984.0], [51.8, 984.0], [51.9, 985.0], [52.0, 985.0], [52.1, 985.0], [52.2, 986.0], [52.3, 986.0], [52.4, 986.0], [52.5, 987.0], [52.6, 987.0], [52.7, 987.0], [52.8, 987.0], [52.9, 988.0], [53.0, 988.0], [53.1, 988.0], [53.2, 989.0], [53.3, 989.0], [53.4, 989.0], [53.5, 990.0], [53.6, 990.0], [53.7, 990.0], [53.8, 991.0], [53.9, 991.0], [54.0, 991.0], [54.1, 991.0], [54.2, 992.0], [54.3, 992.0], [54.4, 992.0], [54.5, 993.0], [54.6, 993.0], [54.7, 993.0], [54.8, 994.0], [54.9, 994.0], [55.0, 994.0], [55.1, 995.0], [55.2, 995.0], [55.3, 995.0], [55.4, 996.0], [55.5, 996.0], [55.6, 996.0], [55.7, 996.0], [55.8, 997.0], [55.9, 997.0], [56.0, 997.0], [56.1, 998.0], [56.2, 998.0], [56.3, 998.0], [56.4, 999.0], [56.5, 999.0], [56.6, 999.0], [56.7, 1000.0], [56.8, 1000.0], [56.9, 1000.0], [57.0, 1001.0], [57.1, 1001.0], [57.2, 1001.0], [57.3, 1002.0], [57.4, 1002.0], [57.5, 1002.0], [57.6, 1002.0], [57.7, 1003.0], [57.8, 1003.0], [57.9, 1003.0], [58.0, 1004.0], [58.1, 1004.0], [58.2, 1004.0], [58.3, 1004.0], [58.4, 1005.0], [58.5, 1005.0], [58.6, 1005.0], [58.7, 1006.0], [58.8, 1006.0], [58.9, 1006.0], [59.0, 1007.0], [59.1, 1007.0], [59.2, 1007.0], [59.3, 1007.0], [59.4, 1008.0], [59.5, 1008.0], [59.6, 1008.0], [59.7, 1009.0], [59.8, 1009.0], [59.9, 1009.0], [60.0, 1010.0], [60.1, 1010.0], [60.2, 1010.0], [60.3, 1011.0], [60.4, 1011.0], [60.5, 1011.0], [60.6, 1012.0], [60.7, 1012.0], [60.8, 1012.0], [60.9, 1013.0], [61.0, 1013.0], [61.1, 1013.0], [61.2, 1014.0], [61.3, 1014.0], [61.4, 1014.0], [61.5, 1014.0], [61.6, 1015.0], [61.7, 1015.0], [61.8, 1015.0], [61.9, 1016.0], [62.0, 1016.0], [62.1, 1016.0], [62.2, 1016.0], [62.3, 1017.0], [62.4, 1017.0], [62.5, 1018.0], [62.6, 1018.0], [62.7, 1018.0], [62.8, 1019.0], [62.9, 1019.0], [63.0, 1019.0], [63.1, 1020.0], [63.2, 1020.0], [63.3, 1020.0], [63.4, 1020.0], [63.5, 1021.0], [63.6, 1021.0], [63.7, 1022.0], [63.8, 1022.0], [63.9, 1022.0], [64.0, 1023.0], [64.1, 1023.0], [64.2, 1023.0], [64.3, 1024.0], [64.4, 1024.0], [64.5, 1024.0], [64.6, 1025.0], [64.7, 1025.0], [64.8, 1025.0], [64.9, 1026.0], [65.0, 1026.0], [65.1, 1026.0], [65.2, 1026.0], [65.3, 1027.0], [65.4, 1027.0], [65.5, 1027.0], [65.6, 1028.0], [65.7, 1028.0], [65.8, 1028.0], [65.9, 1029.0], [66.0, 1029.0], [66.1, 1029.0], [66.2, 1030.0], [66.3, 1030.0], [66.4, 1030.0], [66.5, 1031.0], [66.6, 1031.0], [66.7, 1031.0], [66.8, 1032.0], [66.9, 1032.0], [67.0, 1032.0], [67.1, 1033.0], [67.2, 1033.0], [67.3, 1033.0], [67.4, 1034.0], [67.5, 1034.0], [67.6, 1034.0], [67.7, 1034.0], [67.8, 1035.0], [67.9, 1035.0], [68.0, 1035.0], [68.1, 1036.0], [68.2, 1036.0], [68.3, 1036.0], [68.4, 1037.0], [68.5, 1037.0], [68.6, 1038.0], [68.7, 1038.0], [68.8, 1038.0], [68.9, 1039.0], [69.0, 1039.0], [69.1, 1039.0], [69.2, 1040.0], [69.3, 1040.0], [69.4, 1040.0], [69.5, 1041.0], [69.6, 1041.0], [69.7, 1041.0], [69.8, 1042.0], [69.9, 1042.0], [70.0, 1042.0], [70.1, 1043.0], [70.2, 1043.0], [70.3, 1044.0], [70.4, 1044.0], [70.5, 1044.0], [70.6, 1045.0], [70.7, 1045.0], [70.8, 1045.0], [70.9, 1046.0], [71.0, 1046.0], [71.1, 1047.0], [71.2, 1047.0], [71.3, 1047.0], [71.4, 1048.0], [71.5, 1048.0], [71.6, 1048.0], [71.7, 1049.0], [71.8, 1049.0], [71.9, 1050.0], [72.0, 1050.0], [72.1, 1050.0], [72.2, 1051.0], [72.3, 1051.0], [72.4, 1051.0], [72.5, 1052.0], [72.6, 1052.0], [72.7, 1052.0], [72.8, 1053.0], [72.9, 1053.0], [73.0, 1054.0], [73.1, 1054.0], [73.2, 1054.0], [73.3, 1055.0], [73.4, 1055.0], [73.5, 1056.0], [73.6, 1056.0], [73.7, 1056.0], [73.8, 1057.0], [73.9, 1057.0], [74.0, 1057.0], [74.1, 1058.0], [74.2, 1058.0], [74.3, 1058.0], [74.4, 1059.0], [74.5, 1059.0], [74.6, 1059.0], [74.7, 1060.0], [74.8, 1060.0], [74.9, 1061.0], [75.0, 1061.0], [75.1, 1061.0], [75.2, 1062.0], [75.3, 1062.0], [75.4, 1062.0], [75.5, 1063.0], [75.6, 1063.0], [75.7, 1063.0], [75.8, 1064.0], [75.9, 1064.0], [76.0, 1065.0], [76.1, 1065.0], [76.2, 1065.0], [76.3, 1066.0], [76.4, 1066.0], [76.5, 1066.0], [76.6, 1067.0], [76.7, 1067.0], [76.8, 1068.0], [76.9, 1068.0], [77.0, 1068.0], [77.1, 1069.0], [77.2, 1069.0], [77.3, 1070.0], [77.4, 1070.0], [77.5, 1070.0], [77.6, 1071.0], [77.7, 1071.0], [77.8, 1072.0], [77.9, 1072.0], [78.0, 1072.0], [78.1, 1073.0], [78.2, 1073.0], [78.3, 1073.0], [78.4, 1074.0], [78.5, 1074.0], [78.6, 1075.0], [78.7, 1075.0], [78.8, 1076.0], [78.9, 1076.0], [79.0, 1077.0], [79.1, 1077.0], [79.2, 1078.0], [79.3, 1078.0], [79.4, 1079.0], [79.5, 1079.0], [79.6, 1079.0], [79.7, 1080.0], [79.8, 1080.0], [79.9, 1081.0], [80.0, 1081.0], [80.1, 1081.0], [80.2, 1082.0], [80.3, 1082.0], [80.4, 1082.0], [80.5, 1083.0], [80.6, 1083.0], [80.7, 1084.0], [80.8, 1084.0], [80.9, 1085.0], [81.0, 1085.0], [81.1, 1086.0], [81.2, 1086.0], [81.3, 1087.0], [81.4, 1087.0], [81.5, 1088.0], [81.6, 1088.0], [81.7, 1089.0], [81.8, 1089.0], [81.9, 1089.0], [82.0, 1090.0], [82.1, 1090.0], [82.2, 1091.0], [82.3, 1092.0], [82.4, 1092.0], [82.5, 1093.0], [82.6, 1093.0], [82.7, 1094.0], [82.8, 1094.0], [82.9, 1095.0], [83.0, 1095.0], [83.1, 1096.0], [83.2, 1096.0], [83.3, 1097.0], [83.4, 1097.0], [83.5, 1098.0], [83.6, 1098.0], [83.7, 1099.0], [83.8, 1099.0], [83.9, 1100.0], [84.0, 1100.0], [84.1, 1101.0], [84.2, 1102.0], [84.3, 1102.0], [84.4, 1103.0], [84.5, 1104.0], [84.6, 1104.0], [84.7, 1105.0], [84.8, 1105.0], [84.9, 1106.0], [85.0, 1106.0], [85.1, 1107.0], [85.2, 1108.0], [85.3, 1108.0], [85.4, 1109.0], [85.5, 1109.0], [85.6, 1110.0], [85.7, 1110.0], [85.8, 1111.0], [85.9, 1112.0], [86.0, 1112.0], [86.1, 1113.0], [86.2, 1113.0], [86.3, 1114.0], [86.4, 1115.0], [86.5, 1115.0], [86.6, 1116.0], [86.7, 1116.0], [86.8, 1117.0], [86.9, 1117.0], [87.0, 1118.0], [87.1, 1119.0], [87.2, 1119.0], [87.3, 1120.0], [87.4, 1121.0], [87.5, 1121.0], [87.6, 1122.0], [87.7, 1123.0], [87.8, 1123.0], [87.9, 1124.0], [88.0, 1125.0], [88.1, 1126.0], [88.2, 1126.0], [88.3, 1127.0], [88.4, 1127.0], [88.5, 1128.0], [88.6, 1129.0], [88.7, 1130.0], [88.8, 1130.0], [88.9, 1131.0], [89.0, 1132.0], [89.1, 1133.0], [89.2, 1134.0], [89.3, 1135.0], [89.4, 1136.0], [89.5, 1136.0], [89.6, 1137.0], [89.7, 1138.0], [89.8, 1139.0], [89.9, 1140.0], [90.0, 1141.0], [90.1, 1142.0], [90.2, 1142.0], [90.3, 1143.0], [90.4, 1144.0], [90.5, 1145.0], [90.6, 1146.0], [90.7, 1146.0], [90.8, 1147.0], [90.9, 1148.0], [91.0, 1149.0], [91.1, 1150.0], [91.2, 1151.0], [91.3, 1152.0], [91.4, 1153.0], [91.5, 1154.0], [91.6, 1155.0], [91.7, 1156.0], [91.8, 1157.0], [91.9, 1158.0], [92.0, 1160.0], [92.1, 1160.0], [92.2, 1162.0], [92.3, 1163.0], [92.4, 1164.0], [92.5, 1165.0], [92.6, 1167.0], [92.7, 1168.0], [92.8, 1169.0], [92.9, 1170.0], [93.0, 1171.0], [93.1, 1173.0], [93.2, 1173.0], [93.3, 1175.0], [93.4, 1176.0], [93.5, 1178.0], [93.6, 1179.0], [93.7, 1181.0], [93.8, 1182.0], [93.9, 1183.0], [94.0, 1185.0], [94.1, 1187.0], [94.2, 1188.0], [94.3, 1190.0], [94.4, 1192.0], [94.5, 1194.0], [94.6, 1196.0], [94.7, 1197.0], [94.8, 1199.0], [94.9, 1202.0], [95.0, 1204.0], [95.1, 1206.0], [95.2, 1208.0], [95.3, 1210.0], [95.4, 1212.0], [95.5, 1215.0], [95.6, 1217.0], [95.7, 1219.0], [95.8, 1222.0], [95.9, 1226.0], [96.0, 1228.0], [96.1, 1231.0], [96.2, 1236.0], [96.3, 1240.0], [96.4, 1245.0], [96.5, 1250.0], [96.6, 1255.0], [96.7, 1260.0], [96.8, 1263.0], [96.9, 1267.0], [97.0, 1271.0], [97.1, 1277.0], [97.2, 1281.0], [97.3, 1288.0], [97.4, 1296.0], [97.5, 1303.0], [97.6, 1311.0], [97.7, 1321.0], [97.8, 1334.0], [97.9, 1342.0], [98.0, 1362.0], [98.1, 1385.0], [98.2, 1402.0], [98.3, 1428.0], [98.4, 1452.0], [98.5, 1493.0], [98.6, 1535.0], [98.7, 1573.0], [98.8, 1632.0], [98.9, 1688.0], [99.0, 1734.0], [99.1, 1772.0], [99.2, 1807.0], [99.3, 1838.0], [99.4, 1873.0], [99.5, 1902.0], [99.6, 1931.0], [99.7, 1965.0], [99.8, 2006.0], [99.9, 2104.0]], "isOverall": false, "label": "GET All employees", "isController": false}, {"data": [[0.0, 1.0], [0.1, 1.0], [0.2, 2.0], [0.3, 2.0], [0.4, 2.0], [0.5, 2.0], [0.6, 2.0], [0.7, 2.0], [0.8, 2.0], [0.9, 2.0], [1.0, 2.0], [1.1, 2.0], [1.2, 2.0], [1.3, 2.0], [1.4, 2.0], [1.5, 2.0], [1.6, 2.0], [1.7, 2.0], [1.8, 2.0], [1.9, 2.0], [2.0, 2.0], [2.1, 2.0], [2.2, 2.0], [2.3, 2.0], [2.4, 2.0], [2.5, 2.0], [2.6, 2.0], [2.7, 2.0], [2.8, 2.0], [2.9, 2.0], [3.0, 2.0], [3.1, 2.0], [3.2, 2.0], [3.3, 2.0], [3.4, 2.0], [3.5, 2.0], [3.6, 2.0], [3.7, 2.0], [3.8, 2.0], [3.9, 2.0], [4.0, 2.0], [4.1, 2.0], [4.2, 2.0], [4.3, 2.0], [4.4, 2.0], [4.5, 2.0], [4.6, 2.0], [4.7, 2.0], [4.8, 2.0], [4.9, 2.0], [5.0, 2.0], [5.1, 2.0], [5.2, 2.0], [5.3, 2.0], [5.4, 2.0], [5.5, 2.0], [5.6, 2.0], [5.7, 2.0], [5.8, 2.0], [5.9, 2.0], [6.0, 2.0], [6.1, 2.0], [6.2, 2.0], [6.3, 2.0], [6.4, 2.0], [6.5, 2.0], [6.6, 2.0], [6.7, 2.0], [6.8, 2.0], [6.9, 2.0], [7.0, 2.0], [7.1, 2.0], [7.2, 2.0], [7.3, 2.0], [7.4, 2.0], [7.5, 2.0], [7.6, 2.0], [7.7, 2.0], [7.8, 2.0], [7.9, 2.0], [8.0, 2.0], [8.1, 2.0], [8.2, 2.0], [8.3, 2.0], [8.4, 2.0], [8.5, 2.0], [8.6, 2.0], [8.7, 2.0], [8.8, 2.0], [8.9, 2.0], [9.0, 2.0], [9.1, 2.0], [9.2, 2.0], [9.3, 2.0], [9.4, 2.0], [9.5, 2.0], [9.6, 2.0], [9.7, 2.0], [9.8, 2.0], [9.9, 3.0], [10.0, 3.0], [10.1, 3.0], [10.2, 3.0], [10.3, 3.0], [10.4, 3.0], [10.5, 3.0], [10.6, 3.0], [10.7, 3.0], [10.8, 3.0], [10.9, 3.0], [11.0, 3.0], [11.1, 3.0], [11.2, 3.0], [11.3, 3.0], [11.4, 3.0], [11.5, 3.0], [11.6, 3.0], [11.7, 3.0], [11.8, 3.0], [11.9, 3.0], [12.0, 3.0], [12.1, 3.0], [12.2, 3.0], [12.3, 3.0], [12.4, 3.0], [12.5, 3.0], [12.6, 3.0], [12.7, 3.0], [12.8, 3.0], [12.9, 3.0], [13.0, 3.0], [13.1, 3.0], [13.2, 3.0], [13.3, 3.0], [13.4, 3.0], [13.5, 3.0], [13.6, 3.0], [13.7, 3.0], [13.8, 3.0], [13.9, 3.0], [14.0, 3.0], [14.1, 3.0], [14.2, 3.0], [14.3, 3.0], [14.4, 3.0], [14.5, 3.0], [14.6, 3.0], [14.7, 3.0], [14.8, 3.0], [14.9, 3.0], [15.0, 3.0], [15.1, 3.0], [15.2, 3.0], [15.3, 3.0], [15.4, 3.0], [15.5, 3.0], [15.6, 3.0], [15.7, 3.0], [15.8, 3.0], [15.9, 3.0], [16.0, 3.0], [16.1, 3.0], [16.2, 3.0], [16.3, 3.0], [16.4, 3.0], [16.5, 3.0], [16.6, 3.0], [16.7, 3.0], [16.8, 3.0], [16.9, 3.0], [17.0, 3.0], [17.1, 3.0], [17.2, 3.0], [17.3, 3.0], [17.4, 3.0], [17.5, 3.0], [17.6, 3.0], [17.7, 3.0], [17.8, 3.0], [17.9, 3.0], [18.0, 3.0], [18.1, 3.0], [18.2, 3.0], [18.3, 3.0], [18.4, 3.0], [18.5, 3.0], [18.6, 3.0], [18.7, 3.0], [18.8, 3.0], [18.9, 3.0], [19.0, 3.0], [19.1, 3.0], [19.2, 3.0], [19.3, 3.0], [19.4, 3.0], [19.5, 3.0], [19.6, 3.0], [19.7, 3.0], [19.8, 3.0], [19.9, 3.0], [20.0, 3.0], [20.1, 3.0], [20.2, 3.0], [20.3, 3.0], [20.4, 3.0], [20.5, 3.0], [20.6, 3.0], [20.7, 3.0], [20.8, 3.0], [20.9, 3.0], [21.0, 3.0], [21.1, 3.0], [21.2, 3.0], [21.3, 3.0], [21.4, 3.0], [21.5, 3.0], [21.6, 3.0], [21.7, 3.0], [21.8, 3.0], [21.9, 3.0], [22.0, 3.0], [22.1, 3.0], [22.2, 3.0], [22.3, 3.0], [22.4, 3.0], [22.5, 3.0], [22.6, 3.0], [22.7, 3.0], [22.8, 3.0], [22.9, 3.0], [23.0, 3.0], [23.1, 3.0], [23.2, 3.0], [23.3, 3.0], [23.4, 3.0], [23.5, 3.0], [23.6, 3.0], [23.7, 3.0], [23.8, 3.0], [23.9, 3.0], [24.0, 3.0], [24.1, 3.0], [24.2, 3.0], [24.3, 3.0], [24.4, 3.0], [24.5, 3.0], [24.6, 3.0], [24.7, 3.0], [24.8, 3.0], [24.9, 3.0], [25.0, 3.0], [25.1, 3.0], [25.2, 3.0], [25.3, 3.0], [25.4, 3.0], [25.5, 3.0], [25.6, 3.0], [25.7, 3.0], [25.8, 3.0], [25.9, 3.0], [26.0, 3.0], [26.1, 3.0], [26.2, 3.0], [26.3, 3.0], [26.4, 3.0], [26.5, 3.0], [26.6, 3.0], [26.7, 3.0], [26.8, 3.0], [26.9, 3.0], [27.0, 3.0], [27.1, 3.0], [27.2, 3.0], [27.3, 3.0], [27.4, 3.0], [27.5, 3.0], [27.6, 3.0], [27.7, 3.0], [27.8, 3.0], [27.9, 3.0], [28.0, 3.0], [28.1, 3.0], [28.2, 3.0], [28.3, 3.0], [28.4, 3.0], [28.5, 3.0], [28.6, 3.0], [28.7, 3.0], [28.8, 3.0], [28.9, 3.0], [29.0, 3.0], [29.1, 3.0], [29.2, 3.0], [29.3, 3.0], [29.4, 3.0], [29.5, 3.0], [29.6, 3.0], [29.7, 3.0], [29.8, 3.0], [29.9, 3.0], [30.0, 3.0], [30.1, 3.0], [30.2, 3.0], [30.3, 3.0], [30.4, 4.0], [30.5, 4.0], [30.6, 4.0], [30.7, 4.0], [30.8, 4.0], [30.9, 4.0], [31.0, 4.0], [31.1, 4.0], [31.2, 4.0], [31.3, 4.0], [31.4, 4.0], [31.5, 4.0], [31.6, 4.0], [31.7, 4.0], [31.8, 4.0], [31.9, 4.0], [32.0, 4.0], [32.1, 4.0], [32.2, 4.0], [32.3, 4.0], [32.4, 4.0], [32.5, 4.0], [32.6, 4.0], [32.7, 4.0], [32.8, 4.0], [32.9, 4.0], [33.0, 4.0], [33.1, 4.0], [33.2, 4.0], [33.3, 4.0], [33.4, 4.0], [33.5, 4.0], [33.6, 4.0], [33.7, 4.0], [33.8, 4.0], [33.9, 4.0], [34.0, 4.0], [34.1, 4.0], [34.2, 4.0], [34.3, 4.0], [34.4, 4.0], [34.5, 4.0], [34.6, 4.0], [34.7, 4.0], [34.8, 4.0], [34.9, 4.0], [35.0, 4.0], [35.1, 4.0], [35.2, 4.0], [35.3, 4.0], [35.4, 4.0], [35.5, 4.0], [35.6, 4.0], [35.7, 4.0], [35.8, 4.0], [35.9, 4.0], [36.0, 4.0], [36.1, 4.0], [36.2, 4.0], [36.3, 4.0], [36.4, 4.0], [36.5, 4.0], [36.6, 4.0], [36.7, 4.0], [36.8, 4.0], [36.9, 4.0], [37.0, 4.0], [37.1, 4.0], [37.2, 4.0], [37.3, 4.0], [37.4, 4.0], [37.5, 4.0], [37.6, 4.0], [37.7, 4.0], [37.8, 4.0], [37.9, 4.0], [38.0, 4.0], [38.1, 4.0], [38.2, 4.0], [38.3, 4.0], [38.4, 4.0], [38.5, 4.0], [38.6, 4.0], [38.7, 4.0], [38.8, 4.0], [38.9, 4.0], [39.0, 4.0], [39.1, 4.0], [39.2, 4.0], [39.3, 4.0], [39.4, 4.0], [39.5, 4.0], [39.6, 4.0], [39.7, 4.0], [39.8, 4.0], [39.9, 4.0], [40.0, 4.0], [40.1, 4.0], [40.2, 4.0], [40.3, 4.0], [40.4, 4.0], [40.5, 4.0], [40.6, 4.0], [40.7, 4.0], [40.8, 4.0], [40.9, 4.0], [41.0, 4.0], [41.1, 4.0], [41.2, 4.0], [41.3, 4.0], [41.4, 4.0], [41.5, 4.0], [41.6, 4.0], [41.7, 4.0], [41.8, 4.0], [41.9, 4.0], [42.0, 4.0], [42.1, 4.0], [42.2, 4.0], [42.3, 4.0], [42.4, 4.0], [42.5, 4.0], [42.6, 4.0], [42.7, 4.0], [42.8, 4.0], [42.9, 4.0], [43.0, 4.0], [43.1, 4.0], [43.2, 4.0], [43.3, 4.0], [43.4, 4.0], [43.5, 4.0], [43.6, 4.0], [43.7, 4.0], [43.8, 4.0], [43.9, 4.0], [44.0, 4.0], [44.1, 4.0], [44.2, 4.0], [44.3, 4.0], [44.4, 4.0], [44.5, 4.0], [44.6, 4.0], [44.7, 4.0], [44.8, 4.0], [44.9, 4.0], [45.0, 4.0], [45.1, 4.0], [45.2, 4.0], [45.3, 4.0], [45.4, 4.0], [45.5, 4.0], [45.6, 4.0], [45.7, 4.0], [45.8, 5.0], [45.9, 5.0], [46.0, 5.0], [46.1, 5.0], [46.2, 5.0], [46.3, 5.0], [46.4, 5.0], [46.5, 5.0], [46.6, 5.0], [46.7, 5.0], [46.8, 5.0], [46.9, 5.0], [47.0, 5.0], [47.1, 5.0], [47.2, 5.0], [47.3, 5.0], [47.4, 5.0], [47.5, 5.0], [47.6, 5.0], [47.7, 5.0], [47.8, 5.0], [47.9, 5.0], [48.0, 5.0], [48.1, 5.0], [48.2, 5.0], [48.3, 5.0], [48.4, 5.0], [48.5, 5.0], [48.6, 5.0], [48.7, 5.0], [48.8, 5.0], [48.9, 5.0], [49.0, 5.0], [49.1, 5.0], [49.2, 5.0], [49.3, 5.0], [49.4, 5.0], [49.5, 5.0], [49.6, 5.0], [49.7, 5.0], [49.8, 5.0], [49.9, 5.0], [50.0, 5.0], [50.1, 5.0], [50.2, 5.0], [50.3, 5.0], [50.4, 5.0], [50.5, 5.0], [50.6, 5.0], [50.7, 5.0], [50.8, 5.0], [50.9, 5.0], [51.0, 5.0], [51.1, 5.0], [51.2, 5.0], [51.3, 5.0], [51.4, 5.0], [51.5, 5.0], [51.6, 5.0], [51.7, 5.0], [51.8, 5.0], [51.9, 5.0], [52.0, 5.0], [52.1, 5.0], [52.2, 5.0], [52.3, 5.0], [52.4, 5.0], [52.5, 5.0], [52.6, 5.0], [52.7, 5.0], [52.8, 5.0], [52.9, 5.0], [53.0, 5.0], [53.1, 5.0], [53.2, 5.0], [53.3, 5.0], [53.4, 5.0], [53.5, 5.0], [53.6, 5.0], [53.7, 5.0], [53.8, 5.0], [53.9, 5.0], [54.0, 5.0], [54.1, 5.0], [54.2, 5.0], [54.3, 5.0], [54.4, 5.0], [54.5, 5.0], [54.6, 5.0], [54.7, 5.0], [54.8, 5.0], [54.9, 5.0], [55.0, 5.0], [55.1, 5.0], [55.2, 5.0], [55.3, 5.0], [55.4, 5.0], [55.5, 5.0], [55.6, 5.0], [55.7, 5.0], [55.8, 5.0], [55.9, 5.0], [56.0, 5.0], [56.1, 5.0], [56.2, 5.0], [56.3, 5.0], [56.4, 5.0], [56.5, 5.0], [56.6, 5.0], [56.7, 5.0], [56.8, 5.0], [56.9, 5.0], [57.0, 5.0], [57.1, 5.0], [57.2, 5.0], [57.3, 5.0], [57.4, 5.0], [57.5, 5.0], [57.6, 6.0], [57.7, 6.0], [57.8, 6.0], [57.9, 6.0], [58.0, 6.0], [58.1, 6.0], [58.2, 6.0], [58.3, 6.0], [58.4, 6.0], [58.5, 6.0], [58.6, 6.0], [58.7, 6.0], [58.8, 6.0], [58.9, 6.0], [59.0, 6.0], [59.1, 6.0], [59.2, 6.0], [59.3, 6.0], [59.4, 6.0], [59.5, 6.0], [59.6, 6.0], [59.7, 6.0], [59.8, 6.0], [59.9, 6.0], [60.0, 6.0], [60.1, 6.0], [60.2, 6.0], [60.3, 6.0], [60.4, 6.0], [60.5, 6.0], [60.6, 6.0], [60.7, 6.0], [60.8, 6.0], [60.9, 6.0], [61.0, 6.0], [61.1, 6.0], [61.2, 6.0], [61.3, 6.0], [61.4, 6.0], [61.5, 6.0], [61.6, 6.0], [61.7, 6.0], [61.8, 6.0], [61.9, 6.0], [62.0, 6.0], [62.1, 6.0], [62.2, 6.0], [62.3, 6.0], [62.4, 6.0], [62.5, 6.0], [62.6, 6.0], [62.7, 6.0], [62.8, 6.0], [62.9, 6.0], [63.0, 6.0], [63.1, 6.0], [63.2, 6.0], [63.3, 6.0], [63.4, 6.0], [63.5, 6.0], [63.6, 6.0], [63.7, 6.0], [63.8, 6.0], [63.9, 6.0], [64.0, 6.0], [64.1, 6.0], [64.2, 6.0], [64.3, 6.0], [64.4, 6.0], [64.5, 6.0], [64.6, 6.0], [64.7, 6.0], [64.8, 6.0], [64.9, 6.0], [65.0, 6.0], [65.1, 6.0], [65.2, 6.0], [65.3, 6.0], [65.4, 6.0], [65.5, 6.0], [65.6, 6.0], [65.7, 6.0], [65.8, 6.0], [65.9, 6.0], [66.0, 6.0], [66.1, 6.0], [66.2, 6.0], [66.3, 6.0], [66.4, 6.0], [66.5, 6.0], [66.6, 6.0], [66.7, 7.0], [66.8, 7.0], [66.9, 7.0], [67.0, 7.0], [67.1, 7.0], [67.2, 7.0], [67.3, 7.0], [67.4, 7.0], [67.5, 7.0], [67.6, 7.0], [67.7, 7.0], [67.8, 7.0], [67.9, 7.0], [68.0, 7.0], [68.1, 7.0], [68.2, 7.0], [68.3, 7.0], [68.4, 7.0], [68.5, 7.0], [68.6, 7.0], [68.7, 7.0], [68.8, 7.0], [68.9, 7.0], [69.0, 7.0], [69.1, 7.0], [69.2, 7.0], [69.3, 7.0], [69.4, 7.0], [69.5, 7.0], [69.6, 7.0], [69.7, 7.0], [69.8, 7.0], [69.9, 7.0], [70.0, 7.0], [70.1, 7.0], [70.2, 7.0], [70.3, 7.0], [70.4, 7.0], [70.5, 7.0], [70.6, 7.0], [70.7, 7.0], [70.8, 7.0], [70.9, 7.0], [71.0, 7.0], [71.1, 7.0], [71.2, 7.0], [71.3, 7.0], [71.4, 7.0], [71.5, 7.0], [71.6, 7.0], [71.7, 7.0], [71.8, 7.0], [71.9, 7.0], [72.0, 7.0], [72.1, 7.0], [72.2, 7.0], [72.3, 7.0], [72.4, 7.0], [72.5, 7.0], [72.6, 7.0], [72.7, 7.0], [72.8, 7.0], [72.9, 7.0], [73.0, 7.0], [73.1, 7.0], [73.2, 7.0], [73.3, 7.0], [73.4, 7.0], [73.5, 7.0], [73.6, 7.0], [73.7, 7.0], [73.8, 7.0], [73.9, 7.0], [74.0, 8.0], [74.1, 8.0], [74.2, 8.0], [74.3, 8.0], [74.4, 8.0], [74.5, 8.0], [74.6, 8.0], [74.7, 8.0], [74.8, 8.0], [74.9, 8.0], [75.0, 8.0], [75.1, 8.0], [75.2, 8.0], [75.3, 8.0], [75.4, 8.0], [75.5, 8.0], [75.6, 8.0], [75.7, 8.0], [75.8, 8.0], [75.9, 8.0], [76.0, 8.0], [76.1, 8.0], [76.2, 8.0], [76.3, 8.0], [76.4, 8.0], [76.5, 8.0], [76.6, 8.0], [76.7, 8.0], [76.8, 8.0], [76.9, 8.0], [77.0, 8.0], [77.1, 8.0], [77.2, 8.0], [77.3, 8.0], [77.4, 8.0], [77.5, 8.0], [77.6, 8.0], [77.7, 8.0], [77.8, 8.0], [77.9, 8.0], [78.0, 8.0], [78.1, 8.0], [78.2, 8.0], [78.3, 8.0], [78.4, 8.0], [78.5, 8.0], [78.6, 8.0], [78.7, 8.0], [78.8, 8.0], [78.9, 8.0], [79.0, 8.0], [79.1, 8.0], [79.2, 8.0], [79.3, 8.0], [79.4, 8.0], [79.5, 8.0], [79.6, 8.0], [79.7, 8.0], [79.8, 8.0], [79.9, 9.0], [80.0, 9.0], [80.1, 9.0], [80.2, 9.0], [80.3, 9.0], [80.4, 9.0], [80.5, 9.0], [80.6, 9.0], [80.7, 9.0], [80.8, 9.0], [80.9, 9.0], [81.0, 9.0], [81.1, 9.0], [81.2, 9.0], [81.3, 9.0], [81.4, 9.0], [81.5, 9.0], [81.6, 9.0], [81.7, 9.0], [81.8, 9.0], [81.9, 9.0], [82.0, 9.0], [82.1, 9.0], [82.2, 9.0], [82.3, 9.0], [82.4, 9.0], [82.5, 9.0], [82.6, 9.0], [82.7, 9.0], [82.8, 9.0], [82.9, 9.0], [83.0, 9.0], [83.1, 9.0], [83.2, 9.0], [83.3, 9.0], [83.4, 9.0], [83.5, 9.0], [83.6, 9.0], [83.7, 9.0], [83.8, 9.0], [83.9, 9.0], [84.0, 9.0], [84.1, 9.0], [84.2, 9.0], [84.3, 9.0], [84.4, 9.0], [84.5, 9.0], [84.6, 9.0], [84.7, 9.0], [84.8, 10.0], [84.9, 10.0], [85.0, 10.0], [85.1, 10.0], [85.2, 10.0], [85.3, 10.0], [85.4, 10.0], [85.5, 10.0], [85.6, 10.0], [85.7, 10.0], [85.8, 10.0], [85.9, 10.0], [86.0, 10.0], [86.1, 10.0], [86.2, 10.0], [86.3, 10.0], [86.4, 10.0], [86.5, 10.0], [86.6, 10.0], [86.7, 10.0], [86.8, 10.0], [86.9, 10.0], [87.0, 10.0], [87.1, 10.0], [87.2, 10.0], [87.3, 10.0], [87.4, 10.0], [87.5, 10.0], [87.6, 10.0], [87.7, 10.0], [87.8, 10.0], [87.9, 10.0], [88.0, 10.0], [88.1, 10.0], [88.2, 10.0], [88.3, 11.0], [88.4, 11.0], [88.5, 11.0], [88.6, 11.0], [88.7, 11.0], [88.8, 11.0], [88.9, 11.0], [89.0, 11.0], [89.1, 11.0], [89.2, 11.0], [89.3, 11.0], [89.4, 11.0], [89.5, 11.0], [89.6, 11.0], [89.7, 11.0], [89.8, 11.0], [89.9, 11.0], [90.0, 11.0], [90.1, 11.0], [90.2, 11.0], [90.3, 11.0], [90.4, 11.0], [90.5, 11.0], [90.6, 11.0], [90.7, 11.0], [90.8, 12.0], [90.9, 12.0], [91.0, 12.0], [91.1, 12.0], [91.2, 12.0], [91.3, 12.0], [91.4, 12.0], [91.5, 12.0], [91.6, 12.0], [91.7, 12.0], [91.8, 12.0], [91.9, 12.0], [92.0, 12.0], [92.1, 12.0], [92.2, 12.0], [92.3, 12.0], [92.4, 12.0], [92.5, 12.0], [92.6, 13.0], [92.7, 13.0], [92.8, 13.0], [92.9, 13.0], [93.0, 13.0], [93.1, 13.0], [93.2, 13.0], [93.3, 13.0], [93.4, 13.0], [93.5, 13.0], [93.6, 13.0], [93.7, 13.0], [93.8, 14.0], [93.9, 14.0], [94.0, 14.0], [94.1, 14.0], [94.2, 14.0], [94.3, 14.0], [94.4, 14.0], [94.5, 14.0], [94.6, 14.0], [94.7, 15.0], [94.8, 15.0], [94.9, 15.0], [95.0, 15.0], [95.1, 15.0], [95.2, 15.0], [95.3, 15.0], [95.4, 16.0], [95.5, 16.0], [95.6, 16.0], [95.7, 16.0], [95.8, 16.0], [95.9, 17.0], [96.0, 17.0], [96.1, 17.0], [96.2, 17.0], [96.3, 18.0], [96.4, 18.0], [96.5, 18.0], [96.6, 18.0], [96.7, 19.0], [96.8, 19.0], [96.9, 20.0], [97.0, 20.0], [97.1, 20.0], [97.2, 21.0], [97.3, 22.0], [97.4, 22.0], [97.5, 23.0], [97.6, 24.0], [97.7, 25.0], [97.8, 25.0], [97.9, 26.0], [98.0, 27.0], [98.1, 29.0], [98.2, 31.0], [98.3, 33.0], [98.4, 35.0], [98.5, 37.0], [98.6, 40.0], [98.7, 42.0], [98.8, 46.0], [98.9, 50.0], [99.0, 54.0], [99.1, 58.0], [99.2, 65.0], [99.3, 74.0], [99.4, 91.0], [99.5, 102.0], [99.6, 119.0], [99.7, 143.0], [99.8, 176.0], [99.9, 267.0]], "isOverall": false, "label": "GET thread name", "isController": false}, {"data": [[0.0, 3.0], [0.1, 4.0], [0.2, 5.0], [0.3, 5.0], [0.4, 5.0], [0.5, 6.0], [0.6, 6.0], [0.7, 6.0], [0.8, 7.0], [0.9, 7.0], [1.0, 7.0], [1.1, 8.0], [1.2, 8.0], [1.3, 8.0], [1.4, 9.0], [1.5, 9.0], [1.6, 10.0], [1.7, 10.0], [1.8, 11.0], [1.9, 11.0], [2.0, 12.0], [2.1, 13.0], [2.2, 13.0], [2.3, 15.0], [2.4, 16.0], [2.5, 18.0], [2.6, 20.0], [2.7, 22.0], [2.8, 25.0], [2.9, 30.0], [3.0, 34.0], [3.1, 37.0], [3.2, 40.0], [3.3, 43.0], [3.4, 46.0], [3.5, 50.0], [3.6, 53.0], [3.7, 57.0], [3.8, 61.0], [3.9, 67.0], [4.0, 73.0], [4.1, 82.0], [4.2, 93.0], [4.3, 110.0], [4.4, 116.0], [4.5, 122.0], [4.6, 130.0], [4.7, 135.0], [4.8, 143.0], [4.9, 150.0], [5.0, 159.0], [5.1, 166.0], [5.2, 174.0], [5.3, 182.0], [5.4, 194.0], [5.5, 202.0], [5.6, 212.0], [5.7, 221.0], [5.8, 231.0], [5.9, 241.0], [6.0, 248.0], [6.1, 256.0], [6.2, 264.0], [6.3, 269.0], [6.4, 276.0], [6.5, 287.0], [6.6, 294.0], [6.7, 299.0], [6.8, 304.0], [6.9, 307.0], [7.0, 313.0], [7.1, 316.0], [7.2, 320.0], [7.3, 327.0], [7.4, 333.0], [7.5, 338.0], [7.6, 340.0], [7.7, 343.0], [7.8, 350.0], [7.9, 357.0], [8.0, 364.0], [8.1, 370.0], [8.2, 378.0], [8.3, 386.0], [8.4, 395.0], [8.5, 400.0], [8.6, 405.0], [8.7, 412.0], [8.8, 418.0], [8.9, 425.0], [9.0, 430.0], [9.1, 434.0], [9.2, 438.0], [9.3, 442.0], [9.4, 446.0], [9.5, 450.0], [9.6, 453.0], [9.7, 457.0], [9.8, 463.0], [9.9, 467.0], [10.0, 471.0], [10.1, 477.0], [10.2, 482.0], [10.3, 486.0], [10.4, 490.0], [10.5, 493.0], [10.6, 499.0], [10.7, 504.0], [10.8, 510.0], [10.9, 514.0], [11.0, 520.0], [11.1, 525.0], [11.2, 531.0], [11.3, 537.0], [11.4, 543.0], [11.5, 549.0], [11.6, 554.0], [11.7, 558.0], [11.8, 562.0], [11.9, 566.0], [12.0, 571.0], [12.1, 574.0], [12.2, 577.0], [12.3, 581.0], [12.4, 585.0], [12.5, 588.0], [12.6, 591.0], [12.7, 594.0], [12.8, 597.0], [12.9, 601.0], [13.0, 603.0], [13.1, 606.0], [13.2, 608.0], [13.3, 612.0], [13.4, 614.0], [13.5, 617.0], [13.6, 619.0], [13.7, 622.0], [13.8, 624.0], [13.9, 626.0], [14.0, 629.0], [14.1, 631.0], [14.2, 633.0], [14.3, 635.0], [14.4, 637.0], [14.5, 639.0], [14.6, 641.0], [14.7, 643.0], [14.8, 645.0], [14.9, 647.0], [15.0, 648.0], [15.1, 650.0], [15.2, 652.0], [15.3, 654.0], [15.4, 655.0], [15.5, 657.0], [15.6, 659.0], [15.7, 660.0], [15.8, 661.0], [15.9, 663.0], [16.0, 665.0], [16.1, 667.0], [16.2, 669.0], [16.3, 670.0], [16.4, 672.0], [16.5, 674.0], [16.6, 675.0], [16.7, 677.0], [16.8, 678.0], [16.9, 680.0], [17.0, 682.0], [17.1, 684.0], [17.2, 686.0], [17.3, 687.0], [17.4, 688.0], [17.5, 689.0], [17.6, 690.0], [17.7, 691.0], [17.8, 692.0], [17.9, 693.0], [18.0, 694.0], [18.1, 695.0], [18.2, 696.0], [18.3, 697.0], [18.4, 698.0], [18.5, 699.0], [18.6, 701.0], [18.7, 702.0], [18.8, 703.0], [18.9, 704.0], [19.0, 705.0], [19.1, 706.0], [19.2, 707.0], [19.3, 708.0], [19.4, 709.0], [19.5, 710.0], [19.6, 711.0], [19.7, 712.0], [19.8, 713.0], [19.9, 714.0], [20.0, 715.0], [20.1, 716.0], [20.2, 717.0], [20.3, 718.0], [20.4, 719.0], [20.5, 719.0], [20.6, 720.0], [20.7, 722.0], [20.8, 723.0], [20.9, 723.0], [21.0, 724.0], [21.1, 725.0], [21.2, 725.0], [21.3, 726.0], [21.4, 727.0], [21.5, 728.0], [21.6, 728.0], [21.7, 729.0], [21.8, 730.0], [21.9, 731.0], [22.0, 732.0], [22.1, 733.0], [22.2, 733.0], [22.3, 734.0], [22.4, 735.0], [22.5, 735.0], [22.6, 736.0], [22.7, 736.0], [22.8, 737.0], [22.9, 738.0], [23.0, 738.0], [23.1, 739.0], [23.2, 740.0], [23.3, 740.0], [23.4, 741.0], [23.5, 742.0], [23.6, 742.0], [23.7, 743.0], [23.8, 744.0], [23.9, 745.0], [24.0, 745.0], [24.1, 746.0], [24.2, 747.0], [24.3, 747.0], [24.4, 748.0], [24.5, 749.0], [24.6, 749.0], [24.7, 750.0], [24.8, 750.0], [24.9, 751.0], [25.0, 752.0], [25.1, 752.0], [25.2, 753.0], [25.3, 753.0], [25.4, 754.0], [25.5, 755.0], [25.6, 755.0], [25.7, 756.0], [25.8, 757.0], [25.9, 757.0], [26.0, 758.0], [26.1, 758.0], [26.2, 759.0], [26.3, 759.0], [26.4, 760.0], [26.5, 761.0], [26.6, 761.0], [26.7, 762.0], [26.8, 762.0], [26.9, 763.0], [27.0, 763.0], [27.1, 764.0], [27.2, 764.0], [27.3, 765.0], [27.4, 765.0], [27.5, 766.0], [27.6, 767.0], [27.7, 767.0], [27.8, 768.0], [27.9, 768.0], [28.0, 769.0], [28.1, 769.0], [28.2, 770.0], [28.3, 770.0], [28.4, 771.0], [28.5, 771.0], [28.6, 772.0], [28.7, 772.0], [28.8, 773.0], [28.9, 773.0], [29.0, 774.0], [29.1, 774.0], [29.2, 775.0], [29.3, 775.0], [29.4, 776.0], [29.5, 776.0], [29.6, 777.0], [29.7, 778.0], [29.8, 778.0], [29.9, 778.0], [30.0, 779.0], [30.1, 779.0], [30.2, 780.0], [30.3, 780.0], [30.4, 780.0], [30.5, 781.0], [30.6, 781.0], [30.7, 782.0], [30.8, 782.0], [30.9, 783.0], [31.0, 783.0], [31.1, 783.0], [31.2, 784.0], [31.3, 784.0], [31.4, 785.0], [31.5, 785.0], [31.6, 786.0], [31.7, 786.0], [31.8, 786.0], [31.9, 787.0], [32.0, 787.0], [32.1, 788.0], [32.2, 788.0], [32.3, 789.0], [32.4, 789.0], [32.5, 789.0], [32.6, 790.0], [32.7, 790.0], [32.8, 791.0], [32.9, 791.0], [33.0, 792.0], [33.1, 792.0], [33.2, 792.0], [33.3, 793.0], [33.4, 793.0], [33.5, 793.0], [33.6, 794.0], [33.7, 794.0], [33.8, 795.0], [33.9, 795.0], [34.0, 795.0], [34.1, 796.0], [34.2, 796.0], [34.3, 796.0], [34.4, 797.0], [34.5, 797.0], [34.6, 798.0], [34.7, 798.0], [34.8, 799.0], [34.9, 799.0], [35.0, 799.0], [35.1, 800.0], [35.2, 800.0], [35.3, 801.0], [35.4, 801.0], [35.5, 801.0], [35.6, 802.0], [35.7, 802.0], [35.8, 802.0], [35.9, 803.0], [36.0, 803.0], [36.1, 804.0], [36.2, 804.0], [36.3, 805.0], [36.4, 805.0], [36.5, 805.0], [36.6, 806.0], [36.7, 806.0], [36.8, 806.0], [36.9, 807.0], [37.0, 807.0], [37.1, 807.0], [37.2, 808.0], [37.3, 808.0], [37.4, 808.0], [37.5, 809.0], [37.6, 809.0], [37.7, 809.0], [37.8, 810.0], [37.9, 810.0], [38.0, 810.0], [38.1, 811.0], [38.2, 811.0], [38.3, 812.0], [38.4, 812.0], [38.5, 812.0], [38.6, 813.0], [38.7, 813.0], [38.8, 813.0], [38.9, 814.0], [39.0, 814.0], [39.1, 814.0], [39.2, 815.0], [39.3, 815.0], [39.4, 815.0], [39.5, 816.0], [39.6, 816.0], [39.7, 817.0], [39.8, 817.0], [39.9, 817.0], [40.0, 818.0], [40.1, 818.0], [40.2, 819.0], [40.3, 819.0], [40.4, 819.0], [40.5, 820.0], [40.6, 820.0], [40.7, 820.0], [40.8, 821.0], [40.9, 821.0], [41.0, 821.0], [41.1, 822.0], [41.2, 822.0], [41.3, 822.0], [41.4, 823.0], [41.5, 823.0], [41.6, 823.0], [41.7, 824.0], [41.8, 824.0], [41.9, 825.0], [42.0, 825.0], [42.1, 825.0], [42.2, 826.0], [42.3, 826.0], [42.4, 826.0], [42.5, 826.0], [42.6, 827.0], [42.7, 827.0], [42.8, 827.0], [42.9, 828.0], [43.0, 828.0], [43.1, 828.0], [43.2, 829.0], [43.3, 829.0], [43.4, 829.0], [43.5, 830.0], [43.6, 830.0], [43.7, 831.0], [43.8, 831.0], [43.9, 831.0], [44.0, 831.0], [44.1, 832.0], [44.2, 832.0], [44.3, 832.0], [44.4, 833.0], [44.5, 833.0], [44.6, 833.0], [44.7, 834.0], [44.8, 834.0], [44.9, 834.0], [45.0, 835.0], [45.1, 835.0], [45.2, 835.0], [45.3, 836.0], [45.4, 836.0], [45.5, 836.0], [45.6, 837.0], [45.7, 837.0], [45.8, 837.0], [45.9, 838.0], [46.0, 838.0], [46.1, 838.0], [46.2, 839.0], [46.3, 839.0], [46.4, 839.0], [46.5, 840.0], [46.6, 840.0], [46.7, 840.0], [46.8, 841.0], [46.9, 841.0], [47.0, 841.0], [47.1, 841.0], [47.2, 842.0], [47.3, 842.0], [47.4, 842.0], [47.5, 843.0], [47.6, 843.0], [47.7, 843.0], [47.8, 844.0], [47.9, 844.0], [48.0, 844.0], [48.1, 844.0], [48.2, 845.0], [48.3, 845.0], [48.4, 845.0], [48.5, 846.0], [48.6, 846.0], [48.7, 846.0], [48.8, 847.0], [48.9, 847.0], [49.0, 847.0], [49.1, 847.0], [49.2, 848.0], [49.3, 848.0], [49.4, 848.0], [49.5, 849.0], [49.6, 849.0], [49.7, 849.0], [49.8, 850.0], [49.9, 850.0], [50.0, 850.0], [50.1, 850.0], [50.2, 851.0], [50.3, 851.0], [50.4, 851.0], [50.5, 852.0], [50.6, 852.0], [50.7, 852.0], [50.8, 853.0], [50.9, 853.0], [51.0, 853.0], [51.1, 854.0], [51.2, 854.0], [51.3, 854.0], [51.4, 855.0], [51.5, 855.0], [51.6, 855.0], [51.7, 855.0], [51.8, 856.0], [51.9, 856.0], [52.0, 856.0], [52.1, 857.0], [52.2, 857.0], [52.3, 858.0], [52.4, 858.0], [52.5, 858.0], [52.6, 858.0], [52.7, 859.0], [52.8, 859.0], [52.9, 859.0], [53.0, 860.0], [53.1, 860.0], [53.2, 860.0], [53.3, 861.0], [53.4, 861.0], [53.5, 861.0], [53.6, 861.0], [53.7, 862.0], [53.8, 862.0], [53.9, 862.0], [54.0, 862.0], [54.1, 863.0], [54.2, 863.0], [54.3, 863.0], [54.4, 864.0], [54.5, 864.0], [54.6, 864.0], [54.7, 864.0], [54.8, 865.0], [54.9, 865.0], [55.0, 865.0], [55.1, 866.0], [55.2, 866.0], [55.3, 866.0], [55.4, 867.0], [55.5, 867.0], [55.6, 867.0], [55.7, 867.0], [55.8, 868.0], [55.9, 868.0], [56.0, 868.0], [56.1, 869.0], [56.2, 869.0], [56.3, 869.0], [56.4, 870.0], [56.5, 870.0], [56.6, 870.0], [56.7, 870.0], [56.8, 871.0], [56.9, 871.0], [57.0, 871.0], [57.1, 872.0], [57.2, 872.0], [57.3, 872.0], [57.4, 873.0], [57.5, 873.0], [57.6, 873.0], [57.7, 874.0], [57.8, 874.0], [57.9, 874.0], [58.0, 874.0], [58.1, 875.0], [58.2, 875.0], [58.3, 875.0], [58.4, 876.0], [58.5, 876.0], [58.6, 876.0], [58.7, 877.0], [58.8, 877.0], [58.9, 877.0], [59.0, 878.0], [59.1, 878.0], [59.2, 878.0], [59.3, 878.0], [59.4, 879.0], [59.5, 879.0], [59.6, 879.0], [59.7, 880.0], [59.8, 880.0], [59.9, 880.0], [60.0, 880.0], [60.1, 881.0], [60.2, 881.0], [60.3, 882.0], [60.4, 882.0], [60.5, 882.0], [60.6, 883.0], [60.7, 883.0], [60.8, 883.0], [60.9, 883.0], [61.0, 884.0], [61.1, 884.0], [61.2, 885.0], [61.3, 885.0], [61.4, 885.0], [61.5, 885.0], [61.6, 886.0], [61.7, 886.0], [61.8, 886.0], [61.9, 887.0], [62.0, 887.0], [62.1, 887.0], [62.2, 887.0], [62.3, 888.0], [62.4, 888.0], [62.5, 888.0], [62.6, 889.0], [62.7, 889.0], [62.8, 889.0], [62.9, 890.0], [63.0, 890.0], [63.1, 890.0], [63.2, 891.0], [63.3, 891.0], [63.4, 891.0], [63.5, 891.0], [63.6, 892.0], [63.7, 892.0], [63.8, 892.0], [63.9, 893.0], [64.0, 893.0], [64.1, 893.0], [64.2, 894.0], [64.3, 894.0], [64.4, 894.0], [64.5, 895.0], [64.6, 895.0], [64.7, 895.0], [64.8, 895.0], [64.9, 896.0], [65.0, 896.0], [65.1, 896.0], [65.2, 897.0], [65.3, 897.0], [65.4, 897.0], [65.5, 898.0], [65.6, 898.0], [65.7, 898.0], [65.8, 899.0], [65.9, 899.0], [66.0, 899.0], [66.1, 899.0], [66.2, 900.0], [66.3, 900.0], [66.4, 900.0], [66.5, 901.0], [66.6, 901.0], [66.7, 901.0], [66.8, 901.0], [66.9, 902.0], [67.0, 902.0], [67.1, 902.0], [67.2, 903.0], [67.3, 903.0], [67.4, 903.0], [67.5, 904.0], [67.6, 904.0], [67.7, 904.0], [67.8, 904.0], [67.9, 905.0], [68.0, 905.0], [68.1, 906.0], [68.2, 906.0], [68.3, 906.0], [68.4, 907.0], [68.5, 907.0], [68.6, 907.0], [68.7, 908.0], [68.8, 908.0], [68.9, 908.0], [69.0, 908.0], [69.1, 909.0], [69.2, 909.0], [69.3, 909.0], [69.4, 910.0], [69.5, 910.0], [69.6, 910.0], [69.7, 911.0], [69.8, 911.0], [69.9, 911.0], [70.0, 912.0], [70.1, 912.0], [70.2, 912.0], [70.3, 913.0], [70.4, 913.0], [70.5, 913.0], [70.6, 914.0], [70.7, 914.0], [70.8, 914.0], [70.9, 915.0], [71.0, 915.0], [71.1, 916.0], [71.2, 916.0], [71.3, 916.0], [71.4, 917.0], [71.5, 917.0], [71.6, 917.0], [71.7, 918.0], [71.8, 918.0], [71.9, 918.0], [72.0, 919.0], [72.1, 919.0], [72.2, 919.0], [72.3, 920.0], [72.4, 920.0], [72.5, 920.0], [72.6, 921.0], [72.7, 921.0], [72.8, 921.0], [72.9, 922.0], [73.0, 922.0], [73.1, 922.0], [73.2, 923.0], [73.3, 923.0], [73.4, 924.0], [73.5, 924.0], [73.6, 924.0], [73.7, 925.0], [73.8, 925.0], [73.9, 926.0], [74.0, 926.0], [74.1, 926.0], [74.2, 927.0], [74.3, 927.0], [74.4, 927.0], [74.5, 928.0], [74.6, 928.0], [74.7, 928.0], [74.8, 929.0], [74.9, 929.0], [75.0, 930.0], [75.1, 930.0], [75.2, 930.0], [75.3, 931.0], [75.4, 931.0], [75.5, 931.0], [75.6, 932.0], [75.7, 932.0], [75.8, 933.0], [75.9, 933.0], [76.0, 934.0], [76.1, 934.0], [76.2, 934.0], [76.3, 935.0], [76.4, 935.0], [76.5, 935.0], [76.6, 936.0], [76.7, 936.0], [76.8, 937.0], [76.9, 937.0], [77.0, 937.0], [77.1, 938.0], [77.2, 938.0], [77.3, 938.0], [77.4, 939.0], [77.5, 939.0], [77.6, 939.0], [77.7, 940.0], [77.8, 940.0], [77.9, 941.0], [78.0, 941.0], [78.1, 941.0], [78.2, 942.0], [78.3, 942.0], [78.4, 943.0], [78.5, 943.0], [78.6, 943.0], [78.7, 944.0], [78.8, 944.0], [78.9, 945.0], [79.0, 945.0], [79.1, 946.0], [79.2, 946.0], [79.3, 946.0], [79.4, 947.0], [79.5, 947.0], [79.6, 948.0], [79.7, 948.0], [79.8, 948.0], [79.9, 949.0], [80.0, 949.0], [80.1, 950.0], [80.2, 950.0], [80.3, 951.0], [80.4, 951.0], [80.5, 952.0], [80.6, 952.0], [80.7, 953.0], [80.8, 953.0], [80.9, 953.0], [81.0, 954.0], [81.1, 954.0], [81.2, 955.0], [81.3, 955.0], [81.4, 956.0], [81.5, 956.0], [81.6, 956.0], [81.7, 957.0], [81.8, 957.0], [81.9, 958.0], [82.0, 958.0], [82.1, 959.0], [82.2, 959.0], [82.3, 960.0], [82.4, 960.0], [82.5, 960.0], [82.6, 961.0], [82.7, 961.0], [82.8, 962.0], [82.9, 962.0], [83.0, 963.0], [83.1, 963.0], [83.2, 964.0], [83.3, 964.0], [83.4, 965.0], [83.5, 965.0], [83.6, 966.0], [83.7, 966.0], [83.8, 967.0], [83.9, 967.0], [84.0, 968.0], [84.1, 968.0], [84.2, 969.0], [84.3, 969.0], [84.4, 970.0], [84.5, 970.0], [84.6, 971.0], [84.7, 972.0], [84.8, 972.0], [84.9, 973.0], [85.0, 973.0], [85.1, 974.0], [85.2, 974.0], [85.3, 975.0], [85.4, 975.0], [85.5, 976.0], [85.6, 976.0], [85.7, 977.0], [85.8, 977.0], [85.9, 978.0], [86.0, 978.0], [86.1, 979.0], [86.2, 979.0], [86.3, 980.0], [86.4, 980.0], [86.5, 981.0], [86.6, 982.0], [86.7, 982.0], [86.8, 983.0], [86.9, 983.0], [87.0, 984.0], [87.1, 984.0], [87.2, 985.0], [87.3, 986.0], [87.4, 986.0], [87.5, 987.0], [87.6, 988.0], [87.7, 988.0], [87.8, 989.0], [87.9, 989.0], [88.0, 990.0], [88.1, 990.0], [88.2, 991.0], [88.3, 992.0], [88.4, 992.0], [88.5, 993.0], [88.6, 994.0], [88.7, 994.0], [88.8, 995.0], [88.9, 996.0], [89.0, 996.0], [89.1, 997.0], [89.2, 998.0], [89.3, 998.0], [89.4, 999.0], [89.5, 1000.0], [89.6, 1001.0], [89.7, 1001.0], [89.8, 1002.0], [89.9, 1003.0], [90.0, 1004.0], [90.1, 1004.0], [90.2, 1005.0], [90.3, 1006.0], [90.4, 1007.0], [90.5, 1007.0], [90.6, 1008.0], [90.7, 1009.0], [90.8, 1010.0], [90.9, 1011.0], [91.0, 1012.0], [91.1, 1012.0], [91.2, 1013.0], [91.3, 1014.0], [91.4, 1015.0], [91.5, 1015.0], [91.6, 1016.0], [91.7, 1017.0], [91.8, 1018.0], [91.9, 1019.0], [92.0, 1020.0], [92.1, 1020.0], [92.2, 1021.0], [92.3, 1022.0], [92.4, 1024.0], [92.5, 1024.0], [92.6, 1026.0], [92.7, 1027.0], [92.8, 1028.0], [92.9, 1029.0], [93.0, 1030.0], [93.1, 1031.0], [93.2, 1033.0], [93.3, 1034.0], [93.4, 1035.0], [93.5, 1037.0], [93.6, 1038.0], [93.7, 1039.0], [93.8, 1040.0], [93.9, 1042.0], [94.0, 1043.0], [94.1, 1045.0], [94.2, 1046.0], [94.3, 1048.0], [94.4, 1049.0], [94.5, 1050.0], [94.6, 1053.0], [94.7, 1054.0], [94.8, 1056.0], [94.9, 1058.0], [95.0, 1060.0], [95.1, 1063.0], [95.2, 1065.0], [95.3, 1067.0], [95.4, 1070.0], [95.5, 1072.0], [95.6, 1074.0], [95.7, 1077.0], [95.8, 1079.0], [95.9, 1082.0], [96.0, 1085.0], [96.1, 1088.0], [96.2, 1091.0], [96.3, 1094.0], [96.4, 1097.0], [96.5, 1101.0], [96.6, 1105.0], [96.7, 1109.0], [96.8, 1115.0], [96.9, 1120.0], [97.0, 1126.0], [97.1, 1132.0], [97.2, 1141.0], [97.3, 1147.0], [97.4, 1155.0], [97.5, 1162.0], [97.6, 1171.0], [97.7, 1184.0], [97.8, 1200.0], [97.9, 1213.0], [98.0, 1229.0], [98.1, 1255.0], [98.2, 1279.0], [98.3, 1316.0], [98.4, 1358.0], [98.5, 1394.0], [98.6, 1490.0], [98.7, 1554.0], [98.8, 1599.0], [98.9, 1629.0], [99.0, 1655.0], [99.1, 1676.0], [99.2, 1697.0], [99.3, 1720.0], [99.4, 1737.0], [99.5, 1769.0], [99.6, 1794.0], [99.7, 1822.0], [99.8, 1863.0], [99.9, 1916.0]], "isOverall": false, "label": "GET employee by id", "isController": false}, {"data": [[0.0, 5.0], [0.1, 8.0], [0.2, 9.0], [0.3, 9.0], [0.4, 10.0], [0.5, 10.0], [0.6, 11.0], [0.7, 12.0], [0.8, 13.0], [0.9, 13.0], [1.0, 14.0], [1.1, 14.0], [1.2, 15.0], [1.3, 16.0], [1.4, 17.0], [1.5, 17.0], [1.6, 19.0], [1.7, 20.0], [1.8, 22.0], [1.9, 23.0], [2.0, 25.0], [2.1, 27.0], [2.2, 30.0], [2.3, 34.0], [2.4, 36.0], [2.5, 39.0], [2.6, 42.0], [2.7, 45.0], [2.8, 49.0], [2.9, 52.0], [3.0, 55.0], [3.1, 58.0], [3.2, 63.0], [3.3, 66.0], [3.4, 72.0], [3.5, 78.0], [3.6, 88.0], [3.7, 98.0], [3.8, 117.0], [3.9, 125.0], [4.0, 133.0], [4.1, 143.0], [4.2, 153.0], [4.3, 164.0], [4.4, 172.0], [4.5, 182.0], [4.6, 190.0], [4.7, 199.0], [4.8, 209.0], [4.9, 217.0], [5.0, 227.0], [5.1, 233.0], [5.2, 240.0], [5.3, 248.0], [5.4, 253.0], [5.5, 259.0], [5.6, 267.0], [5.7, 275.0], [5.8, 283.0], [5.9, 289.0], [6.0, 295.0], [6.1, 302.0], [6.2, 306.0], [6.3, 311.0], [6.4, 315.0], [6.5, 321.0], [6.6, 326.0], [6.7, 331.0], [6.8, 335.0], [6.9, 341.0], [7.0, 347.0], [7.1, 355.0], [7.2, 363.0], [7.3, 370.0], [7.4, 377.0], [7.5, 386.0], [7.6, 393.0], [7.7, 402.0], [7.8, 407.0], [7.9, 414.0], [8.0, 420.0], [8.1, 425.0], [8.2, 430.0], [8.3, 435.0], [8.4, 440.0], [8.5, 446.0], [8.6, 451.0], [8.7, 455.0], [8.8, 459.0], [8.9, 463.0], [9.0, 467.0], [9.1, 471.0], [9.2, 475.0], [9.3, 479.0], [9.4, 483.0], [9.5, 487.0], [9.6, 492.0], [9.7, 495.0], [9.8, 501.0], [9.9, 505.0], [10.0, 509.0], [10.1, 514.0], [10.2, 518.0], [10.3, 524.0], [10.4, 529.0], [10.5, 535.0], [10.6, 540.0], [10.7, 545.0], [10.8, 551.0], [10.9, 557.0], [11.0, 562.0], [11.1, 567.0], [11.2, 572.0], [11.3, 575.0], [11.4, 579.0], [11.5, 583.0], [11.6, 588.0], [11.7, 592.0], [11.8, 594.0], [11.9, 598.0], [12.0, 602.0], [12.1, 604.0], [12.2, 607.0], [12.3, 611.0], [12.4, 614.0], [12.5, 617.0], [12.6, 620.0], [12.7, 623.0], [12.8, 626.0], [12.9, 628.0], [13.0, 631.0], [13.1, 633.0], [13.2, 635.0], [13.3, 637.0], [13.4, 640.0], [13.5, 642.0], [13.6, 644.0], [13.7, 647.0], [13.8, 650.0], [13.9, 652.0], [14.0, 654.0], [14.1, 655.0], [14.2, 657.0], [14.3, 659.0], [14.4, 660.0], [14.5, 662.0], [14.6, 664.0], [14.7, 666.0], [14.8, 668.0], [14.9, 670.0], [15.0, 672.0], [15.1, 674.0], [15.2, 676.0], [15.3, 678.0], [15.4, 680.0], [15.5, 682.0], [15.6, 684.0], [15.7, 686.0], [15.8, 687.0], [15.9, 690.0], [16.0, 691.0], [16.1, 692.0], [16.2, 694.0], [16.3, 695.0], [16.4, 697.0], [16.5, 698.0], [16.6, 700.0], [16.7, 701.0], [16.8, 703.0], [16.9, 705.0], [17.0, 706.0], [17.1, 707.0], [17.2, 708.0], [17.3, 709.0], [17.4, 711.0], [17.5, 712.0], [17.6, 713.0], [17.7, 715.0], [17.8, 716.0], [17.9, 717.0], [18.0, 718.0], [18.1, 719.0], [18.2, 720.0], [18.3, 721.0], [18.4, 722.0], [18.5, 723.0], [18.6, 724.0], [18.7, 725.0], [18.8, 726.0], [18.9, 727.0], [19.0, 728.0], [19.1, 730.0], [19.2, 731.0], [19.3, 731.0], [19.4, 733.0], [19.5, 733.0], [19.6, 734.0], [19.7, 735.0], [19.8, 736.0], [19.9, 737.0], [20.0, 738.0], [20.1, 739.0], [20.2, 739.0], [20.3, 740.0], [20.4, 741.0], [20.5, 742.0], [20.6, 742.0], [20.7, 743.0], [20.8, 744.0], [20.9, 745.0], [21.0, 746.0], [21.1, 746.0], [21.2, 747.0], [21.3, 748.0], [21.4, 748.0], [21.5, 749.0], [21.6, 750.0], [21.7, 750.0], [21.8, 751.0], [21.9, 752.0], [22.0, 752.0], [22.1, 753.0], [22.2, 754.0], [22.3, 754.0], [22.4, 755.0], [22.5, 756.0], [22.6, 757.0], [22.7, 757.0], [22.8, 758.0], [22.9, 759.0], [23.0, 759.0], [23.1, 760.0], [23.2, 761.0], [23.3, 761.0], [23.4, 762.0], [23.5, 763.0], [23.6, 763.0], [23.7, 764.0], [23.8, 764.0], [23.9, 765.0], [24.0, 766.0], [24.1, 766.0], [24.2, 767.0], [24.3, 767.0], [24.4, 768.0], [24.5, 768.0], [24.6, 769.0], [24.7, 770.0], [24.8, 770.0], [24.9, 771.0], [25.0, 771.0], [25.1, 772.0], [25.2, 773.0], [25.3, 773.0], [25.4, 774.0], [25.5, 775.0], [25.6, 775.0], [25.7, 776.0], [25.8, 776.0], [25.9, 777.0], [26.0, 777.0], [26.1, 778.0], [26.2, 778.0], [26.3, 779.0], [26.4, 779.0], [26.5, 780.0], [26.6, 781.0], [26.7, 781.0], [26.8, 782.0], [26.9, 782.0], [27.0, 783.0], [27.1, 783.0], [27.2, 784.0], [27.3, 784.0], [27.4, 785.0], [27.5, 785.0], [27.6, 786.0], [27.7, 786.0], [27.8, 787.0], [27.9, 787.0], [28.0, 787.0], [28.1, 788.0], [28.2, 788.0], [28.3, 789.0], [28.4, 789.0], [28.5, 790.0], [28.6, 790.0], [28.7, 791.0], [28.8, 791.0], [28.9, 791.0], [29.0, 792.0], [29.1, 793.0], [29.2, 793.0], [29.3, 794.0], [29.4, 794.0], [29.5, 795.0], [29.6, 795.0], [29.7, 795.0], [29.8, 796.0], [29.9, 796.0], [30.0, 797.0], [30.1, 798.0], [30.2, 798.0], [30.3, 799.0], [30.4, 799.0], [30.5, 799.0], [30.6, 800.0], [30.7, 800.0], [30.8, 800.0], [30.9, 801.0], [31.0, 801.0], [31.1, 802.0], [31.2, 802.0], [31.3, 803.0], [31.4, 803.0], [31.5, 804.0], [31.6, 804.0], [31.7, 804.0], [31.8, 805.0], [31.9, 805.0], [32.0, 806.0], [32.1, 806.0], [32.2, 807.0], [32.3, 807.0], [32.4, 807.0], [32.5, 808.0], [32.6, 808.0], [32.7, 809.0], [32.8, 809.0], [32.9, 809.0], [33.0, 810.0], [33.1, 810.0], [33.2, 810.0], [33.3, 811.0], [33.4, 811.0], [33.5, 812.0], [33.6, 812.0], [33.7, 812.0], [33.8, 813.0], [33.9, 813.0], [34.0, 814.0], [34.1, 814.0], [34.2, 815.0], [34.3, 815.0], [34.4, 815.0], [34.5, 816.0], [34.6, 816.0], [34.7, 817.0], [34.8, 817.0], [34.9, 817.0], [35.0, 818.0], [35.1, 818.0], [35.2, 819.0], [35.3, 819.0], [35.4, 819.0], [35.5, 820.0], [35.6, 820.0], [35.7, 820.0], [35.8, 821.0], [35.9, 821.0], [36.0, 822.0], [36.1, 822.0], [36.2, 822.0], [36.3, 823.0], [36.4, 823.0], [36.5, 823.0], [36.6, 824.0], [36.7, 824.0], [36.8, 825.0], [36.9, 825.0], [37.0, 825.0], [37.1, 826.0], [37.2, 826.0], [37.3, 826.0], [37.4, 827.0], [37.5, 827.0], [37.6, 828.0], [37.7, 828.0], [37.8, 828.0], [37.9, 828.0], [38.0, 829.0], [38.1, 829.0], [38.2, 829.0], [38.3, 830.0], [38.4, 830.0], [38.5, 830.0], [38.6, 831.0], [38.7, 831.0], [38.8, 831.0], [38.9, 832.0], [39.0, 832.0], [39.1, 833.0], [39.2, 833.0], [39.3, 833.0], [39.4, 833.0], [39.5, 834.0], [39.6, 834.0], [39.7, 834.0], [39.8, 835.0], [39.9, 835.0], [40.0, 835.0], [40.1, 836.0], [40.2, 836.0], [40.3, 836.0], [40.4, 837.0], [40.5, 837.0], [40.6, 837.0], [40.7, 838.0], [40.8, 838.0], [40.9, 839.0], [41.0, 839.0], [41.1, 839.0], [41.2, 840.0], [41.3, 840.0], [41.4, 840.0], [41.5, 841.0], [41.6, 841.0], [41.7, 842.0], [41.8, 842.0], [41.9, 842.0], [42.0, 842.0], [42.1, 843.0], [42.2, 843.0], [42.3, 843.0], [42.4, 844.0], [42.5, 844.0], [42.6, 844.0], [42.7, 845.0], [42.8, 845.0], [42.9, 845.0], [43.0, 846.0], [43.1, 846.0], [43.2, 846.0], [43.3, 847.0], [43.4, 847.0], [43.5, 847.0], [43.6, 847.0], [43.7, 848.0], [43.8, 848.0], [43.9, 848.0], [44.0, 849.0], [44.1, 849.0], [44.2, 849.0], [44.3, 850.0], [44.4, 850.0], [44.5, 850.0], [44.6, 851.0], [44.7, 851.0], [44.8, 851.0], [44.9, 852.0], [45.0, 852.0], [45.1, 852.0], [45.2, 853.0], [45.3, 853.0], [45.4, 853.0], [45.5, 853.0], [45.6, 854.0], [45.7, 854.0], [45.8, 854.0], [45.9, 855.0], [46.0, 855.0], [46.1, 855.0], [46.2, 855.0], [46.3, 856.0], [46.4, 856.0], [46.5, 856.0], [46.6, 857.0], [46.7, 857.0], [46.8, 857.0], [46.9, 858.0], [47.0, 858.0], [47.1, 858.0], [47.2, 858.0], [47.3, 859.0], [47.4, 859.0], [47.5, 859.0], [47.6, 860.0], [47.7, 860.0], [47.8, 860.0], [47.9, 860.0], [48.0, 861.0], [48.1, 861.0], [48.2, 861.0], [48.3, 862.0], [48.4, 862.0], [48.5, 862.0], [48.6, 862.0], [48.7, 863.0], [48.8, 863.0], [48.9, 863.0], [49.0, 864.0], [49.1, 864.0], [49.2, 864.0], [49.3, 864.0], [49.4, 865.0], [49.5, 865.0], [49.6, 865.0], [49.7, 866.0], [49.8, 866.0], [49.9, 866.0], [50.0, 867.0], [50.1, 867.0], [50.2, 867.0], [50.3, 867.0], [50.4, 868.0], [50.5, 868.0], [50.6, 868.0], [50.7, 868.0], [50.8, 869.0], [50.9, 869.0], [51.0, 869.0], [51.1, 870.0], [51.2, 870.0], [51.3, 870.0], [51.4, 870.0], [51.5, 871.0], [51.6, 871.0], [51.7, 871.0], [51.8, 871.0], [51.9, 872.0], [52.0, 872.0], [52.1, 872.0], [52.2, 873.0], [52.3, 873.0], [52.4, 873.0], [52.5, 874.0], [52.6, 874.0], [52.7, 874.0], [52.8, 874.0], [52.9, 875.0], [53.0, 875.0], [53.1, 876.0], [53.2, 876.0], [53.3, 876.0], [53.4, 877.0], [53.5, 877.0], [53.6, 877.0], [53.7, 878.0], [53.8, 878.0], [53.9, 878.0], [54.0, 879.0], [54.1, 879.0], [54.2, 879.0], [54.3, 879.0], [54.4, 880.0], [54.5, 880.0], [54.6, 880.0], [54.7, 881.0], [54.8, 881.0], [54.9, 881.0], [55.0, 882.0], [55.1, 882.0], [55.2, 882.0], [55.3, 883.0], [55.4, 883.0], [55.5, 883.0], [55.6, 883.0], [55.7, 884.0], [55.8, 884.0], [55.9, 884.0], [56.0, 885.0], [56.1, 885.0], [56.2, 885.0], [56.3, 886.0], [56.4, 886.0], [56.5, 886.0], [56.6, 886.0], [56.7, 887.0], [56.8, 887.0], [56.9, 887.0], [57.0, 888.0], [57.1, 888.0], [57.2, 888.0], [57.3, 888.0], [57.4, 889.0], [57.5, 889.0], [57.6, 889.0], [57.7, 890.0], [57.8, 890.0], [57.9, 890.0], [58.0, 890.0], [58.1, 891.0], [58.2, 891.0], [58.3, 891.0], [58.4, 892.0], [58.5, 892.0], [58.6, 892.0], [58.7, 893.0], [58.8, 893.0], [58.9, 893.0], [59.0, 893.0], [59.1, 894.0], [59.2, 894.0], [59.3, 894.0], [59.4, 895.0], [59.5, 895.0], [59.6, 895.0], [59.7, 896.0], [59.8, 896.0], [59.9, 896.0], [60.0, 897.0], [60.1, 897.0], [60.2, 897.0], [60.3, 898.0], [60.4, 898.0], [60.5, 898.0], [60.6, 898.0], [60.7, 899.0], [60.8, 899.0], [60.9, 899.0], [61.0, 900.0], [61.1, 900.0], [61.2, 900.0], [61.3, 900.0], [61.4, 901.0], [61.5, 901.0], [61.6, 901.0], [61.7, 901.0], [61.8, 902.0], [61.9, 902.0], [62.0, 902.0], [62.1, 903.0], [62.2, 903.0], [62.3, 903.0], [62.4, 904.0], [62.5, 904.0], [62.6, 904.0], [62.7, 905.0], [62.8, 905.0], [62.9, 905.0], [63.0, 906.0], [63.1, 906.0], [63.2, 906.0], [63.3, 906.0], [63.4, 907.0], [63.5, 907.0], [63.6, 907.0], [63.7, 908.0], [63.8, 908.0], [63.9, 908.0], [64.0, 909.0], [64.1, 909.0], [64.2, 909.0], [64.3, 909.0], [64.4, 910.0], [64.5, 910.0], [64.6, 910.0], [64.7, 911.0], [64.8, 911.0], [64.9, 911.0], [65.0, 912.0], [65.1, 912.0], [65.2, 912.0], [65.3, 913.0], [65.4, 913.0], [65.5, 913.0], [65.6, 914.0], [65.7, 914.0], [65.8, 914.0], [65.9, 915.0], [66.0, 915.0], [66.1, 915.0], [66.2, 916.0], [66.3, 916.0], [66.4, 916.0], [66.5, 917.0], [66.6, 917.0], [66.7, 917.0], [66.8, 917.0], [66.9, 918.0], [67.0, 918.0], [67.1, 918.0], [67.2, 919.0], [67.3, 919.0], [67.4, 919.0], [67.5, 920.0], [67.6, 920.0], [67.7, 921.0], [67.8, 921.0], [67.9, 921.0], [68.0, 921.0], [68.1, 922.0], [68.2, 922.0], [68.3, 922.0], [68.4, 923.0], [68.5, 923.0], [68.6, 923.0], [68.7, 924.0], [68.8, 924.0], [68.9, 924.0], [69.0, 925.0], [69.1, 925.0], [69.2, 925.0], [69.3, 926.0], [69.4, 926.0], [69.5, 926.0], [69.6, 927.0], [69.7, 927.0], [69.8, 927.0], [69.9, 928.0], [70.0, 928.0], [70.1, 929.0], [70.2, 929.0], [70.3, 929.0], [70.4, 930.0], [70.5, 930.0], [70.6, 930.0], [70.7, 931.0], [70.8, 931.0], [70.9, 931.0], [71.0, 932.0], [71.1, 932.0], [71.2, 933.0], [71.3, 933.0], [71.4, 933.0], [71.5, 934.0], [71.6, 934.0], [71.7, 934.0], [71.8, 935.0], [71.9, 935.0], [72.0, 935.0], [72.1, 936.0], [72.2, 936.0], [72.3, 937.0], [72.4, 937.0], [72.5, 937.0], [72.6, 938.0], [72.7, 938.0], [72.8, 938.0], [72.9, 939.0], [73.0, 939.0], [73.1, 939.0], [73.2, 940.0], [73.3, 940.0], [73.4, 940.0], [73.5, 941.0], [73.6, 941.0], [73.7, 941.0], [73.8, 942.0], [73.9, 942.0], [74.0, 943.0], [74.1, 943.0], [74.2, 943.0], [74.3, 944.0], [74.4, 944.0], [74.5, 944.0], [74.6, 945.0], [74.7, 945.0], [74.8, 946.0], [74.9, 946.0], [75.0, 946.0], [75.1, 947.0], [75.2, 947.0], [75.3, 948.0], [75.4, 948.0], [75.5, 948.0], [75.6, 949.0], [75.7, 949.0], [75.8, 950.0], [75.9, 950.0], [76.0, 950.0], [76.1, 951.0], [76.2, 951.0], [76.3, 951.0], [76.4, 952.0], [76.5, 952.0], [76.6, 953.0], [76.7, 953.0], [76.8, 953.0], [76.9, 954.0], [77.0, 954.0], [77.1, 955.0], [77.2, 955.0], [77.3, 956.0], [77.4, 956.0], [77.5, 956.0], [77.6, 957.0], [77.7, 957.0], [77.8, 958.0], [77.9, 958.0], [78.0, 958.0], [78.1, 959.0], [78.2, 959.0], [78.3, 960.0], [78.4, 960.0], [78.5, 960.0], [78.6, 961.0], [78.7, 961.0], [78.8, 962.0], [78.9, 962.0], [79.0, 962.0], [79.1, 963.0], [79.2, 963.0], [79.3, 964.0], [79.4, 964.0], [79.5, 964.0], [79.6, 965.0], [79.7, 965.0], [79.8, 965.0], [79.9, 966.0], [80.0, 966.0], [80.1, 967.0], [80.2, 967.0], [80.3, 967.0], [80.4, 968.0], [80.5, 968.0], [80.6, 969.0], [80.7, 969.0], [80.8, 970.0], [80.9, 970.0], [81.0, 971.0], [81.1, 971.0], [81.2, 971.0], [81.3, 972.0], [81.4, 972.0], [81.5, 973.0], [81.6, 973.0], [81.7, 974.0], [81.8, 974.0], [81.9, 975.0], [82.0, 975.0], [82.1, 976.0], [82.2, 976.0], [82.3, 977.0], [82.4, 977.0], [82.5, 978.0], [82.6, 978.0], [82.7, 979.0], [82.8, 979.0], [82.9, 979.0], [83.0, 980.0], [83.1, 980.0], [83.2, 981.0], [83.3, 982.0], [83.4, 982.0], [83.5, 983.0], [83.6, 983.0], [83.7, 984.0], [83.8, 984.0], [83.9, 985.0], [84.0, 985.0], [84.1, 985.0], [84.2, 986.0], [84.3, 986.0], [84.4, 987.0], [84.5, 987.0], [84.6, 988.0], [84.7, 988.0], [84.8, 989.0], [84.9, 990.0], [85.0, 990.0], [85.1, 990.0], [85.2, 991.0], [85.3, 992.0], [85.4, 992.0], [85.5, 993.0], [85.6, 993.0], [85.7, 994.0], [85.8, 994.0], [85.9, 995.0], [86.0, 995.0], [86.1, 996.0], [86.2, 996.0], [86.3, 997.0], [86.4, 998.0], [86.5, 998.0], [86.6, 999.0], [86.7, 999.0], [86.8, 1000.0], [86.9, 1001.0], [87.0, 1001.0], [87.1, 1002.0], [87.2, 1002.0], [87.3, 1003.0], [87.4, 1004.0], [87.5, 1004.0], [87.6, 1005.0], [87.7, 1006.0], [87.8, 1006.0], [87.9, 1007.0], [88.0, 1007.0], [88.1, 1008.0], [88.2, 1009.0], [88.3, 1009.0], [88.4, 1010.0], [88.5, 1010.0], [88.6, 1011.0], [88.7, 1011.0], [88.8, 1012.0], [88.9, 1013.0], [89.0, 1013.0], [89.1, 1014.0], [89.2, 1015.0], [89.3, 1015.0], [89.4, 1016.0], [89.5, 1017.0], [89.6, 1018.0], [89.7, 1018.0], [89.8, 1019.0], [89.9, 1020.0], [90.0, 1020.0], [90.1, 1021.0], [90.2, 1022.0], [90.3, 1022.0], [90.4, 1023.0], [90.5, 1024.0], [90.6, 1024.0], [90.7, 1025.0], [90.8, 1026.0], [90.9, 1027.0], [91.0, 1028.0], [91.1, 1029.0], [91.2, 1029.0], [91.3, 1030.0], [91.4, 1031.0], [91.5, 1032.0], [91.6, 1033.0], [91.7, 1034.0], [91.8, 1035.0], [91.9, 1036.0], [92.0, 1037.0], [92.1, 1038.0], [92.2, 1039.0], [92.3, 1040.0], [92.4, 1042.0], [92.5, 1043.0], [92.6, 1044.0], [92.7, 1045.0], [92.8, 1046.0], [92.9, 1047.0], [93.0, 1049.0], [93.1, 1050.0], [93.2, 1051.0], [93.3, 1052.0], [93.4, 1053.0], [93.5, 1055.0], [93.6, 1056.0], [93.7, 1057.0], [93.8, 1058.0], [93.9, 1060.0], [94.0, 1061.0], [94.1, 1063.0], [94.2, 1064.0], [94.3, 1066.0], [94.4, 1067.0], [94.5, 1070.0], [94.6, 1072.0], [94.7, 1074.0], [94.8, 1075.0], [94.9, 1078.0], [95.0, 1080.0], [95.1, 1082.0], [95.2, 1084.0], [95.3, 1086.0], [95.4, 1088.0], [95.5, 1091.0], [95.6, 1093.0], [95.7, 1096.0], [95.8, 1099.0], [95.9, 1101.0], [96.0, 1104.0], [96.1, 1107.0], [96.2, 1110.0], [96.3, 1113.0], [96.4, 1117.0], [96.5, 1122.0], [96.6, 1127.0], [96.7, 1131.0], [96.8, 1137.0], [96.9, 1143.0], [97.0, 1150.0], [97.1, 1157.0], [97.2, 1163.0], [97.3, 1172.0], [97.4, 1181.0], [97.5, 1192.0], [97.6, 1203.0], [97.7, 1214.0], [97.8, 1226.0], [97.9, 1235.0], [98.0, 1257.0], [98.1, 1275.0], [98.2, 1293.0], [98.3, 1328.0], [98.4, 1373.0], [98.5, 1416.0], [98.6, 1526.0], [98.7, 1592.0], [98.8, 1627.0], [98.9, 1657.0], [99.0, 1683.0], [99.1, 1705.0], [99.2, 1728.0], [99.3, 1752.0], [99.4, 1771.0], [99.5, 1793.0], [99.6, 1814.0], [99.7, 1851.0], [99.8, 1891.0], [99.9, 1966.0]], "isOverall": false, "label": "POST employee", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 39788.0, "series": [{"data": [[0.0, 575.0], [600.0, 832.0], [700.0, 1865.0], [800.0, 5006.0], [900.0, 11177.0], [1000.0, 10859.0], [1100.0, 4393.0], [1200.0, 1052.0], [1300.0, 296.0], [1400.0, 142.0], [1500.0, 89.0], [100.0, 880.0], [1600.0, 69.0], [1700.0, 97.0], [1800.0, 131.0], [1900.0, 118.0], [2000.0, 40.0], [2100.0, 23.0], [2200.0, 6.0], [2300.0, 2.0], [2500.0, 4.0], [2600.0, 2.0], [2800.0, 4.0], [2700.0, 2.0], [200.0, 423.0], [300.0, 588.0], [400.0, 572.0], [500.0, 753.0]], "isOverall": false, "label": "GET All employees", "isController": false}, {"data": [[0.0, 39788.0], [300.0, 22.0], [600.0, 1.0], [19400.0, 1.0], [700.0, 1.0], [11200.0, 1.0], [100.0, 149.0], [400.0, 10.0], [200.0, 27.0]], "isOverall": false, "label": "GET thread name", "isController": false}, {"data": [[0.0, 1695.0], [600.0, 2254.0], [700.0, 6600.0], [12100.0, 2.0], [12000.0, 1.0], [800.0, 12440.0], [900.0, 9327.0], [1000.0, 2815.0], [1100.0, 534.0], [1200.0, 189.0], [1300.0, 97.0], [1400.0, 38.0], [1500.0, 78.0], [100.0, 494.0], [1600.0, 167.0], [1700.0, 161.0], [1800.0, 103.0], [1900.0, 31.0], [2000.0, 7.0], [2100.0, 1.0], [2200.0, 1.0], [2400.0, 1.0], [2500.0, 2.0], [2600.0, 1.0], [3100.0, 1.0], [200.0, 492.0], [300.0, 711.0], [400.0, 851.0], [500.0, 906.0]], "isOverall": false, "label": "GET employee by id", "isController": false}, {"data": [[0.0, 1486.0], [600.0, 1854.0], [700.0, 5606.0], [800.0, 12156.0], [900.0, 10294.0], [1000.0, 3648.0], [1100.0, 695.0], [1200.0, 260.0], [1300.0, 100.0], [1400.0, 46.0], [1500.0, 55.0], [100.0, 397.0], [1600.0, 140.0], [1700.0, 185.0], [1800.0, 112.0], [1900.0, 40.0], [2000.0, 14.0], [2100.0, 2.0], [2300.0, 3.0], [2200.0, 1.0], [2400.0, 3.0], [2500.0, 1.0], [2600.0, 2.0], [2700.0, 1.0], [2800.0, 3.0], [200.0, 545.0], [3200.0, 1.0], [3300.0, 1.0], [4200.0, 1.0], [300.0, 642.0], [400.0, 840.0], [500.0, 866.0]], "isOverall": false, "label": "POST employee", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 19400.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 1710.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 107088.0, "series": [{"data": [[0.0, 51202.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 107088.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 1710.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 37.33155792276964, "minX": 1.73470758E12, "maxY": 200.0, "series": [{"data": [[1.7347077E12, 200.0], [1.73470818E12, 37.33155792276964], [1.734708E12, 187.07963875205255], [1.73470758E12, 61.498934494579984], [1.73470806E12, 173.5370962257739], [1.73470788E12, 200.0], [1.73470794E12, 198.0109688093632], [1.73470776E12, 200.0], [1.73470782E12, 200.0], [1.73470764E12, 188.84426405762733], [1.73470812E12, 130.85487560766342]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.73470818E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 4.041666666666667, "minX": 1.0, "maxY": 1442.4303797468353, "series": [{"data": [[2.0, 76.0], [3.0, 124.33333333333333], [4.0, 86.0], [5.0, 249.0], [6.0, 84.42857142857143], [7.0, 188.0], [8.0, 221.13333333333333], [9.0, 66.23076923076923], [10.0, 56.147058823529406], [11.0, 58.20588235294118], [12.0, 73.03125], [13.0, 75.93548387096776], [14.0, 68.6470588235294], [15.0, 71.34285714285713], [16.0, 73.28125], [17.0, 84.6857142857143], [18.0, 81.67857142857143], [19.0, 254.84615384615378], [20.0, 158.44444444444449], [21.0, 91.29411764705883], [22.0, 103.11111111111109], [23.0, 114.48717948717949], [24.0, 108.4857142857143], [25.0, 108.0], [26.0, 106.64864864864863], [27.0, 130.6923076923077], [28.0, 134.92307692307693], [29.0, 118.97297297297297], [30.0, 116.64864864864867], [31.0, 113.37837837837839], [32.0, 124.17142857142855], [33.0, 127.53125], [34.0, 123.22580645161291], [35.0, 135.20000000000002], [36.0, 146.6], [37.0, 233.67567567567565], [38.0, 292.64285714285717], [39.0, 224.30434782608697], [40.0, 230.71428571428572], [41.0, 223.35], [42.0, 269.9459459459459], [43.0, 247.08695652173913], [44.0, 274.68965517241384], [45.0, 244.29166666666666], [46.0, 267.59090909090907], [47.0, 281.33333333333337], [48.0, 301.1818181818182], [49.0, 272.6896551724138], [50.0, 340.75000000000006], [51.0, 272.46875], [52.0, 316.61904761904754], [53.0, 264.3333333333333], [54.0, 364.76000000000005], [55.0, 274.8333333333333], [56.0, 321.1428571428571], [57.0, 285.1923076923078], [58.0, 312.35714285714283], [59.0, 360.7142857142857], [60.0, 354.4999999999999], [61.0, 440.138888888889], [62.0, 334.5217391304348], [63.0, 315.9599999999999], [64.0, 380.96], [65.0, 327.31818181818176], [66.0, 392.32352941176475], [67.0, 435.875], [68.0, 389.17647058823536], [69.0, 407.73333333333335], [70.0, 382.88], [71.0, 323.21739130434787], [72.0, 373.56000000000006], [73.0, 408.3928571428572], [74.0, 457.1860465116279], [75.0, 455.1818181818182], [76.0, 517.0555555555557], [77.0, 532.5384615384615], [78.0, 476.3428571428571], [79.0, 489.4000000000001], [80.0, 568.28125], [81.0, 502.8666666666666], [82.0, 468.18749999999994], [83.0, 440.21212121212125], [84.0, 474.3529411764706], [85.0, 474.87500000000006], [86.0, 420.7142857142857], [87.0, 538.153846153846], [88.0, 485.6388888888889], [89.0, 488.64], [90.0, 443.3703703703704], [91.0, 533.7692307692306], [92.0, 556.3243243243243], [93.0, 521.5645161290322], [94.0, 492.1842105263159], [95.0, 576.6904761904763], [96.0, 561.1388888888888], [97.0, 572.4999999999999], [98.0, 430.21739130434787], [99.0, 478.51351351351354], [100.0, 520.5714285714286], [101.0, 667.4915254237288], [102.0, 557.8648648648649], [103.0, 460.3846153846155], [104.0, 586.5303030303031], [105.0, 619.0810810810809], [106.0, 579.9999999999999], [107.0, 665.9565217391304], [108.0, 485.92307692307696], [109.0, 587.1052631578948], [110.0, 571.5454545454545], [111.0, 643.8709677419355], [112.0, 667.5301204819276], [113.0, 679.3513513513515], [114.0, 610.0967741935486], [115.0, 618.7631578947369], [116.0, 709.646153846154], [117.0, 651.0512820512822], [118.0, 603.6896551724137], [119.0, 639.171875], [120.0, 539.0], [121.0, 686.7708333333334], [122.0, 661.4615384615385], [123.0, 668.5918367346937], [124.0, 656.9024390243902], [125.0, 697.3157894736842], [126.0, 636.5999999999999], [127.0, 682.7894736842106], [128.0, 762.8813559322033], [129.0, 788.9655172413793], [130.0, 743.4951456310682], [131.0, 749.5555555555554], [132.0, 679.081081081081], [133.0, 634.8260869565219], [134.0, 781.0243902439025], [135.0, 855.259259259259], [136.0, 873.5113636363635], [137.0, 897.8275862068967], [138.0, 716.8000000000001], [139.0, 802.7386934673369], [140.0, 752.0136986301369], [141.0, 706.8846153846156], [142.0, 823.0795454545453], [143.0, 821.3684210526317], [144.0, 855.95], [145.0, 716.2500000000002], [146.0, 649.4137931034484], [147.0, 804.2013888888893], [148.0, 859.7156862745095], [149.0, 907.2735849056601], [150.0, 912.7931034482757], [151.0, 912.6923076923077], [152.0, 826.9375000000001], [153.0, 837.5360824742271], [154.0, 904.8157894736843], [155.0, 899.5090909090908], [156.0, 845.3186813186812], [157.0, 870.2413793103448], [158.0, 1005.368098159509], [159.0, 1172.4677419354837], [160.0, 996.4318181818182], [161.0, 1187.708860759494], [162.0, 1309.9786324786332], [163.0, 1442.4303797468353], [164.0, 1331.9554140127386], [165.0, 994.122807017544], [166.0, 1006.4974874371857], [167.0, 828.6666666666665], [168.0, 794.2962962962963], [169.0, 980.3903225806453], [170.0, 952.7093023255815], [171.0, 988.7523809523809], [172.0, 1001.9856115107916], [173.0, 925.4265734265734], [174.0, 900.7297297297298], [175.0, 970.8085419734897], [176.0, 914.6165413533834], [177.0, 995.3388429752066], [178.0, 998.0179640718565], [179.0, 928.3870967741934], [180.0, 1046.6805555555543], [181.0, 1008.7296296296299], [182.0, 1040.6101694915253], [183.0, 980.5572519083967], [184.0, 974.1407942238263], [185.0, 997.8121330724073], [186.0, 952.1482889733838], [187.0, 1003.9374999999997], [188.0, 1045.5050732807222], [189.0, 1050.489247311829], [190.0, 1029.324137931035], [191.0, 1102.6396103896104], [192.0, 964.2016129032259], [193.0, 1027.865580448065], [194.0, 910.6415094339623], [195.0, 927.4791666666667], [196.0, 1002.9166666666665], [197.0, 1031.0517241379307], [198.0, 1045.3586206896553], [199.0, 1051.2750000000008], [200.0, 997.8830924222502], [1.0, 62.0]], "isOverall": false, "label": "GET All employees", "isController": false}, {"data": [[178.63725000000022, 934.6347500000019]], "isOverall": false, "label": "GET All employees-Aggregated", "isController": false}, {"data": [[2.0, 191.0], [3.0, 10.0], [5.0, 160.66666666666669], [6.0, 14.500000000000002], [7.0, 9.0], [8.0, 22.529411764705884], [9.0, 5.4799999999999995], [10.0, 5.156249999999999], [11.0, 5.942857142857143], [12.0, 6.354838709677419], [13.0, 7.483870967741933], [14.0, 17.11111111111111], [15.0, 5.057142857142858], [16.0, 5.031250000000001], [17.0, 5.416666666666665], [18.0, 8.653846153846153], [19.0, 143.66666666666669], [20.0, 57.48484848484849], [21.0, 10.051282051282056], [22.0, 7.138888888888889], [23.0, 77.30434782608695], [24.0, 5.484848484848485], [25.0, 6.028571428571429], [26.0, 5.257142857142856], [27.0, 4.953488372093024], [28.0, 5.17142857142857], [29.0, 6.2564102564102555], [30.0, 5.5], [31.0, 5.974358974358974], [32.0, 6.352941176470587], [33.0, 7.939393939393939], [34.0, 10.40625], [35.0, 5.789473684210526], [36.0, 8.3125], [37.0, 43.65909090909091], [38.0, 9.571428571428571], [39.0, 5.476190476190475], [40.0, 6.714285714285714], [41.0, 6.473684210526315], [42.0, 6.34375], [43.0, 7.193548387096774], [44.0, 5.849999999999999], [45.0, 23.759999999999994], [46.0, 9.208333333333334], [47.0, 10.454545454545453], [48.0, 6.454545454545455], [49.0, 6.487179487179487], [50.0, 6.277777777777779], [51.0, 5.08], [52.0, 7.750000000000001], [53.0, 6.416666666666666], [54.0, 8.935483870967744], [55.0, 5.142857142857144], [56.0, 6.619047619047619], [57.0, 10.095238095238095], [58.0, 9.871794871794874], [59.0, 9.571428571428573], [60.0, 6.862745098039216], [61.0, 6.885714285714286], [62.0, 5.541666666666666], [63.0, 5.680000000000001], [64.0, 5.962962962962963], [65.0, 5.15], [66.0, 17.457142857142856], [67.0, 5.343750000000001], [68.0, 6.181818181818183], [69.0, 11.966666666666669], [70.0, 6.200000000000001], [71.0, 5.260869565217391], [72.0, 5.519999999999999], [73.0, 5.821428571428572], [74.0, 5.9523809523809526], [75.0, 6.086956521739131], [76.0, 5.444444444444444], [77.0, 7.192307692307691], [78.0, 4.861111111111111], [79.0, 6.384615384615384], [80.0, 5.15625], [81.0, 6.333333333333334], [82.0, 5.812499999999999], [83.0, 4.911764705882352], [84.0, 4.9393939393939394], [85.0, 4.041666666666667], [86.0, 5.607142857142857], [87.0, 5.557692307692308], [88.0, 6.027777777777779], [89.0, 5.359999999999999], [90.0, 5.296296296296296], [91.0, 5.096153846153848], [92.0, 5.027027027027028], [93.0, 11.622950819672134], [94.0, 5.153846153846155], [95.0, 5.714285714285715], [96.0, 5.864864864864866], [97.0, 5.545454545454547], [98.0, 6.545454545454547], [99.0, 6.92105263157895], [100.0, 6.678571428571427], [101.0, 5.627118644067797], [102.0, 6.108108108108108], [103.0, 6.56], [104.0, 5.253731343283583], [105.0, 6.094594594594597], [106.0, 5.208333333333332], [107.0, 4.528571428571427], [108.0, 5.615384615384615], [109.0, 6.055555555555556], [110.0, 8.047619047619047], [111.0, 5.636363636363636], [112.0, 6.035714285714287], [113.0, 4.485714285714286], [114.0, 6.492063492063491], [115.0, 18.16666666666667], [116.0, 6.166666666666669], [117.0, 7.425000000000002], [118.0, 6.482758620689657], [119.0, 5.4923076923076914], [120.0, 6.88], [121.0, 12.6875], [122.0, 5.894736842105262], [123.0, 6.300000000000001], [124.0, 5.317073170731708], [125.0, 9.31578947368421], [126.0, 8.083333333333334], [127.0, 5.421052631578947], [128.0, 13.245901639344261], [129.0, 5.750000000000001], [130.0, 5.8543689320388355], [131.0, 13.187500000000005], [132.0, 6.457142857142858], [133.0, 6.473684210526316], [134.0, 6.166666666666668], [135.0, 5.518072289156628], [136.0, 5.534090909090909], [137.0, 5.566666666666666], [138.0, 7.6], [139.0, 6.311557788944727], [140.0, 5.577464788732395], [141.0, 22.71428571428571], [142.0, 16.462857142857143], [143.0, 6.389830508474577], [144.0, 5.054054054054054], [145.0, 5.96], [146.0, 6.4642857142857135], [147.0, 5.685314685314688], [148.0, 5.307692307692309], [149.0, 5.790476190476191], [150.0, 5.556818181818184], [151.0, 5.5555555555555545], [152.0, 6.153846153846153], [153.0, 5.275510204081636], [154.0, 6.026315789473684], [155.0, 6.226415094339622], [156.0, 5.769230769230768], [157.0, 6.070175438596491], [158.0, 6.266666666666666], [159.0, 5.266666666666667], [160.0, 6.113636363636363], [161.0, 6.044025157232704], [162.0, 6.297872340425532], [163.0, 6.1923076923076925], [164.0, 6.634615384615385], [165.0, 10.440677966101694], [166.0, 5.494974874371859], [167.0, 5.267857142857143], [168.0, 4.964285714285715], [169.0, 5.809061488673136], [170.0, 9.321637426900578], [171.0, 6.103773584905661], [172.0, 8.93705035971223], [173.0, 6.0139860139860115], [174.0, 5.810810810810809], [175.0, 7.408554572271389], [176.0, 6.7593984962406015], [177.0, 8.016260162601622], [178.0, 5.826347305389222], [179.0, 5.628099173553717], [180.0, 6.101108033241002], [181.0, 13.562962962962965], [182.0, 6.220338983050849], [183.0, 12.212121212121204], [184.0, 8.090909090909092], [185.0, 5.717348927875241], [186.0, 6.133587786259539], [187.0, 9.692307692307683], [188.0, 6.494382022471912], [189.0, 6.62635379061372], [190.0, 7.168384879725083], [191.0, 9.59415584415585], [192.0, 25.1484375], [193.0, 14.81967213114754], [194.0, 6.415094339622641], [195.0, 5.695652173913043], [196.0, 5.920289855072462], [197.0, 6.913793103448277], [198.0, 5.7687074829931975], [199.0, 5.8020050125313265], [200.0, 8.444196233026723], [1.0, 29.0]], "isOverall": false, "label": "GET thread name", "isController": false}, {"data": [[178.63587499999903, 8.227575000000028]], "isOverall": false, "label": "GET thread name-Aggregated", "isController": false}, {"data": [[2.0, 214.0], [3.0, 140.66666666666666], [4.0, 14.0], [6.0, 31.214285714285708], [7.0, 10.0], [8.0, 6.666666666666668], [9.0, 7.379310344827586], [10.0, 7.314285714285713], [11.0, 9.121212121212121], [12.0, 12.909090909090907], [13.0, 15.0], [14.0, 15.970588235294112], [15.0, 11.437500000000002], [16.0, 15.447368421052632], [17.0, 21.424242424242422], [18.0, 17.57692307692308], [20.0, 26.272727272727277], [21.0, 19.882352941176475], [22.0, 38.58823529411764], [23.0, 75.68421052631578], [24.0, 34.52777777777778], [25.0, 42.55555555555556], [26.0, 47.702702702702695], [27.0, 50.558139534883715], [28.0, 48.515151515151516], [29.0, 67.43243243243244], [30.0, 45.27027027027027], [31.0, 59.806451612903224], [32.0, 54.86111111111111], [33.0, 62.43589743589744], [34.0, 60.10344827586208], [35.0, 79.95833333333334], [36.0, 73.35714285714285], [37.0, 143.8421052631579], [38.0, 83.88461538461539], [39.0, 157.12499999999997], [40.0, 162.65625000000003], [41.0, 139.0], [42.0, 149.6511627906977], [43.0, 128.36363636363635], [44.0, 170.05555555555554], [45.0, 135.31250000000003], [46.0, 100.90909090909089], [47.0, 240.05263157894737], [48.0, 128.4], [49.0, 139.53333333333333], [50.0, 125.10714285714285], [51.0, 260.8181818181818], [52.0, 153.42857142857144], [53.0, 158.81250000000003], [54.0, 180.47826086956525], [55.0, 156.0], [56.0, 252.18749999999997], [57.0, 189.40425531914894], [58.0, 251.0909090909091], [59.0, 175.00000000000003], [60.0, 265.5283018867924], [61.0, 314.78571428571416], [62.0, 186.30555555555554], [63.0, 257.4285714285714], [64.0, 218.46153846153842], [65.0, 202.53333333333333], [66.0, 293.1600000000001], [67.0, 256.41860465116275], [68.0, 267.00000000000006], [69.0, 326.0], [70.0, 251.66666666666669], [71.0, 234.46153846153848], [72.0, 307.20000000000005], [73.0, 293.774193548387], [74.0, 278.9], [75.0, 412.3636363636363], [76.0, 396.7142857142857], [77.0, 319.81481481481484], [78.0, 332.34210526315786], [79.0, 332.0999999999999], [80.0, 422.6129032258065], [81.0, 363.0], [82.0, 343.2926829268293], [83.0, 310.20833333333337], [84.0, 364.0270270270269], [85.0, 306.2424242424243], [86.0, 307.93103448275866], [87.0, 404.43902439024384], [88.0, 372.9230769230769], [89.0, 352.99999999999994], [90.0, 307.71875000000006], [91.0, 400.9661016949152], [92.0, 473.037037037037], [93.0, 406.71875000000006], [94.0, 332.1698113207546], [95.0, 453.49999999999994], [96.0, 519.5555555555557], [97.0, 432.4677419354839], [98.0, 325.65714285714284], [99.0, 375.7894736842105], [100.0, 433.9230769230769], [101.0, 556.4999999999999], [102.0, 485.40625], [103.0, 317.2830188679245], [104.0, 438.84375], [105.0, 518.6567164179106], [106.0, 451.59999999999997], [107.0, 474.120879120879], [108.0, 324.03846153846155], [109.0, 502.7407407407408], [110.0, 489.05882352941177], [111.0, 488.7083333333333], [112.0, 521.3956043956043], [113.0, 474.49999999999994], [114.0, 530.8133333333334], [115.0, 468.61538461538464], [116.0, 586.8545454545454], [117.0, 496.32352941176475], [118.0, 442.5333333333334], [119.0, 475.8591549295774], [120.0, 493.05882352941177], [121.0, 591.3863636363637], [122.0, 515.029411764706], [123.0, 536.7692307692308], [124.0, 516.1627906976744], [125.0, 582.0121951219513], [126.0, 559.5789473684209], [127.0, 584.1875], [128.0, 609.3225806451611], [129.0, 656.2321428571428], [130.0, 595.1743119266054], [131.0, 588.1521739130435], [132.0, 633.9302325581394], [133.0, 584.8695652173914], [134.0, 645.3571428571429], [135.0, 689.8500000000003], [136.0, 764.2567567567565], [137.0, 647.3255813953489], [138.0, 533.5555555555554], [139.0, 659.242105263158], [140.0, 652.395061728395], [141.0, 543.5999999999999], [142.0, 677.4080459770114], [143.0, 688.309090909091], [144.0, 637.6833333333335], [145.0, 547.1212121212122], [146.0, 571.1111111111111], [147.0, 704.8503401360542], [148.0, 754.2019230769231], [149.0, 795.3764705882352], [150.0, 780.3734939759036], [151.0, 771.1538461538463], [152.0, 665.1176470588232], [153.0, 696.0967741935481], [154.0, 769.8823529411768], [155.0, 775.4883720930233], [156.0, 743.9756097560976], [157.0, 721.3142857142857], [158.0, 866.3908045977013], [159.0, 833.4038461538462], [160.0, 875.6800000000002], [161.0, 992.104166666667], [162.0, 1092.0652173913043], [163.0, 1239.0869565217386], [164.0, 1101.8441558441557], [165.0, 834.7358490566037], [166.0, 830.7432762836183], [167.0, 733.646153846154], [168.0, 681.5517241379309], [169.0, 859.0238095238101], [170.0, 831.8058823529418], [171.0, 790.4485981308411], [172.0, 857.7272727272725], [173.0, 816.6305732484078], [174.0, 708.5], [175.0, 818.3883211678835], [176.0, 789.0305343511452], [177.0, 871.9629629629632], [178.0, 874.9879518072286], [179.0, 828.1119999999999], [180.0, 928.3337969401955], [181.0, 890.0037174721198], [182.0, 971.7462686567164], [183.0, 847.6102941176465], [184.0, 870.555160142349], [185.0, 866.8505050505048], [186.0, 840.9350180505419], [187.0, 874.5848056537105], [188.0, 896.5893060295788], [189.0, 916.1517367458872], [190.0, 862.6306620209056], [191.0, 921.4999999999999], [192.0, 822.3716216216217], [193.0, 886.0102249488759], [194.0, 756.1372549019608], [195.0, 803.0980392156862], [196.0, 887.7545126353792], [197.0, 906.4942528735631], [198.0, 926.4577464788733], [199.0, 936.1265822784804], [200.0, 871.5457451933634], [1.0, 11.0]], "isOverall": false, "label": "GET employee by id", "isController": false}, {"data": [[178.63857500000134, 804.5755499999988]], "isOverall": false, "label": "GET employee by id-Aggregated", "isController": false}, {"data": [[3.0, 33.0], [5.0, 9.5], [6.0, 67.8], [7.0, 13.5], [8.0, 13.4375], [9.0, 14.31818181818182], [10.0, 12.18918918918919], [11.0, 14.968749999999998], [12.0, 20.941176470588236], [13.0, 18.96969696969696], [14.0, 16.028571428571425], [15.0, 19.23529411764706], [16.0, 23.228571428571428], [17.0, 26.151515151515152], [18.0, 30.624999999999996], [19.0, 239.0], [20.0, 43.94594594594596], [21.0, 26.62162162162162], [22.0, 32.19354838709678], [23.0, 49.574468085106375], [24.0, 37.48484848484849], [25.0, 44.20588235294119], [26.0, 54.153846153846146], [27.0, 56.48717948717949], [28.0, 58.902439024390254], [29.0, 67.05405405405405], [30.0, 54.45714285714286], [31.0, 65.93939393939394], [32.0, 63.3939393939394], [33.0, 68.00000000000001], [34.0, 73.60714285714285], [35.0, 87.8301886792453], [36.0, 76.03571428571428], [37.0, 79.96153846153847], [38.0, 141.175], [39.0, 138.68750000000003], [40.0, 147.47619047619045], [41.0, 146.26315789473685], [42.0, 143.05714285714285], [43.0, 147.92592592592592], [44.0, 200.6571428571428], [45.0, 153.9230769230769], [46.0, 181.96875], [47.0, 256.9615384615385], [48.0, 164.43749999999997], [49.0, 203.8], [50.0, 211.3], [51.0, 247.2], [52.0, 182.84375000000003], [53.0, 171.0], [54.0, 232.64444444444447], [55.0, 201.6470588235294], [56.0, 229.66666666666666], [57.0, 164.95999999999998], [58.0, 228.19999999999996], [59.0, 240.53571428571428], [60.0, 281.6285714285713], [61.0, 314.7894736842106], [62.0, 207.24242424242425], [63.0, 266.9285714285714], [64.0, 246.33333333333334], [65.0, 196.92857142857144], [66.0, 306.4000000000001], [67.0, 285.42857142857144], [68.0, 308.7142857142857], [69.0, 318.36842105263156], [70.0, 253.7631578947368], [71.0, 239.8421052631579], [72.0, 300.2], [73.0, 275.51219512195127], [74.0, 324.2553191489363], [75.0, 423.875], [76.0, 420.17647058823536], [77.0, 367.93939393939394], [78.0, 356.28571428571433], [79.0, 377.79999999999984], [80.0, 444.44736842105266], [81.0, 352.88235294117646], [82.0, 346.64000000000004], [83.0, 309.79999999999995], [84.0, 379.9473684210526], [85.0, 340.027027027027], [86.0, 319.43478260869574], [87.0, 416.6382978723405], [88.0, 398.2758620689655], [89.0, 360.09999999999997], [90.0, 319.060606060606], [91.0, 421.87500000000006], [92.0, 446.8571428571429], [93.0, 403.58620689655174], [94.0, 373.1282051282052], [95.0, 460.5652173913044], [96.0, 495.75], [97.0, 416.4915254237288], [98.0, 315.1428571428572], [99.0, 371.3243243243243], [100.0, 476.48148148148147], [101.0, 542.4583333333334], [102.0, 477.14285714285717], [103.0, 331.7631578947368], [104.0, 481.90000000000015], [105.0, 504.032786885246], [106.0, 478.4666666666667], [107.0, 495.48863636363654], [108.0, 364.1666666666667], [109.0, 553.8620689655174], [110.0, 494.72727272727275], [111.0, 492.47368421052636], [112.0, 534.9893617021278], [113.0, 505.02777777777777], [114.0, 537.9074074074075], [115.0, 543.04], [116.0, 567.6666666666665], [117.0, 529.3043478260869], [118.0, 451.0277777777777], [119.0, 507.2957746478873], [120.0, 511.40000000000003], [121.0, 608.9512195121952], [122.0, 499.49999999999994], [123.0, 547.3389830508477], [124.0, 532.6046511627908], [125.0, 597.6478873239435], [126.0, 574.5], [127.0, 555.6666666666666], [128.0, 648.2769230769229], [129.0, 617.7540983606557], [130.0, 611.009259259259], [131.0, 624.3898305084748], [132.0, 581.3333333333333], [133.0, 595.7333333333333], [134.0, 648.142857142857], [135.0, 682.7500000000001], [136.0, 784.214285714286], [137.0, 682.2631578947369], [138.0, 552.0000000000001], [139.0, 674.7717391304349], [140.0, 698.1724137931035], [141.0, 581.3157894736843], [142.0, 708.3891891891893], [143.0, 673.5409836065571], [144.0, 697.344827586207], [145.0, 558.0303030303031], [146.0, 594.7142857142858], [147.0, 692.438848920863], [148.0, 758.3225806451611], [149.0, 783.2169811320753], [150.0, 789.8275862068966], [151.0, 783.4609374999998], [152.0, 680.013698630137], [153.0, 726.674698795181], [154.0, 783.8947368421052], [155.0, 769.5283018867925], [156.0, 726.7380952380952], [157.0, 771.1060606060606], [158.0, 871.7440476190477], [159.0, 956.5714285714284], [160.0, 909.8918918918918], [161.0, 1073.1217948717945], [162.0, 1131.7019230769226], [163.0, 1298.551020408163], [164.0, 1206.2484472049694], [165.0, 853.0517241379312], [166.0, 862.032338308458], [167.0, 719.4905660377359], [168.0, 743.4999999999999], [169.0, 875.5952380952383], [170.0, 823.6045197740108], [171.0, 849.794642857143], [172.0, 881.4072072072071], [173.0, 809.7799999999997], [174.0, 720.8461538461538], [175.0, 844.6470588235287], [176.0, 818.5241935483872], [177.0, 891.3185840707966], [178.0, 878.1497005988023], [179.0, 823.2100840336134], [180.0, 928.0257104194853], [181.0, 880.8496240601501], [182.0, 926.0677966101695], [183.0, 849.2462686567163], [184.0, 870.6897810218982], [185.0, 871.3333333333334], [186.0, 872.1031746031747], [187.0, 900.6221441124784], [188.0, 929.1552511415534], [189.0, 950.3333333333331], [190.0, 896.3999999999999], [191.0, 973.9579579579583], [192.0, 852.0672268907565], [193.0, 914.2152917505039], [194.0, 783.6857142857143], [195.0, 789.5576923076924], [196.0, 906.3345864661653], [197.0, 904.784090909091], [198.0, 951.6870748299324], [199.0, 952.4888337468985], [200.0, 891.0592589348238], [1.0, 13.5]], "isOverall": false, "label": "POST employee", "isController": false}, {"data": [[178.64070000000072, 824.5573249999974]], "isOverall": false, "label": "POST employee-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 200.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 2689.4166666666665, "minX": 1.73470758E12, "maxY": 380493.73333333334, "series": [{"data": [[1.7347077E12, 364854.86666666664], [1.73470818E12, 17496.15], [1.734708E12, 326309.5833333333], [1.73470758E12, 217945.26666666666], [1.73470806E12, 304238.0333333333], [1.73470788E12, 345017.3333333333], [1.73470794E12, 337346.01666666666], [1.73470776E12, 360569.76666666666], [1.73470782E12, 350801.88333333336], [1.73470764E12, 380493.73333333334], [1.73470812E12, 291432.8333333333]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.7347077E12, 64544.63333333333], [1.73470818E12, 2689.4166666666665], [1.734708E12, 57695.36666666667], [1.73470758E12, 39352.916666666664], [1.73470806E12, 53502.15], [1.73470788E12, 61034.51666666667], [1.73470794E12, 59356.316666666666], [1.73470776E12, 63719.6], [1.73470782E12, 61992.28333333333], [1.73470764E12, 67743.96666666666], [1.73470812E12, 50885.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.73470818E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 6.092571686610955, "minX": 1.73470758E12, "maxY": 1045.9809477283802, "series": [{"data": [[1.7347077E12, 971.6940618649799], [1.73470818E12, 290.5136363636364], [1.734708E12, 1030.8015170670003], [1.73470758E12, 303.0022787694648], [1.73470806E12, 1020.9558624424584], [1.73470788E12, 1032.5491509208337], [1.73470794E12, 1045.9809477283802], [1.73470776E12, 991.0842850616724], [1.73470782E12, 1012.6688586190687], [1.73470764E12, 884.2868905742165], [1.73470812E12, 858.2392776523724]], "isOverall": false, "label": "GET All employees", "isController": false}, {"data": [[1.7347077E12, 6.092571686610955], [1.73470818E12, 38.84567901234566], [1.734708E12, 7.767223910840941], [1.73470758E12, 8.339376359680903], [1.73470806E12, 6.910451823625459], [1.73470788E12, 7.751016503228906], [1.73470794E12, 8.602890739833407], [1.73470776E12, 6.3877970749543], [1.73470782E12, 14.62934272300467], [1.73470764E12, 7.56140724946693], [1.73470812E12, 6.834593023255821]], "isOverall": false, "label": "GET thread name", "isController": false}, {"data": [[1.7347077E12, 857.283065792449], [1.73470818E12, 185.8102564102565], [1.734708E12, 892.7810053043709], [1.73470758E12, 201.49162011173163], [1.73470806E12, 878.2666122004348], [1.73470788E12, 894.1731777036669], [1.73470794E12, 913.6441176470578], [1.73470776E12, 857.3701075761032], [1.73470782E12, 898.231744540972], [1.73470764E12, 757.4581896551748], [1.73470812E12, 706.5551136363639]], "isOverall": false, "label": "GET employee by id", "isController": false}, {"data": [[1.7347077E12, 869.680333408426], [1.73470818E12, 177.76436781609203], [1.734708E12, 915.6513091641476], [1.73470758E12, 221.064041221936], [1.73470806E12, 899.7097654118924], [1.73470788E12, 929.0862520848228], [1.73470794E12, 931.2887029288705], [1.73470776E12, 882.3095727667368], [1.73470782E12, 902.608603667138], [1.73470764E12, 783.8174790637727], [1.73470812E12, 723.2812858782997]], "isOverall": false, "label": "POST employee", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.73470818E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 6.089410702190121, "minX": 1.73470758E12, "maxY": 1045.7203224230589, "series": [{"data": [[1.7347077E12, 971.4366674192808], [1.73470818E12, 290.31363636363636], [1.734708E12, 1030.579772439953], [1.73470758E12, 302.74895556399525], [1.73470806E12, 1020.7164906580028], [1.73470788E12, 1032.279598182251], [1.73470794E12, 1045.7203224230589], [1.73470776E12, 990.8170397441764], [1.73470782E12, 1012.4379990605928], [1.73470764E12, 884.0429035752979], [1.73470812E12, 858.0197516930001]], "isOverall": false, "label": "GET All employees", "isController": false}, {"data": [[1.7347077E12, 6.089410702190121], [1.73470818E12, 38.84567901234566], [1.734708E12, 7.76443768996962], [1.73470758E12, 8.325598259608439], [1.73470806E12, 6.906096897114871], [1.73470788E12, 7.747189667543658], [1.73470794E12, 8.597746202841737], [1.73470776E12, 6.384597806215732], [1.73470782E12, 14.625586854460073], [1.73470764E12, 7.557782515991478], [1.73470812E12, 6.829651162790692]], "isOverall": false, "label": "GET thread name", "isController": false}, {"data": [[1.7347077E12, 857.1774813475009], [1.73470818E12, 185.70769230769218], [1.734708E12, 892.6827481687282], [1.73470758E12, 201.37616387337044], [1.73470806E12, 878.114651416121], [1.73470788E12, 893.9699857074804], [1.73470794E12, 913.5218137254897], [1.73470776E12, 857.2753490501252], [1.73470782E12, 898.1286687015736], [1.73470764E12, 757.3146551724145], [1.73470812E12, 706.4485795454552]], "isOverall": false, "label": "GET employee by id", "isController": false}, {"data": [[1.7347077E12, 869.5674701509348], [1.73470818E12, 177.66091954022988], [1.734708E12, 915.5314702920447], [1.73470758E12, 220.94368789105647], [1.73470806E12, 899.5780141843961], [1.73470788E12, 928.9552060995936], [1.73470794E12, 931.1629337927645], [1.73470776E12, 882.1681517020785], [1.73470782E12, 902.4783732957219], [1.73470764E12, 783.6478419583439], [1.73470812E12, 723.1630309988531]], "isOverall": false, "label": "POST employee", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.73470818E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.73470758E12, "maxY": 7.960319323784936, "series": [{"data": [[1.7347077E12, 0.07947617972454277], [1.73470818E12, 3.8090909090909086], [1.734708E12, 0.1135271807838181], [1.73470758E12, 0.0], [1.73470806E12, 0.13566206336311926], [1.73470788E12, 0.10404209519253786], [1.73470794E12, 0.1362970200293122], [1.73470776E12, 0.08040201005025123], [1.73470782E12, 0.13245655237200565], [1.73470764E12, 0.0], [1.73470812E12, 0.10101580135440197]], "isOverall": false, "label": "GET All employees", "isController": false}, {"data": [[1.7347077E12, 0.11244073154210879], [1.73470818E12, 3.956790123456791], [1.734708E12, 0.14260385005065848], [1.73470758E12, 0.9441624365482225], [1.73470806E12, 0.12819814915623287], [1.73470788E12, 0.17675197321215008], [1.73470794E12, 0.11293483586477228], [1.73470776E12, 0.09529250457038368], [1.73470782E12, 7.31478873239434], [1.73470764E12, 0.26375266524520324], [1.73470812E12, 0.11220930232558145]], "isOverall": false, "label": "GET thread name", "isController": false}, {"data": [[1.7347077E12, 0.07234908433190154], [1.73470818E12, 0.5538461538461537], [1.734708E12, 0.07931295781763066], [1.73470758E12, 0.0], [1.73470806E12, 0.07325708061002195], [1.73470788E12, 0.08909004287756088], [1.73470794E12, 0.10220588235294112], [1.73470776E12, 0.07598992904554794], [1.73470782E12, 7.960319323784936], [1.73470764E12, 0.0], [1.73470812E12, 0.13153409090909093]], "isOverall": false, "label": "GET employee by id", "isController": false}, {"data": [[1.7347077E12, 4.5055192610948607E-4], [1.73470818E12, 0.0], [1.734708E12, 0.004783484390735164], [1.73470758E12, 0.0], [1.73470806E12, 0.0], [1.73470788E12, 0.0038122468429830788], [1.73470794E12, 0.0], [1.73470776E12, 0.0015992689056431384], [1.73470782E12, 0.007992477668077105], [1.73470764E12, 0.0], [1.73470812E12, 8.61079219288175E-4]], "isOverall": false, "label": "POST employee", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.73470818E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.73470758E12, "maxY": 19423.0, "series": [{"data": [[1.7347077E12, 2827.0], [1.73470818E12, 722.0], [1.734708E12, 2881.0], [1.73470758E12, 931.0], [1.73470806E12, 2850.0], [1.73470788E12, 2837.0], [1.73470794E12, 2832.0], [1.73470776E12, 2839.0], [1.73470782E12, 19423.0], [1.73470764E12, 2050.0], [1.73470812E12, 4226.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.7347077E12, 1.0], [1.73470818E12, 2.0], [1.734708E12, 1.0], [1.73470758E12, 1.0], [1.73470806E12, 1.0], [1.73470788E12, 1.0], [1.73470794E12, 1.0], [1.73470776E12, 1.0], [1.73470782E12, 1.0], [1.73470764E12, 1.0], [1.73470812E12, 1.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.7347077E12, 1031.0], [1.73470818E12, 345.80000000000007], [1.734708E12, 1085.0], [1.73470758E12, 460.0], [1.73470806E12, 1074.0], [1.73470788E12, 1083.0], [1.73470794E12, 1085.0], [1.73470776E12, 1040.0], [1.73470782E12, 1056.0], [1.73470764E12, 974.0], [1.73470812E12, 1036.2000000000007]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.7347077E12, 1625.0], [1.73470818E12, 488.6400000000003], [1.734708E12, 1353.949999999999], [1.73470758E12, 627.0], [1.73470806E12, 1776.0], [1.73470788E12, 1625.6199999999808], [1.73470794E12, 1334.3999999999978], [1.73470776E12, 1591.950000000008], [1.73470782E12, 1633.0800000000017], [1.73470764E12, 1261.9700000000012], [1.73470812E12, 1591.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.7347077E12, 842.0], [1.73470818E12, 178.0], [1.734708E12, 890.0], [1.73470758E12, 110.0], [1.73470806E12, 863.0], [1.73470788E12, 900.0], [1.73470794E12, 911.0], [1.73470776E12, 860.0], [1.73470782E12, 885.0], [1.73470764E12, 747.0], [1.73470812E12, 636.0]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.7347077E12, 1097.0], [1.73470818E12, 376.19999999999993], [1.734708E12, 1142.0], [1.73470758E12, 526.0], [1.73470806E12, 1167.0], [1.73470788E12, 1140.0], [1.73470794E12, 1135.0], [1.73470776E12, 1096.0], [1.73470782E12, 1112.0], [1.73470764E12, 1031.0], [1.73470812E12, 1279.0]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.73470818E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 10.0, "minX": 4.0, "maxY": 1865.0, "series": [{"data": [[4.0, 123.0], [54.0, 51.0], [106.0, 1432.5], [129.0, 1865.0], [132.0, 54.0], [144.0, 982.5], [166.0, 970.5], [163.0, 1454.0], [165.0, 1285.0], [161.0, 1368.0], [171.0, 1279.0], [172.0, 1217.5], [179.0, 1076.5], [177.0, 134.0], [192.0, 954.0], [198.0, 1096.5], [205.0, 780.0], [215.0, 1008.0], [214.0, 855.0], [209.0, 1091.0], [208.0, 967.5], [218.0, 1067.0], [223.0, 831.5], [221.0, 335.5], [216.0, 848.5], [222.0, 732.0], [226.0, 943.5], [230.0, 1123.5], [227.0, 1042.0], [229.0, 911.0], [231.0, 469.0], [225.0, 865.0], [228.0, 740.0], [239.0, 927.0], [237.0, 458.5], [232.0, 775.0], [233.0, 927.0], [238.0, 690.5], [234.0, 719.0], [236.0, 814.5], [242.0, 525.0], [247.0, 845.0], [243.0, 906.0], [240.0, 982.0], [244.0, 849.0], [241.0, 452.0], [246.0, 834.0], [245.0, 543.5], [255.0, 830.0], [249.0, 789.0], [250.0, 875.0], [252.0, 791.0], [251.0, 975.0], [254.0, 975.0], [253.0, 899.0], [248.0, 843.5], [257.0, 841.0], [271.0, 917.0], [264.0, 879.0], [261.0, 654.0], [260.0, 927.0], [256.0, 884.0], [263.0, 920.5], [265.0, 875.0], [262.0, 853.0], [269.0, 898.0], [268.0, 934.0], [259.0, 806.0], [258.0, 885.0], [270.0, 854.0], [267.0, 911.5], [266.0, 901.0], [287.0, 869.0], [278.0, 857.0], [275.0, 854.0], [277.0, 749.0], [276.0, 894.5], [280.0, 902.0], [281.0, 885.0], [283.0, 873.0], [282.0, 888.5], [272.0, 918.0], [279.0, 937.0], [274.0, 878.0], [273.0, 861.0], [284.0, 856.0], [285.0, 883.0], [286.0, 883.0], [296.0, 890.0], [303.0, 632.5], [302.0, 906.5], [292.0, 795.0], [293.0, 764.0], [291.0, 849.0], [298.0, 859.0], [299.0, 880.0], [297.0, 832.0], [295.0, 867.0], [288.0, 862.0], [289.0, 891.0], [290.0, 871.0], [294.0, 872.0], [300.0, 844.5], [301.0, 842.0], [316.0, 305.5], [304.0, 787.0], [308.0, 779.0], [309.0, 880.5], [318.0, 740.5], [317.0, 813.0], [319.0, 801.0], [312.0, 825.0], [311.0, 529.0], [310.0, 856.0], [305.0, 815.0], [314.0, 604.5], [315.0, 775.5], [307.0, 844.0], [306.0, 797.0], [313.0, 784.0], [320.0, 387.5], [324.0, 412.0], [325.0, 237.0], [326.0, 748.0], [329.0, 750.5], [331.0, 819.0], [327.0, 481.5], [333.0, 475.0], [332.0, 695.5], [322.0, 775.0], [321.0, 822.0], [323.0, 871.0], [334.0, 654.5], [335.0, 716.0], [339.0, 215.0], [348.0, 218.0], [340.0, 684.0], [338.0, 678.0], [336.0, 779.5], [347.0, 741.0], [341.0, 741.0], [343.0, 819.0], [337.0, 861.0], [345.0, 750.0], [352.0, 271.0], [414.0, 22.0], [422.0, 74.5], [503.0, 10.0], [505.0, 18.0], [522.0, 61.0], [557.0, 38.0], [549.0, 47.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 557.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 10.0, "minX": 4.0, "maxY": 1865.0, "series": [{"data": [[4.0, 121.0], [54.0, 51.0], [106.0, 1432.5], [129.0, 1865.0], [132.0, 54.0], [144.0, 982.5], [166.0, 970.5], [163.0, 1454.0], [165.0, 1285.0], [161.0, 1368.0], [171.0, 1279.0], [172.0, 1217.5], [179.0, 1076.0], [177.0, 134.0], [192.0, 954.0], [198.0, 1096.5], [205.0, 780.0], [215.0, 1008.0], [214.0, 853.5], [209.0, 1091.0], [208.0, 967.5], [218.0, 1067.0], [223.0, 831.0], [221.0, 335.0], [216.0, 848.5], [222.0, 732.0], [226.0, 943.5], [230.0, 1123.5], [227.0, 1042.0], [229.0, 911.0], [231.0, 469.0], [225.0, 865.0], [228.0, 740.0], [239.0, 926.0], [237.0, 458.5], [232.0, 774.5], [233.0, 927.0], [238.0, 690.5], [234.0, 719.0], [236.0, 814.0], [242.0, 525.0], [247.0, 845.0], [243.0, 905.0], [240.0, 982.0], [244.0, 849.0], [241.0, 452.0], [246.0, 833.5], [245.0, 543.5], [255.0, 830.0], [249.0, 789.0], [250.0, 875.0], [252.0, 791.0], [251.0, 975.0], [254.0, 975.0], [253.0, 899.0], [248.0, 843.0], [257.0, 841.0], [271.0, 917.0], [264.0, 879.0], [261.0, 654.0], [260.0, 927.0], [256.0, 884.0], [263.0, 919.5], [265.0, 874.5], [262.0, 853.0], [269.0, 897.5], [268.0, 934.0], [259.0, 806.0], [258.0, 885.0], [270.0, 854.0], [267.0, 911.5], [266.0, 901.0], [287.0, 869.0], [278.0, 857.0], [275.0, 854.0], [277.0, 749.0], [276.0, 894.0], [280.0, 902.0], [281.0, 885.0], [283.0, 873.0], [282.0, 888.0], [272.0, 918.0], [279.0, 937.0], [274.0, 878.0], [273.0, 861.0], [284.0, 856.0], [285.0, 883.0], [286.0, 883.0], [296.0, 890.0], [303.0, 632.5], [302.0, 906.5], [292.0, 795.0], [293.0, 764.0], [291.0, 849.0], [298.0, 859.0], [299.0, 880.0], [297.0, 832.0], [295.0, 867.0], [288.0, 861.5], [289.0, 891.0], [290.0, 870.0], [294.0, 872.0], [300.0, 844.0], [301.0, 842.0], [316.0, 305.5], [304.0, 786.5], [308.0, 778.5], [309.0, 880.0], [318.0, 740.5], [317.0, 813.0], [319.0, 801.0], [312.0, 825.0], [311.0, 528.5], [310.0, 856.0], [305.0, 815.0], [314.0, 604.5], [315.0, 775.5], [307.0, 843.5], [306.0, 797.0], [313.0, 784.0], [320.0, 386.5], [324.0, 412.0], [325.0, 237.0], [326.0, 748.0], [329.0, 750.0], [331.0, 819.0], [327.0, 481.5], [333.0, 471.0], [332.0, 695.5], [322.0, 774.5], [321.0, 822.0], [323.0, 871.0], [334.0, 654.5], [335.0, 716.0], [339.0, 214.5], [348.0, 218.0], [340.0, 684.0], [338.0, 678.0], [336.0, 779.5], [347.0, 741.0], [341.0, 741.0], [343.0, 818.0], [337.0, 861.0], [345.0, 750.0], [352.0, 271.0], [414.0, 22.0], [422.0, 74.5], [503.0, 10.0], [505.0, 18.0], [522.0, 61.0], [557.0, 38.0], [549.0, 47.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 557.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 11.55, "minX": 1.73470758E12, "maxY": 311.26666666666665, "series": [{"data": [[1.7347077E12, 295.3333333333333], [1.73470818E12, 11.55], [1.734708E12, 263.73333333333335], [1.73470758E12, 181.98333333333332], [1.73470806E12, 244.78333333333333], [1.73470788E12, 279.28333333333336], [1.73470794E12, 271.8333333333333], [1.73470776E12, 291.6666666666667], [1.73470782E12, 283.85], [1.73470764E12, 311.26666666666665], [1.73470812E12, 231.38333333333333]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.73470818E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 12.516666666666667, "minX": 1.73470758E12, "maxY": 310.03333333333336, "series": [{"data": [[1.7347077E12, 295.3333333333333], [1.73470818E12, 12.516666666666667], [1.734708E12, 263.9], [1.73470758E12, 179.88333333333333], [1.73470806E12, 245.08333333333334], [1.73470788E12, 279.28333333333336], [1.73470794E12, 271.98333333333335], [1.73470776E12, 291.6666666666667], [1.73470782E12, 283.85], [1.73470764E12, 310.03333333333336], [1.73470812E12, 233.13333333333333]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.73470818E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 2.7, "minX": 1.73470758E12, "maxY": 78.16666666666667, "series": [{"data": [[1.7347077E12, 73.81666666666666], [1.73470818E12, 2.7], [1.734708E12, 65.8], [1.73470758E12, 45.96666666666667], [1.73470806E12, 61.233333333333334], [1.73470788E12, 69.68333333333334], [1.73470794E12, 68.03333333333333], [1.73470776E12, 72.93333333333334], [1.73470782E12, 71.0], [1.73470764E12, 78.16666666666667], [1.73470812E12, 57.333333333333336]], "isOverall": false, "label": "GET thread name-success", "isController": false}, {"data": [[1.7347077E12, 73.81666666666666], [1.73470818E12, 3.6666666666666665], [1.734708E12, 65.91666666666667], [1.73470758E12, 43.88333333333333], [1.73470806E12, 61.55], [1.73470788E12, 69.68333333333334], [1.73470794E12, 68.23333333333333], [1.73470776E12, 72.96666666666667], [1.73470782E12, 70.96666666666667], [1.73470764E12, 76.91666666666667], [1.73470812E12, 59.06666666666667]], "isOverall": false, "label": "GET All employees-success", "isController": false}, {"data": [[1.7347077E12, 73.98333333333333], [1.73470818E12, 2.9], [1.734708E12, 66.2], [1.73470758E12, 45.28333333333333], [1.73470806E12, 61.1], [1.73470788E12, 69.95], [1.73470794E12, 67.71666666666667], [1.73470776E12, 72.95], [1.73470782E12, 70.9], [1.73470764E12, 77.61666666666666], [1.73470812E12, 58.06666666666667]], "isOverall": false, "label": "POST employee-success", "isController": false}, {"data": [[1.7347077E12, 73.71666666666667], [1.73470818E12, 3.25], [1.734708E12, 65.98333333333333], [1.73470758E12, 44.75], [1.73470806E12, 61.2], [1.73470788E12, 69.96666666666667], [1.73470794E12, 68.0], [1.73470776E12, 72.81666666666666], [1.73470782E12, 70.98333333333333], [1.73470764E12, 77.33333333333333], [1.73470812E12, 58.666666666666664]], "isOverall": false, "label": "GET employee by id-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.73470818E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 12.516666666666667, "minX": 1.73470758E12, "maxY": 310.03333333333336, "series": [{"data": [[1.7347077E12, 295.3333333333333], [1.73470818E12, 12.516666666666667], [1.734708E12, 263.9], [1.73470758E12, 179.88333333333333], [1.73470806E12, 245.08333333333334], [1.73470788E12, 279.28333333333336], [1.73470794E12, 271.98333333333335], [1.73470776E12, 291.6666666666667], [1.73470782E12, 283.85], [1.73470764E12, 310.03333333333336], [1.73470812E12, 233.13333333333333]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.73470818E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

