/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 11343.0, "series": [{"data": [[0.0, 19.0], [0.1, 23.0], [0.2, 25.0], [0.3, 26.0], [0.4, 27.0], [0.5, 28.0], [0.6, 29.0], [0.7, 29.0], [0.8, 30.0], [0.9, 31.0], [1.0, 31.0], [1.1, 32.0], [1.2, 32.0], [1.3, 32.0], [1.4, 33.0], [1.5, 33.0], [1.6, 34.0], [1.7, 34.0], [1.8, 34.0], [1.9, 35.0], [2.0, 35.0], [2.1, 35.0], [2.2, 36.0], [2.3, 36.0], [2.4, 37.0], [2.5, 37.0], [2.6, 38.0], [2.7, 38.0], [2.8, 38.0], [2.9, 39.0], [3.0, 40.0], [3.1, 40.0], [3.2, 41.0], [3.3, 41.0], [3.4, 42.0], [3.5, 42.0], [3.6, 43.0], [3.7, 43.0], [3.8, 44.0], [3.9, 45.0], [4.0, 45.0], [4.1, 46.0], [4.2, 46.0], [4.3, 47.0], [4.4, 47.0], [4.5, 48.0], [4.6, 49.0], [4.7, 49.0], [4.8, 50.0], [4.9, 50.0], [5.0, 51.0], [5.1, 51.0], [5.2, 52.0], [5.3, 52.0], [5.4, 53.0], [5.5, 53.0], [5.6, 54.0], [5.7, 54.0], [5.8, 55.0], [5.9, 56.0], [6.0, 57.0], [6.1, 57.0], [6.2, 58.0], [6.3, 58.0], [6.4, 59.0], [6.5, 59.0], [6.6, 60.0], [6.7, 60.0], [6.8, 60.0], [6.9, 61.0], [7.0, 61.0], [7.1, 62.0], [7.2, 62.0], [7.3, 63.0], [7.4, 63.0], [7.5, 64.0], [7.6, 64.0], [7.7, 65.0], [7.8, 65.0], [7.9, 66.0], [8.0, 66.0], [8.1, 67.0], [8.2, 67.0], [8.3, 68.0], [8.4, 69.0], [8.5, 69.0], [8.6, 70.0], [8.7, 70.0], [8.8, 71.0], [8.9, 71.0], [9.0, 72.0], [9.1, 72.0], [9.2, 73.0], [9.3, 73.0], [9.4, 74.0], [9.5, 75.0], [9.6, 75.0], [9.7, 76.0], [9.8, 76.0], [9.9, 77.0], [10.0, 77.0], [10.1, 78.0], [10.2, 78.0], [10.3, 79.0], [10.4, 80.0], [10.5, 80.0], [10.6, 81.0], [10.7, 81.0], [10.8, 82.0], [10.9, 83.0], [11.0, 83.0], [11.1, 84.0], [11.2, 85.0], [11.3, 85.0], [11.4, 86.0], [11.5, 86.0], [11.6, 87.0], [11.7, 87.0], [11.8, 88.0], [11.9, 89.0], [12.0, 89.0], [12.1, 90.0], [12.2, 90.0], [12.3, 91.0], [12.4, 92.0], [12.5, 92.0], [12.6, 93.0], [12.7, 94.0], [12.8, 95.0], [12.9, 96.0], [13.0, 97.0], [13.1, 98.0], [13.2, 99.0], [13.3, 100.0], [13.4, 101.0], [13.5, 102.0], [13.6, 103.0], [13.7, 104.0], [13.8, 105.0], [13.9, 107.0], [14.0, 108.0], [14.1, 109.0], [14.2, 110.0], [14.3, 111.0], [14.4, 112.0], [14.5, 113.0], [14.6, 114.0], [14.7, 115.0], [14.8, 115.0], [14.9, 116.0], [15.0, 117.0], [15.1, 118.0], [15.2, 119.0], [15.3, 120.0], [15.4, 121.0], [15.5, 123.0], [15.6, 124.0], [15.7, 125.0], [15.8, 127.0], [15.9, 129.0], [16.0, 131.0], [16.1, 133.0], [16.2, 135.0], [16.3, 137.0], [16.4, 140.0], [16.5, 143.0], [16.6, 146.0], [16.7, 148.0], [16.8, 152.0], [16.9, 155.0], [17.0, 157.0], [17.1, 160.0], [17.2, 162.0], [17.3, 164.0], [17.4, 166.0], [17.5, 168.0], [17.6, 170.0], [17.7, 172.0], [17.8, 173.0], [17.9, 174.0], [18.0, 176.0], [18.1, 178.0], [18.2, 179.0], [18.3, 181.0], [18.4, 183.0], [18.5, 185.0], [18.6, 186.0], [18.7, 188.0], [18.8, 189.0], [18.9, 191.0], [19.0, 192.0], [19.1, 193.0], [19.2, 195.0], [19.3, 196.0], [19.4, 197.0], [19.5, 199.0], [19.6, 200.0], [19.7, 202.0], [19.8, 203.0], [19.9, 205.0], [20.0, 206.0], [20.1, 208.0], [20.2, 209.0], [20.3, 210.0], [20.4, 211.0], [20.5, 213.0], [20.6, 214.0], [20.7, 215.0], [20.8, 216.0], [20.9, 216.0], [21.0, 217.0], [21.1, 218.0], [21.2, 219.0], [21.3, 220.0], [21.4, 221.0], [21.5, 222.0], [21.6, 223.0], [21.7, 224.0], [21.8, 225.0], [21.9, 226.0], [22.0, 227.0], [22.1, 228.0], [22.2, 229.0], [22.3, 230.0], [22.4, 231.0], [22.5, 232.0], [22.6, 233.0], [22.7, 234.0], [22.8, 235.0], [22.9, 236.0], [23.0, 238.0], [23.1, 238.0], [23.2, 240.0], [23.3, 241.0], [23.4, 242.0], [23.5, 243.0], [23.6, 244.0], [23.7, 245.0], [23.8, 246.0], [23.9, 248.0], [24.0, 249.0], [24.1, 249.0], [24.2, 250.0], [24.3, 252.0], [24.4, 252.0], [24.5, 254.0], [24.6, 255.0], [24.7, 256.0], [24.8, 257.0], [24.9, 257.0], [25.0, 258.0], [25.1, 259.0], [25.2, 260.0], [25.3, 261.0], [25.4, 262.0], [25.5, 263.0], [25.6, 264.0], [25.7, 265.0], [25.8, 266.0], [25.9, 267.0], [26.0, 268.0], [26.1, 269.0], [26.2, 270.0], [26.3, 271.0], [26.4, 273.0], [26.5, 274.0], [26.6, 275.0], [26.7, 276.0], [26.8, 278.0], [26.9, 279.0], [27.0, 279.0], [27.1, 281.0], [27.2, 282.0], [27.3, 283.0], [27.4, 284.0], [27.5, 285.0], [27.6, 285.0], [27.7, 286.0], [27.8, 287.0], [27.9, 289.0], [28.0, 290.0], [28.1, 290.0], [28.2, 292.0], [28.3, 292.0], [28.4, 293.0], [28.5, 294.0], [28.6, 295.0], [28.7, 296.0], [28.8, 296.0], [28.9, 297.0], [29.0, 298.0], [29.1, 299.0], [29.2, 300.0], [29.3, 301.0], [29.4, 301.0], [29.5, 302.0], [29.6, 303.0], [29.7, 304.0], [29.8, 304.0], [29.9, 305.0], [30.0, 306.0], [30.1, 306.0], [30.2, 307.0], [30.3, 307.0], [30.4, 308.0], [30.5, 309.0], [30.6, 309.0], [30.7, 310.0], [30.8, 311.0], [30.9, 312.0], [31.0, 312.0], [31.1, 313.0], [31.2, 314.0], [31.3, 314.0], [31.4, 315.0], [31.5, 315.0], [31.6, 316.0], [31.7, 317.0], [31.8, 317.0], [31.9, 318.0], [32.0, 318.0], [32.1, 319.0], [32.2, 319.0], [32.3, 320.0], [32.4, 321.0], [32.5, 321.0], [32.6, 322.0], [32.7, 322.0], [32.8, 323.0], [32.9, 323.0], [33.0, 324.0], [33.1, 324.0], [33.2, 324.0], [33.3, 325.0], [33.4, 325.0], [33.5, 326.0], [33.6, 327.0], [33.7, 327.0], [33.8, 327.0], [33.9, 328.0], [34.0, 328.0], [34.1, 329.0], [34.2, 329.0], [34.3, 330.0], [34.4, 330.0], [34.5, 331.0], [34.6, 331.0], [34.7, 332.0], [34.8, 332.0], [34.9, 333.0], [35.0, 333.0], [35.1, 334.0], [35.2, 334.0], [35.3, 335.0], [35.4, 335.0], [35.5, 335.0], [35.6, 336.0], [35.7, 336.0], [35.8, 337.0], [35.9, 337.0], [36.0, 338.0], [36.1, 338.0], [36.2, 338.0], [36.3, 339.0], [36.4, 339.0], [36.5, 339.0], [36.6, 340.0], [36.7, 340.0], [36.8, 340.0], [36.9, 340.0], [37.0, 341.0], [37.1, 341.0], [37.2, 341.0], [37.3, 342.0], [37.4, 342.0], [37.5, 342.0], [37.6, 343.0], [37.7, 343.0], [37.8, 344.0], [37.9, 344.0], [38.0, 344.0], [38.1, 345.0], [38.2, 345.0], [38.3, 346.0], [38.4, 346.0], [38.5, 346.0], [38.6, 347.0], [38.7, 347.0], [38.8, 348.0], [38.9, 348.0], [39.0, 348.0], [39.1, 349.0], [39.2, 349.0], [39.3, 349.0], [39.4, 350.0], [39.5, 350.0], [39.6, 350.0], [39.7, 351.0], [39.8, 351.0], [39.9, 351.0], [40.0, 352.0], [40.1, 352.0], [40.2, 352.0], [40.3, 352.0], [40.4, 353.0], [40.5, 353.0], [40.6, 353.0], [40.7, 354.0], [40.8, 354.0], [40.9, 354.0], [41.0, 355.0], [41.1, 355.0], [41.2, 355.0], [41.3, 356.0], [41.4, 356.0], [41.5, 356.0], [41.6, 356.0], [41.7, 357.0], [41.8, 357.0], [41.9, 357.0], [42.0, 358.0], [42.1, 358.0], [42.2, 358.0], [42.3, 359.0], [42.4, 359.0], [42.5, 359.0], [42.6, 359.0], [42.7, 360.0], [42.8, 360.0], [42.9, 360.0], [43.0, 361.0], [43.1, 361.0], [43.2, 361.0], [43.3, 362.0], [43.4, 362.0], [43.5, 362.0], [43.6, 362.0], [43.7, 363.0], [43.8, 363.0], [43.9, 363.0], [44.0, 363.0], [44.1, 364.0], [44.2, 364.0], [44.3, 364.0], [44.4, 364.0], [44.5, 365.0], [44.6, 365.0], [44.7, 365.0], [44.8, 365.0], [44.9, 366.0], [45.0, 366.0], [45.1, 366.0], [45.2, 367.0], [45.3, 367.0], [45.4, 367.0], [45.5, 367.0], [45.6, 368.0], [45.7, 368.0], [45.8, 368.0], [45.9, 368.0], [46.0, 369.0], [46.1, 369.0], [46.2, 369.0], [46.3, 369.0], [46.4, 369.0], [46.5, 370.0], [46.6, 370.0], [46.7, 370.0], [46.8, 370.0], [46.9, 371.0], [47.0, 371.0], [47.1, 371.0], [47.2, 371.0], [47.3, 371.0], [47.4, 372.0], [47.5, 372.0], [47.6, 372.0], [47.7, 372.0], [47.8, 373.0], [47.9, 373.0], [48.0, 373.0], [48.1, 373.0], [48.2, 373.0], [48.3, 374.0], [48.4, 374.0], [48.5, 374.0], [48.6, 374.0], [48.7, 374.0], [48.8, 374.0], [48.9, 375.0], [49.0, 375.0], [49.1, 375.0], [49.2, 375.0], [49.3, 376.0], [49.4, 376.0], [49.5, 376.0], [49.6, 376.0], [49.7, 376.0], [49.8, 377.0], [49.9, 377.0], [50.0, 377.0], [50.1, 377.0], [50.2, 377.0], [50.3, 378.0], [50.4, 378.0], [50.5, 378.0], [50.6, 378.0], [50.7, 379.0], [50.8, 379.0], [50.9, 379.0], [51.0, 379.0], [51.1, 379.0], [51.2, 379.0], [51.3, 380.0], [51.4, 380.0], [51.5, 380.0], [51.6, 380.0], [51.7, 380.0], [51.8, 381.0], [51.9, 381.0], [52.0, 381.0], [52.1, 381.0], [52.2, 382.0], [52.3, 382.0], [52.4, 382.0], [52.5, 382.0], [52.6, 382.0], [52.7, 382.0], [52.8, 383.0], [52.9, 383.0], [53.0, 383.0], [53.1, 383.0], [53.2, 383.0], [53.3, 384.0], [53.4, 384.0], [53.5, 384.0], [53.6, 384.0], [53.7, 384.0], [53.8, 385.0], [53.9, 385.0], [54.0, 385.0], [54.1, 385.0], [54.2, 385.0], [54.3, 386.0], [54.4, 386.0], [54.5, 386.0], [54.6, 386.0], [54.7, 386.0], [54.8, 387.0], [54.9, 387.0], [55.0, 387.0], [55.1, 387.0], [55.2, 387.0], [55.3, 387.0], [55.4, 388.0], [55.5, 388.0], [55.6, 388.0], [55.7, 388.0], [55.8, 388.0], [55.9, 389.0], [56.0, 389.0], [56.1, 389.0], [56.2, 389.0], [56.3, 389.0], [56.4, 390.0], [56.5, 390.0], [56.6, 390.0], [56.7, 390.0], [56.8, 390.0], [56.9, 390.0], [57.0, 391.0], [57.1, 391.0], [57.2, 391.0], [57.3, 391.0], [57.4, 391.0], [57.5, 392.0], [57.6, 392.0], [57.7, 392.0], [57.8, 392.0], [57.9, 392.0], [58.0, 392.0], [58.1, 393.0], [58.2, 393.0], [58.3, 393.0], [58.4, 393.0], [58.5, 393.0], [58.6, 394.0], [58.7, 394.0], [58.8, 394.0], [58.9, 394.0], [59.0, 394.0], [59.1, 394.0], [59.2, 395.0], [59.3, 395.0], [59.4, 395.0], [59.5, 395.0], [59.6, 395.0], [59.7, 395.0], [59.8, 396.0], [59.9, 396.0], [60.0, 396.0], [60.1, 396.0], [60.2, 396.0], [60.3, 396.0], [60.4, 397.0], [60.5, 397.0], [60.6, 397.0], [60.7, 397.0], [60.8, 397.0], [60.9, 397.0], [61.0, 398.0], [61.1, 398.0], [61.2, 398.0], [61.3, 398.0], [61.4, 398.0], [61.5, 399.0], [61.6, 399.0], [61.7, 399.0], [61.8, 399.0], [61.9, 399.0], [62.0, 399.0], [62.1, 400.0], [62.2, 400.0], [62.3, 400.0], [62.4, 400.0], [62.5, 400.0], [62.6, 401.0], [62.7, 401.0], [62.8, 401.0], [62.9, 401.0], [63.0, 401.0], [63.1, 401.0], [63.2, 402.0], [63.3, 402.0], [63.4, 402.0], [63.5, 402.0], [63.6, 402.0], [63.7, 402.0], [63.8, 403.0], [63.9, 403.0], [64.0, 403.0], [64.1, 403.0], [64.2, 403.0], [64.3, 404.0], [64.4, 404.0], [64.5, 404.0], [64.6, 404.0], [64.7, 404.0], [64.8, 404.0], [64.9, 405.0], [65.0, 405.0], [65.1, 405.0], [65.2, 405.0], [65.3, 405.0], [65.4, 405.0], [65.5, 406.0], [65.6, 406.0], [65.7, 406.0], [65.8, 406.0], [65.9, 406.0], [66.0, 407.0], [66.1, 407.0], [66.2, 407.0], [66.3, 407.0], [66.4, 407.0], [66.5, 407.0], [66.6, 407.0], [66.7, 408.0], [66.8, 408.0], [66.9, 408.0], [67.0, 408.0], [67.1, 408.0], [67.2, 408.0], [67.3, 409.0], [67.4, 409.0], [67.5, 409.0], [67.6, 409.0], [67.7, 409.0], [67.8, 409.0], [67.9, 410.0], [68.0, 410.0], [68.1, 410.0], [68.2, 410.0], [68.3, 410.0], [68.4, 410.0], [68.5, 410.0], [68.6, 411.0], [68.7, 411.0], [68.8, 411.0], [68.9, 411.0], [69.0, 411.0], [69.1, 411.0], [69.2, 412.0], [69.3, 412.0], [69.4, 412.0], [69.5, 412.0], [69.6, 412.0], [69.7, 413.0], [69.8, 413.0], [69.9, 413.0], [70.0, 413.0], [70.1, 413.0], [70.2, 413.0], [70.3, 414.0], [70.4, 414.0], [70.5, 414.0], [70.6, 414.0], [70.7, 414.0], [70.8, 415.0], [70.9, 415.0], [71.0, 415.0], [71.1, 415.0], [71.2, 415.0], [71.3, 416.0], [71.4, 416.0], [71.5, 416.0], [71.6, 416.0], [71.7, 416.0], [71.8, 416.0], [71.9, 417.0], [72.0, 417.0], [72.1, 417.0], [72.2, 417.0], [72.3, 417.0], [72.4, 418.0], [72.5, 418.0], [72.6, 418.0], [72.7, 418.0], [72.8, 418.0], [72.9, 418.0], [73.0, 418.0], [73.1, 419.0], [73.2, 419.0], [73.3, 419.0], [73.4, 419.0], [73.5, 419.0], [73.6, 419.0], [73.7, 420.0], [73.8, 420.0], [73.9, 420.0], [74.0, 420.0], [74.1, 420.0], [74.2, 421.0], [74.3, 421.0], [74.4, 421.0], [74.5, 421.0], [74.6, 421.0], [74.7, 422.0], [74.8, 422.0], [74.9, 422.0], [75.0, 422.0], [75.1, 422.0], [75.2, 423.0], [75.3, 423.0], [75.4, 423.0], [75.5, 423.0], [75.6, 423.0], [75.7, 423.0], [75.8, 424.0], [75.9, 424.0], [76.0, 424.0], [76.1, 424.0], [76.2, 424.0], [76.3, 424.0], [76.4, 425.0], [76.5, 425.0], [76.6, 425.0], [76.7, 425.0], [76.8, 425.0], [76.9, 426.0], [77.0, 426.0], [77.1, 426.0], [77.2, 426.0], [77.3, 426.0], [77.4, 427.0], [77.5, 427.0], [77.6, 427.0], [77.7, 427.0], [77.8, 427.0], [77.9, 428.0], [78.0, 428.0], [78.1, 428.0], [78.2, 428.0], [78.3, 428.0], [78.4, 429.0], [78.5, 429.0], [78.6, 429.0], [78.7, 429.0], [78.8, 429.0], [78.9, 430.0], [79.0, 430.0], [79.1, 430.0], [79.2, 430.0], [79.3, 431.0], [79.4, 431.0], [79.5, 431.0], [79.6, 431.0], [79.7, 431.0], [79.8, 432.0], [79.9, 432.0], [80.0, 432.0], [80.1, 432.0], [80.2, 433.0], [80.3, 433.0], [80.4, 433.0], [80.5, 433.0], [80.6, 433.0], [80.7, 434.0], [80.8, 434.0], [80.9, 434.0], [81.0, 434.0], [81.1, 435.0], [81.2, 435.0], [81.3, 435.0], [81.4, 435.0], [81.5, 436.0], [81.6, 436.0], [81.7, 436.0], [81.8, 436.0], [81.9, 436.0], [82.0, 437.0], [82.1, 437.0], [82.2, 437.0], [82.3, 437.0], [82.4, 438.0], [82.5, 438.0], [82.6, 438.0], [82.7, 438.0], [82.8, 439.0], [82.9, 439.0], [83.0, 439.0], [83.1, 439.0], [83.2, 440.0], [83.3, 440.0], [83.4, 440.0], [83.5, 440.0], [83.6, 441.0], [83.7, 441.0], [83.8, 441.0], [83.9, 441.0], [84.0, 442.0], [84.1, 442.0], [84.2, 442.0], [84.3, 442.0], [84.4, 443.0], [84.5, 443.0], [84.6, 443.0], [84.7, 444.0], [84.8, 444.0], [84.9, 444.0], [85.0, 444.0], [85.1, 445.0], [85.2, 445.0], [85.3, 445.0], [85.4, 446.0], [85.5, 446.0], [85.6, 446.0], [85.7, 446.0], [85.8, 447.0], [85.9, 447.0], [86.0, 447.0], [86.1, 448.0], [86.2, 448.0], [86.3, 448.0], [86.4, 449.0], [86.5, 449.0], [86.6, 449.0], [86.7, 450.0], [86.8, 450.0], [86.9, 450.0], [87.0, 450.0], [87.1, 451.0], [87.2, 451.0], [87.3, 451.0], [87.4, 452.0], [87.5, 452.0], [87.6, 452.0], [87.7, 453.0], [87.8, 453.0], [87.9, 454.0], [88.0, 454.0], [88.1, 454.0], [88.2, 455.0], [88.3, 455.0], [88.4, 455.0], [88.5, 456.0], [88.6, 456.0], [88.7, 457.0], [88.8, 457.0], [88.9, 457.0], [89.0, 458.0], [89.1, 458.0], [89.2, 459.0], [89.3, 459.0], [89.4, 460.0], [89.5, 460.0], [89.6, 461.0], [89.7, 461.0], [89.8, 462.0], [89.9, 462.0], [90.0, 463.0], [90.1, 463.0], [90.2, 464.0], [90.3, 464.0], [90.4, 465.0], [90.5, 465.0], [90.6, 466.0], [90.7, 467.0], [90.8, 467.0], [90.9, 468.0], [91.0, 468.0], [91.1, 469.0], [91.2, 470.0], [91.3, 470.0], [91.4, 471.0], [91.5, 472.0], [91.6, 472.0], [91.7, 473.0], [91.8, 473.0], [91.9, 474.0], [92.0, 475.0], [92.1, 475.0], [92.2, 476.0], [92.3, 476.0], [92.4, 477.0], [92.5, 478.0], [92.6, 479.0], [92.7, 480.0], [92.8, 481.0], [92.9, 481.0], [93.0, 482.0], [93.1, 483.0], [93.2, 484.0], [93.3, 485.0], [93.4, 486.0], [93.5, 486.0], [93.6, 488.0], [93.7, 489.0], [93.8, 490.0], [93.9, 491.0], [94.0, 492.0], [94.1, 493.0], [94.2, 494.0], [94.3, 495.0], [94.4, 496.0], [94.5, 497.0], [94.6, 498.0], [94.7, 499.0], [94.8, 501.0], [94.9, 503.0], [95.0, 504.0], [95.1, 506.0], [95.2, 508.0], [95.3, 509.0], [95.4, 511.0], [95.5, 513.0], [95.6, 515.0], [95.7, 517.0], [95.8, 519.0], [95.9, 521.0], [96.0, 523.0], [96.1, 526.0], [96.2, 528.0], [96.3, 530.0], [96.4, 534.0], [96.5, 537.0], [96.6, 541.0], [96.7, 545.0], [96.8, 548.0], [96.9, 553.0], [97.0, 560.0], [97.1, 566.0], [97.2, 571.0], [97.3, 575.0], [97.4, 581.0], [97.5, 586.0], [97.6, 594.0], [97.7, 603.0], [97.8, 614.0], [97.9, 630.0], [98.0, 639.0], [98.1, 655.0], [98.2, 672.0], [98.3, 686.0], [98.4, 701.0], [98.5, 710.0], [98.6, 717.0], [98.7, 726.0], [98.8, 736.0], [98.9, 746.0], [99.0, 755.0], [99.1, 763.0], [99.2, 774.0], [99.3, 783.0], [99.4, 790.0], [99.5, 801.0], [99.6, 823.0], [99.7, 888.0], [99.8, 1041.0], [99.9, 1230.0]], "isOverall": false, "label": "GET All employees", "isController": false}, {"data": [[0.0, 1.0], [0.1, 2.0], [0.2, 2.0], [0.3, 2.0], [0.4, 2.0], [0.5, 2.0], [0.6, 2.0], [0.7, 2.0], [0.8, 2.0], [0.9, 2.0], [1.0, 2.0], [1.1, 2.0], [1.2, 2.0], [1.3, 2.0], [1.4, 2.0], [1.5, 2.0], [1.6, 2.0], [1.7, 2.0], [1.8, 2.0], [1.9, 2.0], [2.0, 2.0], [2.1, 2.0], [2.2, 2.0], [2.3, 2.0], [2.4, 2.0], [2.5, 2.0], [2.6, 2.0], [2.7, 2.0], [2.8, 2.0], [2.9, 2.0], [3.0, 2.0], [3.1, 2.0], [3.2, 2.0], [3.3, 2.0], [3.4, 2.0], [3.5, 2.0], [3.6, 2.0], [3.7, 2.0], [3.8, 2.0], [3.9, 2.0], [4.0, 2.0], [4.1, 2.0], [4.2, 2.0], [4.3, 2.0], [4.4, 2.0], [4.5, 2.0], [4.6, 2.0], [4.7, 2.0], [4.8, 2.0], [4.9, 2.0], [5.0, 2.0], [5.1, 2.0], [5.2, 2.0], [5.3, 2.0], [5.4, 2.0], [5.5, 2.0], [5.6, 3.0], [5.7, 3.0], [5.8, 3.0], [5.9, 3.0], [6.0, 3.0], [6.1, 3.0], [6.2, 3.0], [6.3, 3.0], [6.4, 3.0], [6.5, 3.0], [6.6, 3.0], [6.7, 3.0], [6.8, 3.0], [6.9, 3.0], [7.0, 3.0], [7.1, 3.0], [7.2, 3.0], [7.3, 3.0], [7.4, 3.0], [7.5, 3.0], [7.6, 3.0], [7.7, 3.0], [7.8, 3.0], [7.9, 3.0], [8.0, 3.0], [8.1, 3.0], [8.2, 3.0], [8.3, 3.0], [8.4, 3.0], [8.5, 3.0], [8.6, 3.0], [8.7, 3.0], [8.8, 3.0], [8.9, 3.0], [9.0, 3.0], [9.1, 3.0], [9.2, 3.0], [9.3, 3.0], [9.4, 3.0], [9.5, 3.0], [9.6, 3.0], [9.7, 3.0], [9.8, 3.0], [9.9, 3.0], [10.0, 3.0], [10.1, 3.0], [10.2, 3.0], [10.3, 3.0], [10.4, 3.0], [10.5, 3.0], [10.6, 3.0], [10.7, 3.0], [10.8, 3.0], [10.9, 3.0], [11.0, 3.0], [11.1, 3.0], [11.2, 3.0], [11.3, 3.0], [11.4, 3.0], [11.5, 3.0], [11.6, 3.0], [11.7, 3.0], [11.8, 3.0], [11.9, 3.0], [12.0, 3.0], [12.1, 3.0], [12.2, 3.0], [12.3, 3.0], [12.4, 3.0], [12.5, 3.0], [12.6, 3.0], [12.7, 3.0], [12.8, 3.0], [12.9, 3.0], [13.0, 3.0], [13.1, 3.0], [13.2, 3.0], [13.3, 3.0], [13.4, 3.0], [13.5, 3.0], [13.6, 3.0], [13.7, 3.0], [13.8, 3.0], [13.9, 3.0], [14.0, 3.0], [14.1, 3.0], [14.2, 3.0], [14.3, 3.0], [14.4, 3.0], [14.5, 3.0], [14.6, 3.0], [14.7, 3.0], [14.8, 3.0], [14.9, 3.0], [15.0, 3.0], [15.1, 3.0], [15.2, 3.0], [15.3, 3.0], [15.4, 3.0], [15.5, 3.0], [15.6, 3.0], [15.7, 3.0], [15.8, 3.0], [15.9, 3.0], [16.0, 3.0], [16.1, 3.0], [16.2, 3.0], [16.3, 3.0], [16.4, 3.0], [16.5, 3.0], [16.6, 3.0], [16.7, 3.0], [16.8, 3.0], [16.9, 3.0], [17.0, 3.0], [17.1, 3.0], [17.2, 3.0], [17.3, 3.0], [17.4, 3.0], [17.5, 3.0], [17.6, 3.0], [17.7, 3.0], [17.8, 3.0], [17.9, 3.0], [18.0, 3.0], [18.1, 3.0], [18.2, 3.0], [18.3, 3.0], [18.4, 3.0], [18.5, 3.0], [18.6, 3.0], [18.7, 3.0], [18.8, 3.0], [18.9, 3.0], [19.0, 3.0], [19.1, 3.0], [19.2, 3.0], [19.3, 3.0], [19.4, 3.0], [19.5, 3.0], [19.6, 3.0], [19.7, 3.0], [19.8, 3.0], [19.9, 3.0], [20.0, 4.0], [20.1, 4.0], [20.2, 4.0], [20.3, 4.0], [20.4, 4.0], [20.5, 4.0], [20.6, 4.0], [20.7, 4.0], [20.8, 4.0], [20.9, 4.0], [21.0, 4.0], [21.1, 4.0], [21.2, 4.0], [21.3, 4.0], [21.4, 4.0], [21.5, 4.0], [21.6, 4.0], [21.7, 4.0], [21.8, 4.0], [21.9, 4.0], [22.0, 4.0], [22.1, 4.0], [22.2, 4.0], [22.3, 4.0], [22.4, 4.0], [22.5, 4.0], [22.6, 4.0], [22.7, 4.0], [22.8, 4.0], [22.9, 4.0], [23.0, 4.0], [23.1, 4.0], [23.2, 4.0], [23.3, 4.0], [23.4, 4.0], [23.5, 4.0], [23.6, 4.0], [23.7, 4.0], [23.8, 4.0], [23.9, 4.0], [24.0, 4.0], [24.1, 4.0], [24.2, 4.0], [24.3, 4.0], [24.4, 4.0], [24.5, 4.0], [24.6, 4.0], [24.7, 4.0], [24.8, 4.0], [24.9, 4.0], [25.0, 4.0], [25.1, 4.0], [25.2, 4.0], [25.3, 4.0], [25.4, 4.0], [25.5, 4.0], [25.6, 4.0], [25.7, 4.0], [25.8, 4.0], [25.9, 4.0], [26.0, 4.0], [26.1, 4.0], [26.2, 4.0], [26.3, 4.0], [26.4, 4.0], [26.5, 4.0], [26.6, 4.0], [26.7, 4.0], [26.8, 4.0], [26.9, 4.0], [27.0, 4.0], [27.1, 4.0], [27.2, 4.0], [27.3, 4.0], [27.4, 4.0], [27.5, 4.0], [27.6, 4.0], [27.7, 4.0], [27.8, 4.0], [27.9, 4.0], [28.0, 4.0], [28.1, 4.0], [28.2, 4.0], [28.3, 4.0], [28.4, 4.0], [28.5, 4.0], [28.6, 4.0], [28.7, 4.0], [28.8, 4.0], [28.9, 4.0], [29.0, 4.0], [29.1, 4.0], [29.2, 4.0], [29.3, 4.0], [29.4, 4.0], [29.5, 4.0], [29.6, 4.0], [29.7, 4.0], [29.8, 4.0], [29.9, 4.0], [30.0, 4.0], [30.1, 4.0], [30.2, 4.0], [30.3, 4.0], [30.4, 4.0], [30.5, 4.0], [30.6, 4.0], [30.7, 4.0], [30.8, 4.0], [30.9, 4.0], [31.0, 4.0], [31.1, 4.0], [31.2, 4.0], [31.3, 4.0], [31.4, 4.0], [31.5, 4.0], [31.6, 4.0], [31.7, 4.0], [31.8, 4.0], [31.9, 4.0], [32.0, 4.0], [32.1, 4.0], [32.2, 4.0], [32.3, 4.0], [32.4, 4.0], [32.5, 4.0], [32.6, 4.0], [32.7, 4.0], [32.8, 4.0], [32.9, 4.0], [33.0, 4.0], [33.1, 4.0], [33.2, 4.0], [33.3, 4.0], [33.4, 4.0], [33.5, 5.0], [33.6, 5.0], [33.7, 5.0], [33.8, 5.0], [33.9, 5.0], [34.0, 5.0], [34.1, 5.0], [34.2, 5.0], [34.3, 5.0], [34.4, 5.0], [34.5, 5.0], [34.6, 5.0], [34.7, 5.0], [34.8, 5.0], [34.9, 5.0], [35.0, 5.0], [35.1, 5.0], [35.2, 5.0], [35.3, 5.0], [35.4, 5.0], [35.5, 5.0], [35.6, 5.0], [35.7, 5.0], [35.8, 5.0], [35.9, 5.0], [36.0, 5.0], [36.1, 5.0], [36.2, 5.0], [36.3, 5.0], [36.4, 5.0], [36.5, 5.0], [36.6, 5.0], [36.7, 5.0], [36.8, 5.0], [36.9, 5.0], [37.0, 5.0], [37.1, 5.0], [37.2, 5.0], [37.3, 5.0], [37.4, 5.0], [37.5, 5.0], [37.6, 5.0], [37.7, 5.0], [37.8, 5.0], [37.9, 5.0], [38.0, 5.0], [38.1, 5.0], [38.2, 5.0], [38.3, 5.0], [38.4, 5.0], [38.5, 5.0], [38.6, 5.0], [38.7, 5.0], [38.8, 5.0], [38.9, 5.0], [39.0, 5.0], [39.1, 5.0], [39.2, 5.0], [39.3, 5.0], [39.4, 5.0], [39.5, 5.0], [39.6, 5.0], [39.7, 5.0], [39.8, 5.0], [39.9, 5.0], [40.0, 5.0], [40.1, 5.0], [40.2, 5.0], [40.3, 5.0], [40.4, 5.0], [40.5, 5.0], [40.6, 5.0], [40.7, 5.0], [40.8, 5.0], [40.9, 5.0], [41.0, 5.0], [41.1, 5.0], [41.2, 5.0], [41.3, 5.0], [41.4, 5.0], [41.5, 5.0], [41.6, 5.0], [41.7, 5.0], [41.8, 5.0], [41.9, 5.0], [42.0, 5.0], [42.1, 5.0], [42.2, 5.0], [42.3, 5.0], [42.4, 5.0], [42.5, 5.0], [42.6, 5.0], [42.7, 5.0], [42.8, 5.0], [42.9, 5.0], [43.0, 5.0], [43.1, 5.0], [43.2, 5.0], [43.3, 5.0], [43.4, 5.0], [43.5, 5.0], [43.6, 5.0], [43.7, 5.0], [43.8, 5.0], [43.9, 5.0], [44.0, 5.0], [44.1, 5.0], [44.2, 5.0], [44.3, 5.0], [44.4, 5.0], [44.5, 5.0], [44.6, 5.0], [44.7, 5.0], [44.8, 5.0], [44.9, 5.0], [45.0, 5.0], [45.1, 5.0], [45.2, 5.0], [45.3, 6.0], [45.4, 6.0], [45.5, 6.0], [45.6, 6.0], [45.7, 6.0], [45.8, 6.0], [45.9, 6.0], [46.0, 6.0], [46.1, 6.0], [46.2, 6.0], [46.3, 6.0], [46.4, 6.0], [46.5, 6.0], [46.6, 6.0], [46.7, 6.0], [46.8, 6.0], [46.9, 6.0], [47.0, 6.0], [47.1, 6.0], [47.2, 6.0], [47.3, 6.0], [47.4, 6.0], [47.5, 6.0], [47.6, 6.0], [47.7, 6.0], [47.8, 6.0], [47.9, 6.0], [48.0, 6.0], [48.1, 6.0], [48.2, 6.0], [48.3, 6.0], [48.4, 6.0], [48.5, 6.0], [48.6, 6.0], [48.7, 6.0], [48.8, 6.0], [48.9, 6.0], [49.0, 6.0], [49.1, 6.0], [49.2, 6.0], [49.3, 6.0], [49.4, 6.0], [49.5, 6.0], [49.6, 6.0], [49.7, 6.0], [49.8, 6.0], [49.9, 6.0], [50.0, 6.0], [50.1, 6.0], [50.2, 6.0], [50.3, 6.0], [50.4, 6.0], [50.5, 6.0], [50.6, 6.0], [50.7, 6.0], [50.8, 6.0], [50.9, 6.0], [51.0, 6.0], [51.1, 6.0], [51.2, 6.0], [51.3, 6.0], [51.4, 6.0], [51.5, 6.0], [51.6, 6.0], [51.7, 6.0], [51.8, 6.0], [51.9, 6.0], [52.0, 6.0], [52.1, 6.0], [52.2, 6.0], [52.3, 6.0], [52.4, 6.0], [52.5, 6.0], [52.6, 6.0], [52.7, 6.0], [52.8, 6.0], [52.9, 6.0], [53.0, 6.0], [53.1, 6.0], [53.2, 6.0], [53.3, 6.0], [53.4, 6.0], [53.5, 6.0], [53.6, 6.0], [53.7, 6.0], [53.8, 6.0], [53.9, 6.0], [54.0, 6.0], [54.1, 6.0], [54.2, 6.0], [54.3, 6.0], [54.4, 6.0], [54.5, 6.0], [54.6, 6.0], [54.7, 6.0], [54.8, 6.0], [54.9, 6.0], [55.0, 6.0], [55.1, 7.0], [55.2, 7.0], [55.3, 7.0], [55.4, 7.0], [55.5, 7.0], [55.6, 7.0], [55.7, 7.0], [55.8, 7.0], [55.9, 7.0], [56.0, 7.0], [56.1, 7.0], [56.2, 7.0], [56.3, 7.0], [56.4, 7.0], [56.5, 7.0], [56.6, 7.0], [56.7, 7.0], [56.8, 7.0], [56.9, 7.0], [57.0, 7.0], [57.1, 7.0], [57.2, 7.0], [57.3, 7.0], [57.4, 7.0], [57.5, 7.0], [57.6, 7.0], [57.7, 7.0], [57.8, 7.0], [57.9, 7.0], [58.0, 7.0], [58.1, 7.0], [58.2, 7.0], [58.3, 7.0], [58.4, 7.0], [58.5, 7.0], [58.6, 7.0], [58.7, 7.0], [58.8, 7.0], [58.9, 7.0], [59.0, 7.0], [59.1, 7.0], [59.2, 7.0], [59.3, 7.0], [59.4, 7.0], [59.5, 7.0], [59.6, 7.0], [59.7, 7.0], [59.8, 7.0], [59.9, 7.0], [60.0, 7.0], [60.1, 7.0], [60.2, 7.0], [60.3, 7.0], [60.4, 7.0], [60.5, 7.0], [60.6, 7.0], [60.7, 7.0], [60.8, 7.0], [60.9, 7.0], [61.0, 7.0], [61.1, 7.0], [61.2, 7.0], [61.3, 7.0], [61.4, 7.0], [61.5, 7.0], [61.6, 7.0], [61.7, 7.0], [61.8, 7.0], [61.9, 7.0], [62.0, 7.0], [62.1, 7.0], [62.2, 7.0], [62.3, 7.0], [62.4, 7.0], [62.5, 7.0], [62.6, 7.0], [62.7, 7.0], [62.8, 7.0], [62.9, 7.0], [63.0, 7.0], [63.1, 7.0], [63.2, 7.0], [63.3, 7.0], [63.4, 8.0], [63.5, 8.0], [63.6, 8.0], [63.7, 8.0], [63.8, 8.0], [63.9, 8.0], [64.0, 8.0], [64.1, 8.0], [64.2, 8.0], [64.3, 8.0], [64.4, 8.0], [64.5, 8.0], [64.6, 8.0], [64.7, 8.0], [64.8, 8.0], [64.9, 8.0], [65.0, 8.0], [65.1, 8.0], [65.2, 8.0], [65.3, 8.0], [65.4, 8.0], [65.5, 8.0], [65.6, 8.0], [65.7, 8.0], [65.8, 8.0], [65.9, 8.0], [66.0, 8.0], [66.1, 8.0], [66.2, 8.0], [66.3, 8.0], [66.4, 8.0], [66.5, 8.0], [66.6, 8.0], [66.7, 8.0], [66.8, 8.0], [66.9, 8.0], [67.0, 8.0], [67.1, 8.0], [67.2, 8.0], [67.3, 8.0], [67.4, 8.0], [67.5, 8.0], [67.6, 8.0], [67.7, 8.0], [67.8, 8.0], [67.9, 8.0], [68.0, 8.0], [68.1, 8.0], [68.2, 8.0], [68.3, 8.0], [68.4, 8.0], [68.5, 8.0], [68.6, 8.0], [68.7, 8.0], [68.8, 8.0], [68.9, 8.0], [69.0, 8.0], [69.1, 8.0], [69.2, 8.0], [69.3, 8.0], [69.4, 8.0], [69.5, 8.0], [69.6, 8.0], [69.7, 8.0], [69.8, 8.0], [69.9, 8.0], [70.0, 8.0], [70.1, 9.0], [70.2, 9.0], [70.3, 9.0], [70.4, 9.0], [70.5, 9.0], [70.6, 9.0], [70.7, 9.0], [70.8, 9.0], [70.9, 9.0], [71.0, 9.0], [71.1, 9.0], [71.2, 9.0], [71.3, 9.0], [71.4, 9.0], [71.5, 9.0], [71.6, 9.0], [71.7, 9.0], [71.8, 9.0], [71.9, 9.0], [72.0, 9.0], [72.1, 9.0], [72.2, 9.0], [72.3, 9.0], [72.4, 9.0], [72.5, 9.0], [72.6, 9.0], [72.7, 9.0], [72.8, 9.0], [72.9, 9.0], [73.0, 9.0], [73.1, 9.0], [73.2, 9.0], [73.3, 9.0], [73.4, 9.0], [73.5, 9.0], [73.6, 9.0], [73.7, 9.0], [73.8, 9.0], [73.9, 9.0], [74.0, 9.0], [74.1, 9.0], [74.2, 9.0], [74.3, 9.0], [74.4, 9.0], [74.5, 9.0], [74.6, 9.0], [74.7, 9.0], [74.8, 9.0], [74.9, 9.0], [75.0, 9.0], [75.1, 9.0], [75.2, 9.0], [75.3, 9.0], [75.4, 9.0], [75.5, 10.0], [75.6, 10.0], [75.7, 10.0], [75.8, 10.0], [75.9, 10.0], [76.0, 10.0], [76.1, 10.0], [76.2, 10.0], [76.3, 10.0], [76.4, 10.0], [76.5, 10.0], [76.6, 10.0], [76.7, 10.0], [76.8, 10.0], [76.9, 10.0], [77.0, 10.0], [77.1, 10.0], [77.2, 10.0], [77.3, 10.0], [77.4, 10.0], [77.5, 10.0], [77.6, 10.0], [77.7, 10.0], [77.8, 10.0], [77.9, 10.0], [78.0, 10.0], [78.1, 10.0], [78.2, 10.0], [78.3, 10.0], [78.4, 10.0], [78.5, 10.0], [78.6, 10.0], [78.7, 10.0], [78.8, 10.0], [78.9, 10.0], [79.0, 10.0], [79.1, 10.0], [79.2, 10.0], [79.3, 10.0], [79.4, 10.0], [79.5, 10.0], [79.6, 10.0], [79.7, 11.0], [79.8, 11.0], [79.9, 11.0], [80.0, 11.0], [80.1, 11.0], [80.2, 11.0], [80.3, 11.0], [80.4, 11.0], [80.5, 11.0], [80.6, 11.0], [80.7, 11.0], [80.8, 11.0], [80.9, 11.0], [81.0, 11.0], [81.1, 11.0], [81.2, 11.0], [81.3, 11.0], [81.4, 11.0], [81.5, 11.0], [81.6, 11.0], [81.7, 11.0], [81.8, 11.0], [81.9, 11.0], [82.0, 11.0], [82.1, 11.0], [82.2, 11.0], [82.3, 11.0], [82.4, 11.0], [82.5, 11.0], [82.6, 11.0], [82.7, 12.0], [82.8, 12.0], [82.9, 12.0], [83.0, 12.0], [83.1, 12.0], [83.2, 12.0], [83.3, 12.0], [83.4, 12.0], [83.5, 12.0], [83.6, 12.0], [83.7, 12.0], [83.8, 12.0], [83.9, 12.0], [84.0, 12.0], [84.1, 12.0], [84.2, 12.0], [84.3, 12.0], [84.4, 12.0], [84.5, 12.0], [84.6, 12.0], [84.7, 12.0], [84.8, 12.0], [84.9, 12.0], [85.0, 12.0], [85.1, 13.0], [85.2, 13.0], [85.3, 13.0], [85.4, 13.0], [85.5, 13.0], [85.6, 13.0], [85.7, 13.0], [85.8, 13.0], [85.9, 13.0], [86.0, 13.0], [86.1, 13.0], [86.2, 13.0], [86.3, 13.0], [86.4, 13.0], [86.5, 13.0], [86.6, 13.0], [86.7, 13.0], [86.8, 13.0], [86.9, 13.0], [87.0, 13.0], [87.1, 14.0], [87.2, 14.0], [87.3, 14.0], [87.4, 14.0], [87.5, 14.0], [87.6, 14.0], [87.7, 14.0], [87.8, 14.0], [87.9, 14.0], [88.0, 14.0], [88.1, 14.0], [88.2, 14.0], [88.3, 14.0], [88.4, 14.0], [88.5, 14.0], [88.6, 15.0], [88.7, 15.0], [88.8, 15.0], [88.9, 15.0], [89.0, 15.0], [89.1, 15.0], [89.2, 15.0], [89.3, 15.0], [89.4, 15.0], [89.5, 15.0], [89.6, 16.0], [89.7, 16.0], [89.8, 16.0], [89.9, 16.0], [90.0, 16.0], [90.1, 16.0], [90.2, 17.0], [90.3, 17.0], [90.4, 17.0], [90.5, 17.0], [90.6, 17.0], [90.7, 17.0], [90.8, 17.0], [90.9, 18.0], [91.0, 18.0], [91.1, 18.0], [91.2, 18.0], [91.3, 18.0], [91.4, 18.0], [91.5, 19.0], [91.6, 19.0], [91.7, 19.0], [91.8, 19.0], [91.9, 19.0], [92.0, 20.0], [92.1, 20.0], [92.2, 20.0], [92.3, 20.0], [92.4, 21.0], [92.5, 21.0], [92.6, 21.0], [92.7, 22.0], [92.8, 22.0], [92.9, 22.0], [93.0, 23.0], [93.1, 23.0], [93.2, 23.0], [93.3, 24.0], [93.4, 25.0], [93.5, 25.0], [93.6, 26.0], [93.7, 26.0], [93.8, 27.0], [93.9, 27.0], [94.0, 28.0], [94.1, 28.0], [94.2, 29.0], [94.3, 30.0], [94.4, 30.0], [94.5, 31.0], [94.6, 31.0], [94.7, 32.0], [94.8, 33.0], [94.9, 34.0], [95.0, 35.0], [95.1, 35.0], [95.2, 36.0], [95.3, 37.0], [95.4, 38.0], [95.5, 39.0], [95.6, 40.0], [95.7, 42.0], [95.8, 43.0], [95.9, 44.0], [96.0, 45.0], [96.1, 45.0], [96.2, 47.0], [96.3, 48.0], [96.4, 50.0], [96.5, 51.0], [96.6, 53.0], [96.7, 55.0], [96.8, 57.0], [96.9, 59.0], [97.0, 60.0], [97.1, 62.0], [97.2, 63.0], [97.3, 66.0], [97.4, 69.0], [97.5, 72.0], [97.6, 76.0], [97.7, 79.0], [97.8, 84.0], [97.9, 87.0], [98.0, 92.0], [98.1, 96.0], [98.2, 99.0], [98.3, 103.0], [98.4, 106.0], [98.5, 108.0], [98.6, 110.0], [98.7, 112.0], [98.8, 117.0], [98.9, 120.0], [99.0, 125.0], [99.1, 134.0], [99.2, 143.0], [99.3, 154.0], [99.4, 165.0], [99.5, 171.0], [99.6, 184.0], [99.7, 236.0], [99.8, 334.0], [99.9, 507.0]], "isOverall": false, "label": "GET thread name", "isController": false}, {"data": [[0.0, 3.0], [0.1, 4.0], [0.2, 5.0], [0.3, 5.0], [0.4, 5.0], [0.5, 5.0], [0.6, 6.0], [0.7, 6.0], [0.8, 6.0], [0.9, 6.0], [1.0, 6.0], [1.1, 6.0], [1.2, 7.0], [1.3, 7.0], [1.4, 7.0], [1.5, 7.0], [1.6, 7.0], [1.7, 7.0], [1.8, 8.0], [1.9, 8.0], [2.0, 8.0], [2.1, 8.0], [2.2, 8.0], [2.3, 8.0], [2.4, 9.0], [2.5, 9.0], [2.6, 9.0], [2.7, 9.0], [2.8, 9.0], [2.9, 10.0], [3.0, 10.0], [3.1, 10.0], [3.2, 10.0], [3.3, 10.0], [3.4, 11.0], [3.5, 11.0], [3.6, 11.0], [3.7, 11.0], [3.8, 12.0], [3.9, 12.0], [4.0, 12.0], [4.1, 12.0], [4.2, 13.0], [4.3, 13.0], [4.4, 13.0], [4.5, 14.0], [4.6, 14.0], [4.7, 14.0], [4.8, 15.0], [4.9, 15.0], [5.0, 16.0], [5.1, 16.0], [5.2, 17.0], [5.3, 17.0], [5.4, 17.0], [5.5, 18.0], [5.6, 18.0], [5.7, 19.0], [5.8, 19.0], [5.9, 20.0], [6.0, 20.0], [6.1, 21.0], [6.2, 21.0], [6.3, 22.0], [6.4, 22.0], [6.5, 23.0], [6.6, 23.0], [6.7, 24.0], [6.8, 24.0], [6.9, 25.0], [7.0, 26.0], [7.1, 26.0], [7.2, 26.0], [7.3, 27.0], [7.4, 27.0], [7.5, 28.0], [7.6, 29.0], [7.7, 29.0], [7.8, 30.0], [7.9, 30.0], [8.0, 31.0], [8.1, 32.0], [8.2, 32.0], [8.3, 33.0], [8.4, 34.0], [8.5, 34.0], [8.6, 35.0], [8.7, 35.0], [8.8, 36.0], [8.9, 37.0], [9.0, 37.0], [9.1, 38.0], [9.2, 38.0], [9.3, 39.0], [9.4, 40.0], [9.5, 40.0], [9.6, 41.0], [9.7, 42.0], [9.8, 42.0], [9.9, 43.0], [10.0, 44.0], [10.1, 44.0], [10.2, 45.0], [10.3, 46.0], [10.4, 47.0], [10.5, 47.0], [10.6, 48.0], [10.7, 48.0], [10.8, 49.0], [10.9, 50.0], [11.0, 50.0], [11.1, 51.0], [11.2, 51.0], [11.3, 52.0], [11.4, 53.0], [11.5, 54.0], [11.6, 55.0], [11.7, 55.0], [11.8, 56.0], [11.9, 56.0], [12.0, 57.0], [12.1, 57.0], [12.2, 58.0], [12.3, 59.0], [12.4, 59.0], [12.5, 60.0], [12.6, 61.0], [12.7, 62.0], [12.8, 62.0], [12.9, 63.0], [13.0, 64.0], [13.1, 64.0], [13.2, 65.0], [13.3, 66.0], [13.4, 67.0], [13.5, 67.0], [13.6, 68.0], [13.7, 69.0], [13.8, 70.0], [13.9, 71.0], [14.0, 72.0], [14.1, 73.0], [14.2, 74.0], [14.3, 75.0], [14.4, 76.0], [14.5, 78.0], [14.6, 79.0], [14.7, 80.0], [14.8, 81.0], [14.9, 82.0], [15.0, 83.0], [15.1, 84.0], [15.2, 85.0], [15.3, 86.0], [15.4, 87.0], [15.5, 88.0], [15.6, 90.0], [15.7, 91.0], [15.8, 91.0], [15.9, 92.0], [16.0, 93.0], [16.1, 95.0], [16.2, 95.0], [16.3, 96.0], [16.4, 97.0], [16.5, 99.0], [16.6, 100.0], [16.7, 101.0], [16.8, 102.0], [16.9, 104.0], [17.0, 105.0], [17.1, 107.0], [17.2, 108.0], [17.3, 110.0], [17.4, 112.0], [17.5, 114.0], [17.6, 115.0], [17.7, 117.0], [17.8, 119.0], [17.9, 121.0], [18.0, 123.0], [18.1, 125.0], [18.2, 126.0], [18.3, 127.0], [18.4, 129.0], [18.5, 130.0], [18.6, 131.0], [18.7, 133.0], [18.8, 134.0], [18.9, 135.0], [19.0, 137.0], [19.1, 138.0], [19.2, 139.0], [19.3, 140.0], [19.4, 142.0], [19.5, 143.0], [19.6, 144.0], [19.7, 145.0], [19.8, 146.0], [19.9, 148.0], [20.0, 149.0], [20.1, 150.0], [20.2, 151.0], [20.3, 152.0], [20.4, 153.0], [20.5, 154.0], [20.6, 156.0], [20.7, 157.0], [20.8, 158.0], [20.9, 159.0], [21.0, 160.0], [21.1, 161.0], [21.2, 162.0], [21.3, 163.0], [21.4, 163.0], [21.5, 165.0], [21.6, 166.0], [21.7, 167.0], [21.8, 168.0], [21.9, 169.0], [22.0, 170.0], [22.1, 171.0], [22.2, 172.0], [22.3, 172.0], [22.4, 173.0], [22.5, 174.0], [22.6, 175.0], [22.7, 176.0], [22.8, 177.0], [22.9, 178.0], [23.0, 179.0], [23.1, 179.0], [23.2, 180.0], [23.3, 181.0], [23.4, 182.0], [23.5, 183.0], [23.6, 183.0], [23.7, 184.0], [23.8, 185.0], [23.9, 186.0], [24.0, 187.0], [24.1, 187.0], [24.2, 188.0], [24.3, 188.0], [24.4, 189.0], [24.5, 190.0], [24.6, 191.0], [24.7, 192.0], [24.8, 193.0], [24.9, 194.0], [25.0, 194.0], [25.1, 195.0], [25.2, 196.0], [25.3, 197.0], [25.4, 198.0], [25.5, 199.0], [25.6, 200.0], [25.7, 201.0], [25.8, 202.0], [25.9, 203.0], [26.0, 204.0], [26.1, 205.0], [26.2, 205.0], [26.3, 206.0], [26.4, 207.0], [26.5, 208.0], [26.6, 209.0], [26.7, 210.0], [26.8, 210.0], [26.9, 211.0], [27.0, 212.0], [27.1, 212.0], [27.2, 213.0], [27.3, 215.0], [27.4, 215.0], [27.5, 216.0], [27.6, 217.0], [27.7, 218.0], [27.8, 219.0], [27.9, 220.0], [28.0, 221.0], [28.1, 221.0], [28.2, 222.0], [28.3, 223.0], [28.4, 224.0], [28.5, 225.0], [28.6, 226.0], [28.7, 227.0], [28.8, 228.0], [28.9, 229.0], [29.0, 230.0], [29.1, 231.0], [29.2, 232.0], [29.3, 233.0], [29.4, 234.0], [29.5, 235.0], [29.6, 236.0], [29.7, 237.0], [29.8, 238.0], [29.9, 239.0], [30.0, 240.0], [30.1, 240.0], [30.2, 241.0], [30.3, 242.0], [30.4, 243.0], [30.5, 244.0], [30.6, 245.0], [30.7, 245.0], [30.8, 246.0], [30.9, 247.0], [31.0, 248.0], [31.1, 249.0], [31.2, 249.0], [31.3, 250.0], [31.4, 251.0], [31.5, 251.0], [31.6, 252.0], [31.7, 252.0], [31.8, 253.0], [31.9, 254.0], [32.0, 255.0], [32.1, 255.0], [32.2, 256.0], [32.3, 257.0], [32.4, 257.0], [32.5, 258.0], [32.6, 259.0], [32.7, 259.0], [32.8, 260.0], [32.9, 261.0], [33.0, 261.0], [33.1, 262.0], [33.2, 262.0], [33.3, 263.0], [33.4, 264.0], [33.5, 264.0], [33.6, 265.0], [33.7, 265.0], [33.8, 266.0], [33.9, 266.0], [34.0, 267.0], [34.1, 267.0], [34.2, 268.0], [34.3, 268.0], [34.4, 269.0], [34.5, 269.0], [34.6, 269.0], [34.7, 270.0], [34.8, 270.0], [34.9, 271.0], [35.0, 271.0], [35.1, 271.0], [35.2, 272.0], [35.3, 272.0], [35.4, 273.0], [35.5, 273.0], [35.6, 274.0], [35.7, 274.0], [35.8, 275.0], [35.9, 275.0], [36.0, 276.0], [36.1, 276.0], [36.2, 276.0], [36.3, 277.0], [36.4, 277.0], [36.5, 278.0], [36.6, 278.0], [36.7, 279.0], [36.8, 279.0], [36.9, 279.0], [37.0, 280.0], [37.1, 280.0], [37.2, 281.0], [37.3, 281.0], [37.4, 281.0], [37.5, 282.0], [37.6, 282.0], [37.7, 282.0], [37.8, 283.0], [37.9, 283.0], [38.0, 283.0], [38.1, 284.0], [38.2, 284.0], [38.3, 284.0], [38.4, 285.0], [38.5, 285.0], [38.6, 285.0], [38.7, 286.0], [38.8, 286.0], [38.9, 286.0], [39.0, 287.0], [39.1, 287.0], [39.2, 287.0], [39.3, 288.0], [39.4, 288.0], [39.5, 288.0], [39.6, 289.0], [39.7, 289.0], [39.8, 289.0], [39.9, 290.0], [40.0, 290.0], [40.1, 290.0], [40.2, 290.0], [40.3, 291.0], [40.4, 291.0], [40.5, 291.0], [40.6, 292.0], [40.7, 292.0], [40.8, 292.0], [40.9, 293.0], [41.0, 293.0], [41.1, 293.0], [41.2, 293.0], [41.3, 294.0], [41.4, 294.0], [41.5, 294.0], [41.6, 294.0], [41.7, 295.0], [41.8, 295.0], [41.9, 295.0], [42.0, 295.0], [42.1, 296.0], [42.2, 296.0], [42.3, 296.0], [42.4, 297.0], [42.5, 297.0], [42.6, 297.0], [42.7, 297.0], [42.8, 298.0], [42.9, 298.0], [43.0, 298.0], [43.1, 298.0], [43.2, 299.0], [43.3, 299.0], [43.4, 299.0], [43.5, 299.0], [43.6, 300.0], [43.7, 300.0], [43.8, 300.0], [43.9, 300.0], [44.0, 301.0], [44.1, 301.0], [44.2, 301.0], [44.3, 301.0], [44.4, 302.0], [44.5, 302.0], [44.6, 302.0], [44.7, 303.0], [44.8, 303.0], [44.9, 303.0], [45.0, 303.0], [45.1, 303.0], [45.2, 304.0], [45.3, 304.0], [45.4, 304.0], [45.5, 305.0], [45.6, 305.0], [45.7, 305.0], [45.8, 305.0], [45.9, 305.0], [46.0, 305.0], [46.1, 306.0], [46.2, 306.0], [46.3, 306.0], [46.4, 306.0], [46.5, 307.0], [46.6, 307.0], [46.7, 307.0], [46.8, 307.0], [46.9, 307.0], [47.0, 308.0], [47.1, 308.0], [47.2, 308.0], [47.3, 308.0], [47.4, 308.0], [47.5, 309.0], [47.6, 309.0], [47.7, 309.0], [47.8, 309.0], [47.9, 310.0], [48.0, 310.0], [48.1, 310.0], [48.2, 310.0], [48.3, 310.0], [48.4, 311.0], [48.5, 311.0], [48.6, 311.0], [48.7, 311.0], [48.8, 312.0], [48.9, 312.0], [49.0, 312.0], [49.1, 312.0], [49.2, 312.0], [49.3, 313.0], [49.4, 313.0], [49.5, 313.0], [49.6, 313.0], [49.7, 314.0], [49.8, 314.0], [49.9, 314.0], [50.0, 314.0], [50.1, 314.0], [50.2, 315.0], [50.3, 315.0], [50.4, 315.0], [50.5, 315.0], [50.6, 315.0], [50.7, 316.0], [50.8, 316.0], [50.9, 316.0], [51.0, 316.0], [51.1, 317.0], [51.2, 317.0], [51.3, 317.0], [51.4, 317.0], [51.5, 318.0], [51.6, 318.0], [51.7, 318.0], [51.8, 318.0], [51.9, 318.0], [52.0, 319.0], [52.1, 319.0], [52.2, 319.0], [52.3, 319.0], [52.4, 320.0], [52.5, 320.0], [52.6, 320.0], [52.7, 320.0], [52.8, 321.0], [52.9, 321.0], [53.0, 321.0], [53.1, 321.0], [53.2, 321.0], [53.3, 321.0], [53.4, 322.0], [53.5, 322.0], [53.6, 322.0], [53.7, 322.0], [53.8, 323.0], [53.9, 323.0], [54.0, 323.0], [54.1, 323.0], [54.2, 323.0], [54.3, 324.0], [54.4, 324.0], [54.5, 324.0], [54.6, 324.0], [54.7, 325.0], [54.8, 325.0], [54.9, 325.0], [55.0, 325.0], [55.1, 325.0], [55.2, 326.0], [55.3, 326.0], [55.4, 326.0], [55.5, 326.0], [55.6, 327.0], [55.7, 327.0], [55.8, 327.0], [55.9, 327.0], [56.0, 327.0], [56.1, 327.0], [56.2, 328.0], [56.3, 328.0], [56.4, 328.0], [56.5, 328.0], [56.6, 328.0], [56.7, 329.0], [56.8, 329.0], [56.9, 329.0], [57.0, 329.0], [57.1, 329.0], [57.2, 330.0], [57.3, 330.0], [57.4, 330.0], [57.5, 330.0], [57.6, 330.0], [57.7, 330.0], [57.8, 331.0], [57.9, 331.0], [58.0, 331.0], [58.1, 331.0], [58.2, 331.0], [58.3, 331.0], [58.4, 332.0], [58.5, 332.0], [58.6, 332.0], [58.7, 332.0], [58.8, 332.0], [58.9, 333.0], [59.0, 333.0], [59.1, 333.0], [59.2, 333.0], [59.3, 333.0], [59.4, 334.0], [59.5, 334.0], [59.6, 334.0], [59.7, 334.0], [59.8, 334.0], [59.9, 334.0], [60.0, 335.0], [60.1, 335.0], [60.2, 335.0], [60.3, 335.0], [60.4, 335.0], [60.5, 335.0], [60.6, 336.0], [60.7, 336.0], [60.8, 336.0], [60.9, 336.0], [61.0, 336.0], [61.1, 337.0], [61.2, 337.0], [61.3, 337.0], [61.4, 337.0], [61.5, 337.0], [61.6, 337.0], [61.7, 338.0], [61.8, 338.0], [61.9, 338.0], [62.0, 338.0], [62.1, 338.0], [62.2, 339.0], [62.3, 339.0], [62.4, 339.0], [62.5, 339.0], [62.6, 339.0], [62.7, 340.0], [62.8, 340.0], [62.9, 340.0], [63.0, 340.0], [63.1, 340.0], [63.2, 341.0], [63.3, 341.0], [63.4, 341.0], [63.5, 341.0], [63.6, 341.0], [63.7, 342.0], [63.8, 342.0], [63.9, 342.0], [64.0, 342.0], [64.1, 342.0], [64.2, 343.0], [64.3, 343.0], [64.4, 343.0], [64.5, 343.0], [64.6, 343.0], [64.7, 344.0], [64.8, 344.0], [64.9, 344.0], [65.0, 344.0], [65.1, 344.0], [65.2, 344.0], [65.3, 345.0], [65.4, 345.0], [65.5, 345.0], [65.6, 345.0], [65.7, 345.0], [65.8, 345.0], [65.9, 346.0], [66.0, 346.0], [66.1, 346.0], [66.2, 346.0], [66.3, 346.0], [66.4, 347.0], [66.5, 347.0], [66.6, 347.0], [66.7, 347.0], [66.8, 347.0], [66.9, 348.0], [67.0, 348.0], [67.1, 348.0], [67.2, 348.0], [67.3, 348.0], [67.4, 349.0], [67.5, 349.0], [67.6, 349.0], [67.7, 349.0], [67.8, 350.0], [67.9, 350.0], [68.0, 350.0], [68.1, 350.0], [68.2, 350.0], [68.3, 351.0], [68.4, 351.0], [68.5, 351.0], [68.6, 351.0], [68.7, 351.0], [68.8, 351.0], [68.9, 352.0], [69.0, 352.0], [69.1, 352.0], [69.2, 352.0], [69.3, 352.0], [69.4, 353.0], [69.5, 353.0], [69.6, 353.0], [69.7, 353.0], [69.8, 353.0], [69.9, 354.0], [70.0, 354.0], [70.1, 354.0], [70.2, 354.0], [70.3, 354.0], [70.4, 354.0], [70.5, 355.0], [70.6, 355.0], [70.7, 355.0], [70.8, 355.0], [70.9, 355.0], [71.0, 355.0], [71.1, 356.0], [71.2, 356.0], [71.3, 356.0], [71.4, 356.0], [71.5, 356.0], [71.6, 356.0], [71.7, 357.0], [71.8, 357.0], [71.9, 357.0], [72.0, 357.0], [72.1, 358.0], [72.2, 358.0], [72.3, 358.0], [72.4, 358.0], [72.5, 358.0], [72.6, 358.0], [72.7, 359.0], [72.8, 359.0], [72.9, 359.0], [73.0, 359.0], [73.1, 359.0], [73.2, 360.0], [73.3, 360.0], [73.4, 360.0], [73.5, 360.0], [73.6, 360.0], [73.7, 360.0], [73.8, 361.0], [73.9, 361.0], [74.0, 361.0], [74.1, 361.0], [74.2, 361.0], [74.3, 361.0], [74.4, 361.0], [74.5, 362.0], [74.6, 362.0], [74.7, 362.0], [74.8, 362.0], [74.9, 362.0], [75.0, 362.0], [75.1, 363.0], [75.2, 363.0], [75.3, 363.0], [75.4, 363.0], [75.5, 363.0], [75.6, 364.0], [75.7, 364.0], [75.8, 364.0], [75.9, 364.0], [76.0, 364.0], [76.1, 365.0], [76.2, 365.0], [76.3, 365.0], [76.4, 365.0], [76.5, 365.0], [76.6, 366.0], [76.7, 366.0], [76.8, 366.0], [76.9, 366.0], [77.0, 366.0], [77.1, 367.0], [77.2, 367.0], [77.3, 367.0], [77.4, 367.0], [77.5, 367.0], [77.6, 368.0], [77.7, 368.0], [77.8, 368.0], [77.9, 368.0], [78.0, 368.0], [78.1, 369.0], [78.2, 369.0], [78.3, 369.0], [78.4, 369.0], [78.5, 369.0], [78.6, 370.0], [78.7, 370.0], [78.8, 370.0], [78.9, 370.0], [79.0, 370.0], [79.1, 371.0], [79.2, 371.0], [79.3, 371.0], [79.4, 371.0], [79.5, 371.0], [79.6, 372.0], [79.7, 372.0], [79.8, 372.0], [79.9, 372.0], [80.0, 372.0], [80.1, 373.0], [80.2, 373.0], [80.3, 373.0], [80.4, 373.0], [80.5, 373.0], [80.6, 374.0], [80.7, 374.0], [80.8, 374.0], [80.9, 374.0], [81.0, 374.0], [81.1, 375.0], [81.2, 375.0], [81.3, 375.0], [81.4, 375.0], [81.5, 376.0], [81.6, 376.0], [81.7, 376.0], [81.8, 376.0], [81.9, 377.0], [82.0, 377.0], [82.1, 377.0], [82.2, 377.0], [82.3, 377.0], [82.4, 378.0], [82.5, 378.0], [82.6, 378.0], [82.7, 378.0], [82.8, 379.0], [82.9, 379.0], [83.0, 379.0], [83.1, 379.0], [83.2, 380.0], [83.3, 380.0], [83.4, 380.0], [83.5, 380.0], [83.6, 381.0], [83.7, 381.0], [83.8, 381.0], [83.9, 381.0], [84.0, 382.0], [84.1, 382.0], [84.2, 382.0], [84.3, 382.0], [84.4, 383.0], [84.5, 383.0], [84.6, 383.0], [84.7, 383.0], [84.8, 384.0], [84.9, 384.0], [85.0, 384.0], [85.1, 385.0], [85.2, 385.0], [85.3, 385.0], [85.4, 385.0], [85.5, 385.0], [85.6, 386.0], [85.7, 386.0], [85.8, 386.0], [85.9, 386.0], [86.0, 387.0], [86.1, 387.0], [86.2, 387.0], [86.3, 388.0], [86.4, 388.0], [86.5, 388.0], [86.6, 389.0], [86.7, 389.0], [86.8, 389.0], [86.9, 389.0], [87.0, 390.0], [87.1, 390.0], [87.2, 390.0], [87.3, 391.0], [87.4, 391.0], [87.5, 391.0], [87.6, 392.0], [87.7, 392.0], [87.8, 392.0], [87.9, 393.0], [88.0, 393.0], [88.1, 393.0], [88.2, 393.0], [88.3, 394.0], [88.4, 394.0], [88.5, 394.0], [88.6, 395.0], [88.7, 395.0], [88.8, 395.0], [88.9, 396.0], [89.0, 396.0], [89.1, 396.0], [89.2, 397.0], [89.3, 397.0], [89.4, 397.0], [89.5, 398.0], [89.6, 398.0], [89.7, 399.0], [89.8, 399.0], [89.9, 399.0], [90.0, 400.0], [90.1, 400.0], [90.2, 401.0], [90.3, 401.0], [90.4, 401.0], [90.5, 402.0], [90.6, 402.0], [90.7, 403.0], [90.8, 403.0], [90.9, 404.0], [91.0, 404.0], [91.1, 405.0], [91.2, 405.0], [91.3, 406.0], [91.4, 406.0], [91.5, 407.0], [91.6, 407.0], [91.7, 408.0], [91.8, 408.0], [91.9, 409.0], [92.0, 409.0], [92.1, 410.0], [92.2, 410.0], [92.3, 411.0], [92.4, 411.0], [92.5, 412.0], [92.6, 413.0], [92.7, 413.0], [92.8, 414.0], [92.9, 415.0], [93.0, 415.0], [93.1, 416.0], [93.2, 417.0], [93.3, 417.0], [93.4, 418.0], [93.5, 418.0], [93.6, 419.0], [93.7, 420.0], [93.8, 421.0], [93.9, 422.0], [94.0, 423.0], [94.1, 423.0], [94.2, 424.0], [94.3, 425.0], [94.4, 427.0], [94.5, 428.0], [94.6, 429.0], [94.7, 431.0], [94.8, 431.0], [94.9, 432.0], [95.0, 434.0], [95.1, 435.0], [95.2, 436.0], [95.3, 438.0], [95.4, 439.0], [95.5, 440.0], [95.6, 441.0], [95.7, 442.0], [95.8, 444.0], [95.9, 445.0], [96.0, 447.0], [96.1, 449.0], [96.2, 451.0], [96.3, 453.0], [96.4, 454.0], [96.5, 457.0], [96.6, 459.0], [96.7, 461.0], [96.8, 464.0], [96.9, 466.0], [97.0, 469.0], [97.1, 474.0], [97.2, 480.0], [97.3, 487.0], [97.4, 493.0], [97.5, 498.0], [97.6, 502.0], [97.7, 507.0], [97.8, 513.0], [97.9, 521.0], [98.0, 535.0], [98.1, 553.0], [98.2, 565.0], [98.3, 585.0], [98.4, 599.0], [98.5, 611.0], [98.6, 623.0], [98.7, 631.0], [98.8, 646.0], [98.9, 657.0], [99.0, 670.0], [99.1, 682.0], [99.2, 693.0], [99.3, 704.0], [99.4, 713.0], [99.5, 723.0], [99.6, 732.0], [99.7, 748.0], [99.8, 772.0], [99.9, 856.0]], "isOverall": false, "label": "GET employee by id", "isController": false}, {"data": [[0.0, 5.0], [0.1, 7.0], [0.2, 7.0], [0.3, 8.0], [0.4, 8.0], [0.5, 8.0], [0.6, 8.0], [0.7, 9.0], [0.8, 9.0], [0.9, 9.0], [1.0, 9.0], [1.1, 10.0], [1.2, 10.0], [1.3, 10.0], [1.4, 10.0], [1.5, 10.0], [1.6, 11.0], [1.7, 11.0], [1.8, 11.0], [1.9, 11.0], [2.0, 12.0], [2.1, 12.0], [2.2, 12.0], [2.3, 12.0], [2.4, 13.0], [2.5, 13.0], [2.6, 13.0], [2.7, 13.0], [2.8, 14.0], [2.9, 14.0], [3.0, 14.0], [3.1, 15.0], [3.2, 15.0], [3.3, 15.0], [3.4, 16.0], [3.5, 16.0], [3.6, 16.0], [3.7, 17.0], [3.8, 18.0], [3.9, 18.0], [4.0, 18.0], [4.1, 19.0], [4.2, 20.0], [4.3, 20.0], [4.4, 21.0], [4.5, 21.0], [4.6, 22.0], [4.7, 22.0], [4.8, 23.0], [4.9, 23.0], [5.0, 24.0], [5.1, 25.0], [5.2, 25.0], [5.3, 26.0], [5.4, 27.0], [5.5, 27.0], [5.6, 27.0], [5.7, 28.0], [5.8, 28.0], [5.9, 29.0], [6.0, 30.0], [6.1, 30.0], [6.2, 31.0], [6.3, 31.0], [6.4, 32.0], [6.5, 33.0], [6.6, 33.0], [6.7, 34.0], [6.8, 34.0], [6.9, 35.0], [7.0, 36.0], [7.1, 37.0], [7.2, 38.0], [7.3, 38.0], [7.4, 39.0], [7.5, 40.0], [7.6, 40.0], [7.7, 41.0], [7.8, 41.0], [7.9, 42.0], [8.0, 43.0], [8.1, 43.0], [8.2, 44.0], [8.3, 45.0], [8.4, 46.0], [8.5, 46.0], [8.6, 47.0], [8.7, 48.0], [8.8, 48.0], [8.9, 49.0], [9.0, 50.0], [9.1, 50.0], [9.2, 51.0], [9.3, 52.0], [9.4, 52.0], [9.5, 53.0], [9.6, 53.0], [9.7, 54.0], [9.8, 55.0], [9.9, 55.0], [10.0, 56.0], [10.1, 57.0], [10.2, 57.0], [10.3, 58.0], [10.4, 58.0], [10.5, 59.0], [10.6, 60.0], [10.7, 60.0], [10.8, 61.0], [10.9, 62.0], [11.0, 62.0], [11.1, 63.0], [11.2, 64.0], [11.3, 64.0], [11.4, 65.0], [11.5, 66.0], [11.6, 67.0], [11.7, 67.0], [11.8, 68.0], [11.9, 69.0], [12.0, 69.0], [12.1, 70.0], [12.2, 71.0], [12.3, 73.0], [12.4, 74.0], [12.5, 75.0], [12.6, 76.0], [12.7, 77.0], [12.8, 78.0], [12.9, 79.0], [13.0, 80.0], [13.1, 81.0], [13.2, 82.0], [13.3, 83.0], [13.4, 84.0], [13.5, 85.0], [13.6, 86.0], [13.7, 87.0], [13.8, 88.0], [13.9, 89.0], [14.0, 89.0], [14.1, 90.0], [14.2, 91.0], [14.3, 92.0], [14.4, 93.0], [14.5, 94.0], [14.6, 95.0], [14.7, 96.0], [14.8, 97.0], [14.9, 98.0], [15.0, 99.0], [15.1, 100.0], [15.2, 101.0], [15.3, 102.0], [15.4, 103.0], [15.5, 104.0], [15.6, 105.0], [15.7, 106.0], [15.8, 108.0], [15.9, 109.0], [16.0, 111.0], [16.1, 113.0], [16.2, 114.0], [16.3, 117.0], [16.4, 119.0], [16.5, 121.0], [16.6, 123.0], [16.7, 125.0], [16.8, 127.0], [16.9, 130.0], [17.0, 132.0], [17.1, 134.0], [17.2, 135.0], [17.3, 137.0], [17.4, 138.0], [17.5, 139.0], [17.6, 140.0], [17.7, 142.0], [17.8, 143.0], [17.9, 145.0], [18.0, 147.0], [18.1, 148.0], [18.2, 150.0], [18.3, 151.0], [18.4, 152.0], [18.5, 153.0], [18.6, 154.0], [18.7, 155.0], [18.8, 157.0], [18.9, 158.0], [19.0, 159.0], [19.1, 160.0], [19.2, 161.0], [19.3, 162.0], [19.4, 163.0], [19.5, 164.0], [19.6, 165.0], [19.7, 167.0], [19.8, 168.0], [19.9, 169.0], [20.0, 170.0], [20.1, 171.0], [20.2, 172.0], [20.3, 173.0], [20.4, 174.0], [20.5, 176.0], [20.6, 177.0], [20.7, 178.0], [20.8, 179.0], [20.9, 180.0], [21.0, 181.0], [21.1, 182.0], [21.2, 183.0], [21.3, 184.0], [21.4, 184.0], [21.5, 185.0], [21.6, 186.0], [21.7, 186.0], [21.8, 187.0], [21.9, 188.0], [22.0, 189.0], [22.1, 190.0], [22.2, 191.0], [22.3, 191.0], [22.4, 192.0], [22.5, 193.0], [22.6, 195.0], [22.7, 195.0], [22.8, 196.0], [22.9, 197.0], [23.0, 198.0], [23.1, 200.0], [23.2, 201.0], [23.3, 202.0], [23.4, 203.0], [23.5, 203.0], [23.6, 204.0], [23.7, 205.0], [23.8, 206.0], [23.9, 207.0], [24.0, 208.0], [24.1, 209.0], [24.2, 210.0], [24.3, 211.0], [24.4, 212.0], [24.5, 213.0], [24.6, 214.0], [24.7, 215.0], [24.8, 215.0], [24.9, 216.0], [25.0, 217.0], [25.1, 218.0], [25.2, 219.0], [25.3, 220.0], [25.4, 221.0], [25.5, 222.0], [25.6, 223.0], [25.7, 224.0], [25.8, 225.0], [25.9, 225.0], [26.0, 227.0], [26.1, 228.0], [26.2, 229.0], [26.3, 230.0], [26.4, 231.0], [26.5, 232.0], [26.6, 233.0], [26.7, 234.0], [26.8, 234.0], [26.9, 235.0], [27.0, 236.0], [27.1, 237.0], [27.2, 238.0], [27.3, 240.0], [27.4, 241.0], [27.5, 242.0], [27.6, 243.0], [27.7, 244.0], [27.8, 245.0], [27.9, 246.0], [28.0, 246.0], [28.1, 247.0], [28.2, 248.0], [28.3, 249.0], [28.4, 250.0], [28.5, 251.0], [28.6, 251.0], [28.7, 252.0], [28.8, 253.0], [28.9, 254.0], [29.0, 255.0], [29.1, 255.0], [29.2, 256.0], [29.3, 257.0], [29.4, 257.0], [29.5, 258.0], [29.6, 259.0], [29.7, 260.0], [29.8, 260.0], [29.9, 261.0], [30.0, 262.0], [30.1, 263.0], [30.2, 263.0], [30.3, 264.0], [30.4, 265.0], [30.5, 265.0], [30.6, 266.0], [30.7, 266.0], [30.8, 267.0], [30.9, 267.0], [31.0, 268.0], [31.1, 268.0], [31.2, 269.0], [31.3, 269.0], [31.4, 270.0], [31.5, 271.0], [31.6, 271.0], [31.7, 271.0], [31.8, 272.0], [31.9, 272.0], [32.0, 273.0], [32.1, 273.0], [32.2, 274.0], [32.3, 274.0], [32.4, 275.0], [32.5, 275.0], [32.6, 276.0], [32.7, 276.0], [32.8, 277.0], [32.9, 277.0], [33.0, 278.0], [33.1, 278.0], [33.2, 279.0], [33.3, 279.0], [33.4, 280.0], [33.5, 280.0], [33.6, 281.0], [33.7, 281.0], [33.8, 282.0], [33.9, 282.0], [34.0, 282.0], [34.1, 283.0], [34.2, 283.0], [34.3, 284.0], [34.4, 284.0], [34.5, 285.0], [34.6, 285.0], [34.7, 285.0], [34.8, 286.0], [34.9, 286.0], [35.0, 287.0], [35.1, 287.0], [35.2, 288.0], [35.3, 288.0], [35.4, 288.0], [35.5, 289.0], [35.6, 289.0], [35.7, 289.0], [35.8, 290.0], [35.9, 290.0], [36.0, 291.0], [36.1, 291.0], [36.2, 291.0], [36.3, 292.0], [36.4, 292.0], [36.5, 292.0], [36.6, 293.0], [36.7, 293.0], [36.8, 293.0], [36.9, 294.0], [37.0, 294.0], [37.1, 294.0], [37.2, 295.0], [37.3, 295.0], [37.4, 295.0], [37.5, 296.0], [37.6, 296.0], [37.7, 296.0], [37.8, 297.0], [37.9, 297.0], [38.0, 297.0], [38.1, 298.0], [38.2, 298.0], [38.3, 298.0], [38.4, 299.0], [38.5, 299.0], [38.6, 299.0], [38.7, 299.0], [38.8, 300.0], [38.9, 300.0], [39.0, 300.0], [39.1, 301.0], [39.2, 301.0], [39.3, 301.0], [39.4, 301.0], [39.5, 302.0], [39.6, 302.0], [39.7, 302.0], [39.8, 303.0], [39.9, 303.0], [40.0, 303.0], [40.1, 303.0], [40.2, 304.0], [40.3, 304.0], [40.4, 304.0], [40.5, 305.0], [40.6, 305.0], [40.7, 305.0], [40.8, 305.0], [40.9, 306.0], [41.0, 306.0], [41.1, 306.0], [41.2, 306.0], [41.3, 307.0], [41.4, 307.0], [41.5, 307.0], [41.6, 307.0], [41.7, 308.0], [41.8, 308.0], [41.9, 308.0], [42.0, 308.0], [42.1, 308.0], [42.2, 309.0], [42.3, 309.0], [42.4, 309.0], [42.5, 309.0], [42.6, 310.0], [42.7, 310.0], [42.8, 310.0], [42.9, 311.0], [43.0, 311.0], [43.1, 311.0], [43.2, 311.0], [43.3, 312.0], [43.4, 312.0], [43.5, 312.0], [43.6, 312.0], [43.7, 313.0], [43.8, 313.0], [43.9, 313.0], [44.0, 313.0], [44.1, 314.0], [44.2, 314.0], [44.3, 314.0], [44.4, 314.0], [44.5, 315.0], [44.6, 315.0], [44.7, 315.0], [44.8, 315.0], [44.9, 316.0], [45.0, 316.0], [45.1, 316.0], [45.2, 316.0], [45.3, 317.0], [45.4, 317.0], [45.5, 317.0], [45.6, 317.0], [45.7, 318.0], [45.8, 318.0], [45.9, 318.0], [46.0, 318.0], [46.1, 318.0], [46.2, 319.0], [46.3, 319.0], [46.4, 319.0], [46.5, 319.0], [46.6, 320.0], [46.7, 320.0], [46.8, 320.0], [46.9, 320.0], [47.0, 321.0], [47.1, 321.0], [47.2, 321.0], [47.3, 321.0], [47.4, 321.0], [47.5, 322.0], [47.6, 322.0], [47.7, 322.0], [47.8, 322.0], [47.9, 322.0], [48.0, 323.0], [48.1, 323.0], [48.2, 323.0], [48.3, 324.0], [48.4, 324.0], [48.5, 324.0], [48.6, 324.0], [48.7, 324.0], [48.8, 325.0], [48.9, 325.0], [49.0, 325.0], [49.1, 325.0], [49.2, 326.0], [49.3, 326.0], [49.4, 326.0], [49.5, 326.0], [49.6, 327.0], [49.7, 327.0], [49.8, 327.0], [49.9, 327.0], [50.0, 327.0], [50.1, 328.0], [50.2, 328.0], [50.3, 328.0], [50.4, 328.0], [50.5, 329.0], [50.6, 329.0], [50.7, 329.0], [50.8, 329.0], [50.9, 330.0], [51.0, 330.0], [51.1, 330.0], [51.2, 330.0], [51.3, 330.0], [51.4, 331.0], [51.5, 331.0], [51.6, 331.0], [51.7, 331.0], [51.8, 332.0], [51.9, 332.0], [52.0, 332.0], [52.1, 332.0], [52.2, 332.0], [52.3, 333.0], [52.4, 333.0], [52.5, 333.0], [52.6, 333.0], [52.7, 334.0], [52.8, 334.0], [52.9, 334.0], [53.0, 334.0], [53.1, 335.0], [53.2, 335.0], [53.3, 335.0], [53.4, 335.0], [53.5, 335.0], [53.6, 335.0], [53.7, 336.0], [53.8, 336.0], [53.9, 336.0], [54.0, 336.0], [54.1, 336.0], [54.2, 337.0], [54.3, 337.0], [54.4, 337.0], [54.5, 337.0], [54.6, 338.0], [54.7, 338.0], [54.8, 338.0], [54.9, 338.0], [55.0, 338.0], [55.1, 339.0], [55.2, 339.0], [55.3, 339.0], [55.4, 339.0], [55.5, 339.0], [55.6, 340.0], [55.7, 340.0], [55.8, 340.0], [55.9, 340.0], [56.0, 340.0], [56.1, 340.0], [56.2, 341.0], [56.3, 341.0], [56.4, 341.0], [56.5, 341.0], [56.6, 341.0], [56.7, 342.0], [56.8, 342.0], [56.9, 342.0], [57.0, 342.0], [57.1, 342.0], [57.2, 343.0], [57.3, 343.0], [57.4, 343.0], [57.5, 343.0], [57.6, 343.0], [57.7, 344.0], [57.8, 344.0], [57.9, 344.0], [58.0, 344.0], [58.1, 344.0], [58.2, 345.0], [58.3, 345.0], [58.4, 345.0], [58.5, 345.0], [58.6, 345.0], [58.7, 346.0], [58.8, 346.0], [58.9, 346.0], [59.0, 346.0], [59.1, 346.0], [59.2, 347.0], [59.3, 347.0], [59.4, 347.0], [59.5, 347.0], [59.6, 347.0], [59.7, 348.0], [59.8, 348.0], [59.9, 348.0], [60.0, 348.0], [60.1, 348.0], [60.2, 349.0], [60.3, 349.0], [60.4, 349.0], [60.5, 349.0], [60.6, 349.0], [60.7, 350.0], [60.8, 350.0], [60.9, 350.0], [61.0, 350.0], [61.1, 350.0], [61.2, 351.0], [61.3, 351.0], [61.4, 351.0], [61.5, 351.0], [61.6, 351.0], [61.7, 352.0], [61.8, 352.0], [61.9, 352.0], [62.0, 352.0], [62.1, 352.0], [62.2, 353.0], [62.3, 353.0], [62.4, 353.0], [62.5, 353.0], [62.6, 353.0], [62.7, 354.0], [62.8, 354.0], [62.9, 354.0], [63.0, 354.0], [63.1, 354.0], [63.2, 355.0], [63.3, 355.0], [63.4, 355.0], [63.5, 355.0], [63.6, 355.0], [63.7, 356.0], [63.8, 356.0], [63.9, 356.0], [64.0, 356.0], [64.1, 356.0], [64.2, 357.0], [64.3, 357.0], [64.4, 357.0], [64.5, 357.0], [64.6, 357.0], [64.7, 357.0], [64.8, 358.0], [64.9, 358.0], [65.0, 358.0], [65.1, 358.0], [65.2, 358.0], [65.3, 359.0], [65.4, 359.0], [65.5, 359.0], [65.6, 359.0], [65.7, 359.0], [65.8, 359.0], [65.9, 359.0], [66.0, 360.0], [66.1, 360.0], [66.2, 360.0], [66.3, 360.0], [66.4, 360.0], [66.5, 361.0], [66.6, 361.0], [66.7, 361.0], [66.8, 361.0], [66.9, 361.0], [67.0, 361.0], [67.1, 362.0], [67.2, 362.0], [67.3, 362.0], [67.4, 362.0], [67.5, 362.0], [67.6, 362.0], [67.7, 363.0], [67.8, 363.0], [67.9, 363.0], [68.0, 363.0], [68.1, 363.0], [68.2, 363.0], [68.3, 364.0], [68.4, 364.0], [68.5, 364.0], [68.6, 364.0], [68.7, 364.0], [68.8, 364.0], [68.9, 365.0], [69.0, 365.0], [69.1, 365.0], [69.2, 365.0], [69.3, 365.0], [69.4, 366.0], [69.5, 366.0], [69.6, 366.0], [69.7, 366.0], [69.8, 366.0], [69.9, 366.0], [70.0, 367.0], [70.1, 367.0], [70.2, 367.0], [70.3, 367.0], [70.4, 367.0], [70.5, 368.0], [70.6, 368.0], [70.7, 368.0], [70.8, 368.0], [70.9, 368.0], [71.0, 368.0], [71.1, 369.0], [71.2, 369.0], [71.3, 369.0], [71.4, 369.0], [71.5, 369.0], [71.6, 370.0], [71.7, 370.0], [71.8, 370.0], [71.9, 370.0], [72.0, 370.0], [72.1, 371.0], [72.2, 371.0], [72.3, 371.0], [72.4, 371.0], [72.5, 371.0], [72.6, 371.0], [72.7, 372.0], [72.8, 372.0], [72.9, 372.0], [73.0, 372.0], [73.1, 372.0], [73.2, 373.0], [73.3, 373.0], [73.4, 373.0], [73.5, 373.0], [73.6, 373.0], [73.7, 373.0], [73.8, 374.0], [73.9, 374.0], [74.0, 374.0], [74.1, 374.0], [74.2, 374.0], [74.3, 375.0], [74.4, 375.0], [74.5, 375.0], [74.6, 375.0], [74.7, 375.0], [74.8, 376.0], [74.9, 376.0], [75.0, 376.0], [75.1, 376.0], [75.2, 376.0], [75.3, 377.0], [75.4, 377.0], [75.5, 377.0], [75.6, 377.0], [75.7, 377.0], [75.8, 377.0], [75.9, 378.0], [76.0, 378.0], [76.1, 378.0], [76.2, 378.0], [76.3, 379.0], [76.4, 379.0], [76.5, 379.0], [76.6, 379.0], [76.7, 379.0], [76.8, 380.0], [76.9, 380.0], [77.0, 380.0], [77.1, 380.0], [77.2, 380.0], [77.3, 381.0], [77.4, 381.0], [77.5, 381.0], [77.6, 381.0], [77.7, 381.0], [77.8, 382.0], [77.9, 382.0], [78.0, 382.0], [78.1, 382.0], [78.2, 382.0], [78.3, 383.0], [78.4, 383.0], [78.5, 383.0], [78.6, 383.0], [78.7, 383.0], [78.8, 384.0], [78.9, 384.0], [79.0, 384.0], [79.1, 384.0], [79.2, 384.0], [79.3, 385.0], [79.4, 385.0], [79.5, 385.0], [79.6, 385.0], [79.7, 385.0], [79.8, 385.0], [79.9, 386.0], [80.0, 386.0], [80.1, 386.0], [80.2, 386.0], [80.3, 387.0], [80.4, 387.0], [80.5, 387.0], [80.6, 387.0], [80.7, 387.0], [80.8, 388.0], [80.9, 388.0], [81.0, 388.0], [81.1, 388.0], [81.2, 388.0], [81.3, 389.0], [81.4, 389.0], [81.5, 389.0], [81.6, 389.0], [81.7, 390.0], [81.8, 390.0], [81.9, 390.0], [82.0, 390.0], [82.1, 390.0], [82.2, 391.0], [82.3, 391.0], [82.4, 391.0], [82.5, 391.0], [82.6, 392.0], [82.7, 392.0], [82.8, 392.0], [82.9, 392.0], [83.0, 393.0], [83.1, 393.0], [83.2, 393.0], [83.3, 393.0], [83.4, 394.0], [83.5, 394.0], [83.6, 394.0], [83.7, 395.0], [83.8, 395.0], [83.9, 395.0], [84.0, 395.0], [84.1, 396.0], [84.2, 396.0], [84.3, 396.0], [84.4, 396.0], [84.5, 397.0], [84.6, 397.0], [84.7, 397.0], [84.8, 397.0], [84.9, 398.0], [85.0, 398.0], [85.1, 398.0], [85.2, 399.0], [85.3, 399.0], [85.4, 399.0], [85.5, 400.0], [85.6, 400.0], [85.7, 400.0], [85.8, 401.0], [85.9, 401.0], [86.0, 401.0], [86.1, 401.0], [86.2, 402.0], [86.3, 402.0], [86.4, 402.0], [86.5, 403.0], [86.6, 403.0], [86.7, 403.0], [86.8, 404.0], [86.9, 404.0], [87.0, 404.0], [87.1, 404.0], [87.2, 405.0], [87.3, 405.0], [87.4, 406.0], [87.5, 406.0], [87.6, 406.0], [87.7, 406.0], [87.8, 407.0], [87.9, 407.0], [88.0, 408.0], [88.1, 408.0], [88.2, 408.0], [88.3, 409.0], [88.4, 409.0], [88.5, 409.0], [88.6, 409.0], [88.7, 410.0], [88.8, 410.0], [88.9, 411.0], [89.0, 411.0], [89.1, 412.0], [89.2, 412.0], [89.3, 413.0], [89.4, 413.0], [89.5, 414.0], [89.6, 414.0], [89.7, 415.0], [89.8, 415.0], [89.9, 416.0], [90.0, 416.0], [90.1, 417.0], [90.2, 417.0], [90.3, 418.0], [90.4, 418.0], [90.5, 419.0], [90.6, 419.0], [90.7, 420.0], [90.8, 420.0], [90.9, 421.0], [91.0, 421.0], [91.1, 422.0], [91.2, 422.0], [91.3, 423.0], [91.4, 423.0], [91.5, 424.0], [91.6, 424.0], [91.7, 425.0], [91.8, 426.0], [91.9, 426.0], [92.0, 427.0], [92.1, 428.0], [92.2, 428.0], [92.3, 429.0], [92.4, 430.0], [92.5, 430.0], [92.6, 431.0], [92.7, 432.0], [92.8, 433.0], [92.9, 433.0], [93.0, 434.0], [93.1, 435.0], [93.2, 436.0], [93.3, 437.0], [93.4, 438.0], [93.5, 439.0], [93.6, 440.0], [93.7, 441.0], [93.8, 442.0], [93.9, 443.0], [94.0, 444.0], [94.1, 445.0], [94.2, 446.0], [94.3, 447.0], [94.4, 449.0], [94.5, 450.0], [94.6, 451.0], [94.7, 453.0], [94.8, 454.0], [94.9, 455.0], [95.0, 456.0], [95.1, 458.0], [95.2, 459.0], [95.3, 460.0], [95.4, 462.0], [95.5, 464.0], [95.6, 465.0], [95.7, 466.0], [95.8, 468.0], [95.9, 470.0], [96.0, 473.0], [96.1, 475.0], [96.2, 477.0], [96.3, 479.0], [96.4, 482.0], [96.5, 486.0], [96.6, 491.0], [96.7, 493.0], [96.8, 497.0], [96.9, 501.0], [97.0, 505.0], [97.1, 507.0], [97.2, 510.0], [97.3, 513.0], [97.4, 517.0], [97.5, 523.0], [97.6, 536.0], [97.7, 542.0], [97.8, 552.0], [97.9, 563.0], [98.0, 571.0], [98.1, 581.0], [98.2, 588.0], [98.3, 602.0], [98.4, 616.0], [98.5, 628.0], [98.6, 643.0], [98.7, 655.0], [98.8, 668.0], [98.9, 679.0], [99.0, 692.0], [99.1, 703.0], [99.2, 712.0], [99.3, 721.0], [99.4, 730.0], [99.5, 738.0], [99.6, 750.0], [99.7, 765.0], [99.8, 800.0], [99.9, 890.0]], "isOverall": false, "label": "POST employee", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 39281.0, "series": [{"data": [[0.0, 5307.0], [600.0, 294.0], [700.0, 441.0], [200.0, 3860.0], [800.0, 93.0], [900.0, 20.0], [1000.0, 20.0], [1100.0, 8.0], [300.0, 13135.0], [1200.0, 30.0], [1300.0, 15.0], [1400.0, 14.0], [1500.0, 3.0], [100.0, 2508.0], [400.0, 13075.0], [1700.0, 1.0], [500.0, 1176.0]], "isOverall": false, "label": "GET All employees", "isController": false}, {"data": [[0.0, 39281.0], [600.0, 4.0], [700.0, 3.0], [11200.0, 5.0], [11300.0, 1.0], [200.0, 57.0], [1000.0, 5.0], [300.0, 20.0], [5100.0, 1.0], [100.0, 577.0], [400.0, 22.0], [7100.0, 1.0], [7200.0, 1.0], [500.0, 22.0]], "isOverall": false, "label": "GET thread name", "isController": false}, {"data": [[0.0, 6624.0], [600.0, 327.0], [700.0, 245.0], [200.0, 7195.0], [800.0, 28.0], [900.0, 10.0], [1000.0, 12.0], [1100.0, 3.0], [300.0, 18561.0], [1300.0, 1.0], [1400.0, 1.0], [100.0, 3597.0], [400.0, 3033.0], [1600.0, 5.0], [500.0, 358.0]], "isOverall": false, "label": "GET employee by id", "isController": false}, {"data": [[0.0, 6032.0], [600.0, 315.0], [700.0, 293.0], [2800.0, 1.0], [200.0, 6249.0], [800.0, 42.0], [900.0, 17.0], [1000.0, 11.0], [1100.0, 6.0], [300.0, 18703.0], [1400.0, 1.0], [100.0, 3201.0], [400.0, 4556.0], [1600.0, 2.0], [500.0, 571.0]], "isOverall": false, "label": "POST employee", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 11300.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 21.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 155639.0, "series": [{"data": [[0.0, 155639.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 4340.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 21.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 86.03873062210575, "minX": 1.73470686E12, "maxY": 188.34950563919062, "series": [{"data": [[1.73470704E12, 144.50756346166511], [1.73470692E12, 188.34950563919062], [1.7347071E12, 89.14644673963333], [1.73470698E12, 173.05514766767757], [1.73470686E12, 86.03873062210575]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7347071E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 4.777777777777778, "minX": 1.0, "maxY": 460.6442307692307, "series": [{"data": [[2.0, 30.0], [3.0, 87.75], [4.0, 44.666666666666664], [5.0, 86.625], [6.0, 116.28571428571429], [7.0, 42.86363636363637], [8.0, 33.38636363636363], [9.0, 24.130434782608692], [10.0, 31.166666666666668], [11.0, 42.47058823529412], [12.0, 46.03030303030304], [13.0, 30.543859649122805], [14.0, 36.56923076923078], [15.0, 38.916666666666664], [16.0, 32.16417910447761], [17.0, 34.01587301587301], [18.0, 36.597222222222236], [19.0, 47.04477611940299], [20.0, 39.2857142857143], [21.0, 37.059701492537314], [22.0, 40.80000000000001], [23.0, 48.16279069767442], [24.0, 43.0], [25.0, 44.12857142857142], [26.0, 66.46363636363635], [27.0, 39.026666666666664], [28.0, 50.119047619047606], [29.0, 46.45121951219513], [30.0, 45.390243902439025], [31.0, 59.310344827586206], [32.0, 53.75], [33.0, 51.29999999999998], [34.0, 52.607142857142875], [35.0, 70.23655913978494], [36.0, 59.81538461538462], [37.0, 76.88732394366198], [38.0, 80.63157894736841], [39.0, 63.5072463768116], [40.0, 67.04545454545455], [41.0, 73.95555555555555], [42.0, 65.02499999999999], [43.0, 79.57831325301207], [44.0, 74.72368421052629], [45.0, 68.59259259259258], [46.0, 71.38157894736842], [47.0, 74.79347826086956], [48.0, 91.0666666666667], [49.0, 101.35714285714286], [50.0, 69.67999999999999], [51.0, 95.35632183908048], [52.0, 82.34523809523806], [53.0, 110.92771084337348], [54.0, 89.27848101265823], [55.0, 85.66250000000001], [56.0, 81.17105263157893], [57.0, 128.327731092437], [58.0, 83.09859154929578], [59.0, 89.93589743589745], [60.0, 92.20253164556962], [61.0, 153.3475177304964], [62.0, 108.90909090909088], [63.0, 130.6315789473684], [64.0, 142.70093457943926], [65.0, 117.47674418604649], [66.0, 123.98913043478262], [67.0, 106.52564102564104], [68.0, 117.04255319148933], [69.0, 116.09210526315788], [70.0, 181.99390243902445], [71.0, 130.4606741573034], [72.0, 124.0759493670886], [73.0, 173.7133333333334], [74.0, 127.19480519480518], [75.0, 131.55952380952385], [76.0, 137.55128205128207], [77.0, 145.23333333333338], [78.0, 131.57647058823528], [79.0, 181.69369369369375], [80.0, 149.33684210526312], [81.0, 160.1844660194174], [82.0, 228.12236286919816], [83.0, 182.57], [84.0, 123.5], [85.0, 142.0933333333333], [86.0, 162.44999999999996], [87.0, 173.88541666666663], [88.0, 222.49673202614372], [89.0, 161.39726027397256], [90.0, 148.49090909090907], [91.0, 180.19047619047623], [92.0, 231.1325301204819], [93.0, 262.8999999999999], [94.0, 196.14754098360663], [95.0, 229.32394366197184], [96.0, 236.0303030303032], [97.0, 264.1904761904761], [98.0, 268.824], [99.0, 323.6043956043955], [100.0, 358.4064516129034], [101.0, 179.91447368421052], [102.0, 192.02777777777783], [103.0, 319.69318181818176], [104.0, 239.97297297297294], [105.0, 201.986301369863], [106.0, 255.85365853658539], [107.0, 248.42500000000004], [108.0, 287.1294964028778], [109.0, 221.5657894736842], [110.0, 283.2246376811594], [111.0, 205.78873239436626], [112.0, 296.14736842105253], [113.0, 289.29447852760734], [114.0, 319.1843137254901], [115.0, 217.65625000000003], [116.0, 300.46399999999994], [117.0, 308.85294117647067], [118.0, 350.5774058577406], [119.0, 295.56862745098044], [120.0, 269.0405405405405], [121.0, 352.8806366047746], [122.0, 292.07865168539325], [123.0, 326.64754098360675], [124.0, 351.4285714285716], [125.0, 304.826923076923], [126.0, 253.9166666666666], [127.0, 335.0707964601771], [128.0, 285.5194805194806], [129.0, 362.1655011655011], [130.0, 297.1868131868132], [131.0, 254.4423076923077], [132.0, 332.7449664429531], [133.0, 366.50793650793656], [134.0, 263.78125], [135.0, 365.1400651465798], [136.0, 364.36103896103884], [137.0, 276.4810126582277], [138.0, 317.86746987951796], [139.0, 334.9653465346535], [140.0, 338.0188679245282], [141.0, 366.52692307692337], [142.0, 367.38910505836606], [143.0, 383.4580645161289], [144.0, 319.55555555555554], [145.0, 381.5972850678734], [146.0, 437.4070512820513], [147.0, 394.1960784313725], [148.0, 348.76851851851853], [149.0, 372.4632352941176], [150.0, 417.1317829457363], [151.0, 374.80590717299594], [152.0, 424.7100000000002], [153.0, 358.87786259541997], [154.0, 460.0820793433649], [155.0, 335.86666666666673], [156.0, 451.7403846153846], [157.0, 414.9738219895286], [158.0, 398.5666666666668], [159.0, 343.31896551724134], [160.0, 425.08998302207135], [161.0, 375.55135135135134], [162.0, 419.3798076923076], [163.0, 402.6398713826366], [164.0, 400.32142857142867], [165.0, 423.9596638655458], [166.0, 417.34447300771194], [167.0, 417.5759562841537], [168.0, 410.78873239436604], [169.0, 403.58091286307064], [170.0, 412.5572755417955], [171.0, 385.4048582995952], [172.0, 424.14166666666665], [173.0, 418.90112130479116], [174.0, 433.21212121212136], [175.0, 421.1023102310231], [176.0, 407.2231707317079], [177.0, 408.48579970104646], [178.0, 402.10545454545485], [179.0, 391.6497461928936], [180.0, 397.6506550218337], [181.0, 380.0152091254754], [182.0, 399.81344759393505], [183.0, 393.4916885389329], [184.0, 408.8426395939084], [185.0, 389.79636835278865], [186.0, 363.90136054421794], [187.0, 413.1400817995909], [188.0, 392.0472527472529], [189.0, 460.6442307692307], [190.0, 430.3289340101528], [191.0, 397.7140238313467], [192.0, 409.78223495702], [193.0, 408.6773526370212], [194.0, 408.06249999999994], [195.0, 398.3906249999999], [196.0, 407.4577114427861], [197.0, 384.6629834254143], [198.0, 412.12844036697254], [1.0, 25.555555555555557]], "isOverall": false, "label": "GET All employees", "isController": false}, {"data": [[142.98975000000132, 335.90419999999597]], "isOverall": false, "label": "GET All employees-Aggregated", "isController": false}, {"data": [[2.0, 10.0], [3.0, 79.4], [4.0, 6.222222222222223], [5.0, 4.777777777777778], [6.0, 5.571428571428572], [7.0, 12.700000000000001], [8.0, 6.822222222222224], [9.0, 5.723404255319148], [10.0, 4.899999999999999], [11.0, 15.470588235294121], [12.0, 36.33333333333332], [13.0, 5.77049180327869], [14.0, 5.463768115942029], [15.0, 6.35714285714286], [16.0, 5.92753623188406], [17.0, 6.1230769230769235], [18.0, 6.558823529411765], [19.0, 10.64179104477612], [20.0, 8.263888888888888], [21.0, 7.800000000000001], [22.0, 7.060240963855424], [23.0, 7.929411764705883], [24.0, 7.4683544303797476], [25.0, 12.366197183098594], [26.0, 6.952830188679246], [27.0, 8.641025641025639], [28.0, 9.440476190476195], [29.0, 6.761904761904761], [30.0, 7.679012345679012], [31.0, 6.977777777777779], [32.0, 6.333333333333334], [33.0, 6.855421686746991], [34.0, 5.294117647058822], [35.0, 9.402173913043484], [36.0, 7.723076923076922], [37.0, 8.602941176470589], [38.0, 8.618421052631579], [39.0, 6.391304347826088], [40.0, 7.405797101449275], [41.0, 6.808988764044942], [42.0, 7.062499999999999], [43.0, 6.440476190476192], [44.0, 6.328947368421051], [45.0, 6.307692307692309], [46.0, 6.949367088607596], [47.0, 9.000000000000002], [48.0, 6.302083333333336], [49.0, 24.84782608695653], [50.0, 6.746835443037974], [51.0, 27.659090909090903], [52.0, 13.653846153846153], [53.0, 8.715909090909093], [54.0, 6.987179487179485], [55.0, 31.963414634146343], [56.0, 7.31081081081081], [57.0, 6.283333333333332], [58.0, 7.4], [59.0, 9.012987012987011], [60.0, 5.825000000000001], [61.0, 6.638297872340428], [62.0, 7.291139240506331], [63.0, 6.4821428571428585], [64.0, 6.870370370370373], [65.0, 8.034482758620696], [66.0, 7.678160919540231], [67.0, 14.67948717948718], [68.0, 12.707070707070702], [69.0, 12.397260273972607], [70.0, 7.460606060606064], [71.0, 6.670454545454548], [72.0, 7.4342105263157885], [73.0, 17.150326797385606], [74.0, 7.103896103896105], [75.0, 9.223529411764703], [76.0, 6.149999999999999], [77.0, 6.292134831460674], [78.0, 7.6321839080459775], [79.0, 7.245454545454548], [80.0, 6.989130434782606], [81.0, 5.836734693877552], [82.0, 7.420408163265305], [83.0, 9.050000000000008], [84.0, 9.924050632911392], [85.0, 6.6842105263157885], [86.0, 6.683544303797469], [87.0, 8.376344086021504], [88.0, 6.712499999999998], [89.0, 6.499999999999999], [90.0, 6.982456140350879], [91.0, 8.444444444444443], [92.0, 5.835164835164835], [93.0, 5.266666666666668], [94.0, 4.93220338983051], [95.0, 7.243243243243244], [96.0, 6.175257731958762], [97.0, 7.6], [98.0, 13.661016949152554], [99.0, 8.901098901098901], [100.0, 37.032467532467514], [101.0, 12.147239263803675], [102.0, 6.971428571428572], [103.0, 33.930232558139544], [104.0, 21.352112676056326], [105.0, 6.974025974025974], [106.0, 10.790123456790122], [107.0, 6.185185185185183], [108.0, 9.08571428571428], [109.0, 6.202702702702701], [110.0, 7.580882352941176], [111.0, 6.945945945945946], [112.0, 11.410526315789474], [113.0, 9.060606060606064], [114.0, 6.9920948616600755], [115.0, 6.285714285714287], [116.0, 8.943999999999997], [117.0, 8.98319327731093], [118.0, 7.252066115702476], [119.0, 6.310000000000001], [120.0, 7.466666666666665], [121.0, 9.040322580645158], [122.0, 6.340659340659342], [123.0, 7.508333333333328], [124.0, 11.541114058355435], [125.0, 7.367346938775509], [126.0, 7.1410256410256405], [127.0, 5.79646017699115], [128.0, 6.780821917808221], [129.0, 7.912037037037045], [130.0, 6.376344086021507], [131.0, 9.139534883720932], [132.0, 12.430379746835444], [133.0, 10.432692307692307], [134.0, 6.292307692307694], [135.0, 32.84466019417474], [136.0, 157.63496143958875], [137.0, 5.6933333333333325], [138.0, 6.211764705882354], [139.0, 131.31067961165047], [140.0, 5.583850931677019], [141.0, 7.71259842519685], [142.0, 5.933852140077817], [143.0, 7.8717948717948705], [144.0, 5.596774193548386], [145.0, 6.435779816513762], [146.0, 7.9935691318327935], [147.0, 14.124999999999996], [148.0, 7.342592592592592], [149.0, 8.21167883211679], [150.0, 6.440776699029124], [151.0, 6.796680497925306], [152.0, 22.28282828282828], [153.0, 32.86301369863014], [154.0, 20.159217877094992], [155.0, 12.462686567164178], [156.0, 11.690000000000001], [157.0, 51.789743589743594], [158.0, 54.987730061349666], [159.0, 59.20388349514563], [160.0, 105.90371621621624], [161.0, 54.225130890052355], [162.0, 15.91379310344828], [163.0, 6.418530351437698], [164.0, 9.180722891566269], [165.0, 10.562289562289566], [166.0, 7.589743589743589], [167.0, 7.389923329682364], [168.0, 6.743455497382192], [169.0, 5.6778242677824275], [170.0, 7.135220125786166], [171.0, 6.629482071713145], [172.0, 5.570247933884299], [173.0, 6.658835546475989], [174.0, 7.211883408071747], [175.0, 7.323432343234326], [176.0, 7.821951219512191], [177.0, 6.837423312883437], [178.0, 12.08333333333333], [179.0, 8.170000000000002], [180.0, 6.788629737609334], [181.0, 7.753787878787879], [182.0, 11.106789716545823], [183.0, 7.343309859154922], [184.0, 12.561097256857852], [185.0, 6.5252918287937725], [186.0, 6.972696245733791], [187.0, 11.334693877551018], [188.0, 7.2956043956043874], [189.0, 7.009615384615386], [190.0, 6.935222672064775], [191.0, 8.183072677092898], [192.0, 7.261363636363643], [193.0, 8.320499479708642], [194.0, 7.990610328638492], [195.0, 6.771300448430495], [196.0, 5.6318407960199], [197.0, 6.8055555555555545], [198.0, 5.718181818181819], [1.0, 10.0]], "isOverall": false, "label": "GET thread name", "isController": false}, {"data": [[142.98962500000033, 13.935799999999972]], "isOverall": false, "label": "GET thread name-Aggregated", "isController": false}, {"data": [[2.0, 82.5], [3.0, 8.0], [4.0, 7.249999999999999], [5.0, 40.888888888888886], [6.0, 31.666666666666664], [7.0, 8.045454545454547], [8.0, 8.893617021276592], [9.0, 7.266666666666668], [10.0, 6.32608695652174], [11.0, 10.571428571428575], [12.0, 28.485714285714277], [13.0, 7.015384615384616], [14.0, 9.328124999999996], [15.0, 9.105263157894736], [16.0, 12.729729729729732], [17.0, 8.892307692307693], [18.0, 12.218749999999998], [19.0, 15.420289855072461], [20.0, 14.455882352941178], [21.0, 13.895522388059701], [22.0, 14.134146341463415], [23.0, 18.9047619047619], [24.0, 16.353658536585364], [25.0, 18.506849315068493], [26.0, 25.435185185185194], [27.0, 15.589041095890412], [28.0, 24.82142857142857], [29.0, 21.232558139534884], [30.0, 23.13953488372093], [31.0, 23.962499999999995], [32.0, 21.325000000000003], [33.0, 29.226190476190485], [34.0, 25.759036144578314], [35.0, 35.67469879518072], [36.0, 32.7], [37.0, 39.89743589743588], [38.0, 41.47945205479453], [39.0, 41.642857142857174], [40.0, 39.86153846153845], [41.0, 39.94936708860758], [42.0, 32.02040816326531], [43.0, 35.27500000000001], [44.0, 48.466666666666676], [45.0, 36.649350649350644], [46.0, 36.479999999999976], [47.0, 44.79347826086955], [48.0, 56.999999999999986], [49.0, 66.4954128440367], [50.0, 38.39705882352941], [51.0, 47.482352941176465], [52.0, 70.65476190476191], [53.0, 58.369047619047635], [54.0, 62.802631578947384], [55.0, 59.855421686746986], [56.0, 48.94871794871794], [57.0, 81.00909090909092], [58.0, 56.20000000000001], [59.0, 59.25641025641026], [60.0, 58.740259740259745], [61.0, 103.73793103448274], [62.0, 67.11494252873563], [63.0, 89.7433628318584], [64.0, 90.61458333333334], [65.0, 72.79761904761907], [66.0, 79.64999999999999], [67.0, 60.926829268292686], [68.0, 91.28750000000001], [69.0, 85.16], [70.0, 126.65868263473055], [71.0, 84.144578313253], [72.0, 90.816091954023], [73.0, 119.34437086092713], [74.0, 78.29069767441861], [75.0, 94.71739130434786], [76.0, 90.79710144927537], [77.0, 105.87234042553192], [78.0, 89.1923076923077], [79.0, 139.0], [80.0, 109.26966292134833], [81.0, 125.07070707070706], [82.0, 165.35627530364383], [83.0, 129.0459770114943], [84.0, 100.11904761904763], [85.0, 104.28735632183907], [86.0, 134.08235294117648], [87.0, 116.67469879518072], [88.0, 162.33116883116884], [89.0, 123.02777777777777], [90.0, 129.68421052631584], [91.0, 137.3333333333333], [92.0, 162.33], [93.0, 195.84137931034485], [94.0, 132.0877192982456], [95.0, 184.04225352112675], [96.0, 178.6346153846154], [97.0, 195.58333333333326], [98.0, 192.50413223140504], [99.0, 244.73913043478254], [100.0, 269.16296296296304], [101.0, 133.2748538011696], [102.0, 127.98214285714289], [103.0, 317.21495327102804], [104.0, 198.37037037037038], [105.0, 163.0816326530613], [106.0, 231.05479452054792], [107.0, 175.5934065934066], [108.0, 245.19685039370083], [109.0, 168.96153846153845], [110.0, 240.20143884892087], [111.0, 166.7575757575757], [112.0, 233.1960784313725], [113.0, 242.77160493827168], [114.0, 250.51666666666657], [115.0, 188.70512820512823], [116.0, 253.20338983050843], [117.0, 242.75196850393695], [118.0, 293.9330357142857], [119.0, 220.00877192982452], [120.0, 216.3384615384616], [121.0, 277.27202072538864], [122.0, 240.73749999999993], [123.0, 272.175], [124.0, 274.9731903485254], [125.0, 267.9347826086956], [126.0, 218.43434343434345], [127.0, 282.06250000000006], [128.0, 229.0375], [129.0, 294.9510489510492], [130.0, 245.90909090909093], [131.0, 186.5820895522388], [132.0, 276.1780821917808], [133.0, 293.92592592592615], [134.0, 225.07936507936512], [135.0, 305.84642857142853], [136.0, 285.84096385542165], [137.0, 240.75384615384615], [138.0, 258.0348837209303], [139.0, 270.98260869565235], [140.0, 294.93750000000017], [141.0, 306.545112781955], [142.0, 301.94307400379495], [143.0, 324.1181102362204], [144.0, 245.31944444444446], [145.0, 309.6050420168068], [146.0, 383.483660130719], [147.0, 328.83098591549293], [148.0, 281.38636363636374], [149.0, 332.0094339622641], [150.0, 334.6040515653776], [151.0, 316.1710526315789], [152.0, 347.4020100502511], [153.0, 301.3255813953488], [154.0, 383.8000000000005], [155.0, 273.99999999999994], [156.0, 379.4852941176472], [157.0, 333.0974729241875], [158.0, 329.5510204081634], [159.0, 288.90977443609006], [160.0, 274.7961672473866], [161.0, 317.0607734806629], [162.0, 362.78292682926843], [163.0, 335.0061919504642], [164.0, 340.36046511627916], [165.0, 359.13425129087796], [166.0, 355.82188295165406], [167.0, 352.40021574973036], [168.0, 355.2017857142856], [169.0, 350.57534246575335], [170.0, 342.65765765765764], [171.0, 346.70411985018734], [172.0, 366.11320754716974], [173.0, 357.58531540847997], [174.0, 365.9576086956521], [175.0, 335.62408759124094], [176.0, 337.3086124401909], [177.0, 345.76390977443657], [178.0, 336.6252285191955], [179.0, 332.27513227513225], [180.0, 347.54761904761887], [181.0, 323.2272727272727], [182.0, 327.08503625576805], [183.0, 342.9185317815576], [184.0, 342.8126721763086], [185.0, 314.8354271356782], [186.0, 241.33613445378145], [187.0, 367.17470525187554], [188.0, 337.41163310961963], [189.0, 367.92631578947356], [190.0, 375.34350393700726], [191.0, 354.31347387717693], [192.0, 368.63929618768327], [193.0, 362.00423280423206], [194.0, 354.1244444444441], [195.0, 355.049065420561], [196.0, 357.9062499999999], [197.0, 332.8461538461541], [198.0, 368.3333333333334], [1.0, 4.777777777777779]], "isOverall": false, "label": "GET employee by id", "isController": false}, {"data": [[142.99640000000036, 277.31617499999953]], "isOverall": false, "label": "GET employee by id-Aggregated", "isController": false}, {"data": [[2.0, 46.5], [3.0, 11.2], [4.0, 10.333333333333334], [5.0, 87.88888888888889], [6.0, 34.5], [7.0, 37.428571428571416], [8.0, 10.608695652173914], [9.0, 11.422222222222224], [10.0, 9.22], [11.0, 13.846153846153845], [12.0, 67.38235294117645], [13.0, 10.796874999999996], [14.0, 13.328358208955224], [15.0, 15.464285714285717], [16.0, 12.671428571428573], [17.0, 13.23529411764706], [18.0, 15.880597014925373], [19.0, 16.925373134328353], [20.0, 18.77941176470588], [21.0, 16.70312499999999], [22.0, 17.738095238095237], [23.0, 23.43181818181818], [24.0, 18.93333333333333], [25.0, 22.506172839506174], [26.0, 30.130000000000003], [27.0, 21.453333333333337], [28.0, 31.048192771084345], [29.0, 25.01176470588235], [30.0, 23.740740740740737], [31.0, 33.28409090909091], [32.0, 26.62195121951219], [33.0, 29.92592592592593], [34.0, 30.107142857142858], [35.0, 44.448979591836725], [36.0, 38.72413793103446], [37.0, 45.50704225352113], [38.0, 54.7236842105263], [39.0, 43.80000000000002], [40.0, 42.71874999999999], [41.0, 42.083333333333336], [42.0, 43.11363636363636], [43.0, 55.096385542168676], [44.0, 51.975308641975296], [45.0, 44.493506493506494], [46.0, 42.959999999999994], [47.0, 42.632911392405056], [48.0, 63.58878504672897], [49.0, 68.1313131313131], [50.0, 50.26666666666669], [51.0, 51.93589743589744], [52.0, 73.18181818181816], [53.0, 68.01063829787235], [54.0, 63.09859154929577], [55.0, 58.0843373493976], [56.0, 58.191780821917824], [57.0, 89.28947368421052], [58.0, 64.23376623376623], [59.0, 59.85897435897437], [60.0, 61.853333333333325], [61.0, 105.06666666666666], [62.0, 71.88235294117646], [63.0, 97.21495327102802], [64.0, 110.07843137254903], [65.0, 83.52380952380955], [66.0, 87.68367346938773], [67.0, 85.64864864864867], [68.0, 87.81818181818184], [69.0, 99.64788732394365], [70.0, 132.20555555555555], [71.0, 85.89333333333335], [72.0, 89.63953488372094], [73.0, 118.50314465408809], [74.0, 96.4642857142857], [75.0, 103.21951219512194], [76.0, 96.08333333333333], [77.0, 111.8421052631579], [78.0, 101.13253012048192], [79.0, 145.27966101694906], [80.0, 118.89024390243904], [81.0, 126.49999999999997], [82.0, 173.46987951807225], [83.0, 132.45555555555558], [84.0, 106.89873417721519], [85.0, 121.46428571428577], [86.0, 129.83132530120488], [87.0, 142.72277227722768], [88.0, 170.59731543624162], [89.0, 120.52238805970147], [90.0, 133.13114754098356], [91.0, 148.05555555555554], [92.0, 174.79787234042556], [93.0, 217.53947368421058], [94.0, 149.36842105263162], [95.0, 162.5492957746479], [96.0, 186.21739130434779], [97.0, 211.40659340659346], [98.0, 220.03875968992253], [99.0, 258.5053763440861], [100.0, 309.20800000000014], [101.0, 149.86387434554973], [102.0, 157.30769230769238], [103.0, 328.17708333333337], [104.0, 200.48484848484856], [105.0, 164.04054054054058], [106.0, 221.97959183673476], [107.0, 203.07317073170734], [108.0, 242.26277372262777], [109.0, 194.59375], [110.0, 228.53846153846152], [111.0, 188.0151515151515], [112.0, 229.2268907563025], [113.0, 258.86301369862997], [114.0, 269.8661417322836], [115.0, 181.61904761904768], [116.0, 251.35200000000006], [117.0, 261.5850622406641], [118.0, 296.7186147186149], [119.0, 240.30973451327435], [120.0, 246.16000000000003], [121.0, 294.1842105263157], [122.0, 255.0138888888889], [123.0, 274.98507462686547], [124.0, 287.44230769230774], [125.0, 266.5533980582524], [126.0, 235.75280898876412], [127.0, 291.03125], [128.0, 222.1728395061729], [129.0, 305.2796208530806], [130.0, 256.05494505494505], [131.0, 219.48275862068962], [132.0, 281.62837837837833], [133.0, 313.9228486646884], [134.0, 197.46666666666673], [135.0, 314.10544217687067], [136.0, 299.18357487922697], [137.0, 243.69565217391306], [138.0, 251.22916666666666], [139.0, 278.4792626728111], [140.0, 291.32432432432427], [141.0, 302.3418181818179], [142.0, 317.3607214428858], [143.0, 331.81428571428575], [144.0, 267.6097560975611], [145.0, 323.5381165919282], [146.0, 389.99009900990103], [147.0, 332.04402515723274], [148.0, 322.4311926605505], [149.0, 329.49180327868845], [150.0, 360.9102112676056], [151.0, 324.9189189189188], [152.0, 354.2064220183485], [153.0, 297.7969924812029], [154.0, 404.3300283286118], [155.0, 299.34328358208955], [156.0, 404.1512605042017], [157.0, 382.45438596491255], [158.0, 335.79881656804736], [159.0, 304.50485436893206], [160.0, 348.20616883116907], [161.0, 330.10897435897436], [162.0, 366.4609929078014], [163.0, 343.98095238095226], [164.0, 352.1052631578947], [165.0, 371.40689655172434], [166.0, 369.24154589372006], [167.0, 363.270925110132], [168.0, 359.8046181172295], [169.0, 358.69709543568433], [170.0, 354.6645962732919], [171.0, 349.4777327935223], [172.0, 386.43478260869557], [173.0, 368.00715015321794], [174.0, 386.03995560488397], [175.0, 378.84511784511795], [176.0, 362.29927007299256], [177.0, 358.826151560178], [178.0, 364.9437148217635], [179.0, 352.99441340782136], [180.0, 361.69251700680275], [181.0, 333.1874999999998], [182.0, 373.0192563081008], [183.0, 354.63563115487966], [184.0, 365.6878048780485], [185.0, 357.8261421319806], [186.0, 306.9283582089552], [187.0, 369.94896851248666], [188.0, 354.96413043478253], [189.0, 415.91836734693874], [190.0, 388.65503489531454], [191.0, 365.70139534883754], [192.0, 364.6959064327489], [193.0, 368.78800413650464], [194.0, 362.21296296296305], [195.0, 356.86711711711695], [196.0, 373.1401869158881], [197.0, 345.72727272727275], [198.0, 375.26666666666654], [1.0, 7.888888888888889]], "isOverall": false, "label": "POST employee", "isController": false}, {"data": [[142.99247499999925, 292.7212750000016]], "isOverall": false, "label": "POST employee-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 198.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 47122.9, "minX": 1.73470686E12, "maxY": 826930.2166666667, "series": [{"data": [[1.73470704E12, 635065.5666666667], [1.73470692E12, 826930.2166666667], [1.7347071E12, 270703.05], [1.73470698E12, 745600.5], [1.73470686E12, 812089.6]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.73470704E12, 112001.63333333333], [1.73470692E12, 146318.0], [1.7347071E12, 47122.9], [1.73470698E12, 131777.91666666666], [1.73470686E12, 144633.91666666666]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7347071E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 7.6135057471264265, "minX": 1.73470686E12, "maxY": 416.5559598632703, "series": [{"data": [[1.73470704E12, 408.03805825242534], [1.73470692E12, 402.61165821147847], [1.7347071E12, 287.5090799031483], [1.73470698E12, 416.5559598632703], [1.73470686E12, 153.20773682607393]], "isOverall": false, "label": "GET All employees", "isController": false}, {"data": [[1.73470704E12, 37.19833420093705], [1.73470692E12, 8.151367478866256], [1.7347071E12, 8.458398744113053], [1.73470698E12, 7.6135057471264265], [1.73470686E12, 9.354906262465075]], "isOverall": false, "label": "GET thread name", "isController": false}, {"data": [[1.73470704E12, 329.9034267912775], [1.73470692E12, 347.10176202732185], [1.7347071E12, 217.11380368098148], [1.73470698E12, 350.53132942866495], [1.73470686E12, 117.84522003034878]], "isOverall": false, "label": "GET employee by id", "isController": false}, {"data": [[1.73470704E12, 349.4055634992845], [1.73470692E12, 363.50846276383874], [1.7347071E12, 230.96589147286764], [1.73470698E12, 369.9944836716685], [1.73470686E12, 127.46139963906163]], "isOverall": false, "label": "POST employee", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7347071E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 7.610963748894787, "minX": 1.73470686E12, "maxY": 415.5218877494769, "series": [{"data": [[1.73470704E12, 407.01359223300994], [1.73470692E12, 401.9504625484919], [1.7347071E12, 287.04661016949115], [1.73470698E12, 415.5218877494769], [1.73470686E12, 152.8574474565945]], "isOverall": false, "label": "GET All employees", "isController": false}, {"data": [[1.73470704E12, 37.19390942217604], [1.73470692E12, 8.148682247637948], [1.7347071E12, 8.45494505494505], [1.73470698E12, 7.610963748894787], [1.73470686E12, 9.348823294774629]], "isOverall": false, "label": "GET thread name", "isController": false}, {"data": [[1.73470704E12, 329.73870716510885], [1.73470692E12, 346.9854484260541], [1.7347071E12, 216.9460122699391], [1.73470698E12, 350.3604818211966], [1.73470686E12, 117.7152250885183]], "isOverall": false, "label": "GET employee by id", "isController": false}, {"data": [[1.73470704E12, 349.24125828675346], [1.73470692E12, 363.33900836320186], [1.7347071E12, 230.82449612403096], [1.73470698E12, 369.63691526919695], [1.73470686E12, 127.33065971525988]], "isOverall": false, "label": "POST employee", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7347071E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.73470686E12, "maxY": 12.141462779802193, "series": [{"data": [[1.73470704E12, 0.0], [1.73470692E12, 0.0], [1.7347071E12, 0.0], [1.73470698E12, 0.0], [1.73470686E12, 0.0]], "isOverall": false, "label": "GET All employees", "isController": false}, {"data": [[1.73470704E12, 12.141462779802193], [1.73470692E12, 0.40716061660865244], [1.7347071E12, 0.18744113029827292], [1.73470698E12, 0.3093501326259928], [1.73470686E12, 0.9044674910251278]], "isOverall": false, "label": "GET thread name", "isController": false}, {"data": [[1.73470704E12, 0.0], [1.73470692E12, 0.0], [1.7347071E12, 0.0], [1.73470698E12, 0.0], [1.73470686E12, 0.0]], "isOverall": false, "label": "GET employee by id", "isController": false}, {"data": [[1.73470704E12, 0.0], [1.73470692E12, 0.0], [1.7347071E12, 0.0], [1.73470698E12, 0.0], [1.73470686E12, 0.0]], "isOverall": false, "label": "POST employee", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7347071E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.73470686E12, "maxY": 11343.0, "series": [{"data": [[1.73470704E12, 11343.0], [1.73470692E12, 1361.0], [1.7347071E12, 998.0], [1.73470698E12, 2899.0], [1.73470686E12, 1073.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.73470704E12, 1.0], [1.73470692E12, 1.0], [1.7347071E12, 1.0], [1.73470698E12, 1.0], [1.73470686E12, 1.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.73470704E12, 421.0], [1.73470692E12, 428.0], [1.7347071E12, 344.0], [1.73470698E12, 441.0], [1.73470686E12, 316.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.73470704E12, 634.9900000000016], [1.73470692E12, 716.0], [1.7347071E12, 556.25], [1.73470698E12, 713.9900000000016], [1.73470686E12, 458.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.73470704E12, 318.0], [1.73470692E12, 339.0], [1.7347071E12, 209.0], [1.73470698E12, 362.0], [1.73470686E12, 171.0]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.73470704E12, 463.0], [1.73470692E12, 465.0], [1.7347071E12, 380.0], [1.73470698E12, 465.0], [1.73470686E12, 352.0]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7347071E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 10.0, "minX": 40.0, "maxY": 506.0, "series": [{"data": [[40.0, 10.0], [116.0, 12.0], [262.0, 11.0], [316.0, 255.0], [354.0, 333.5], [374.0, 506.0], [393.0, 443.0], [431.0, 431.0], [425.0, 49.0], [441.0, 367.0], [434.0, 87.0], [459.0, 412.0], [453.0, 169.0], [465.0, 275.5], [466.0, 344.0], [479.0, 298.0], [472.0, 276.0], [469.0, 184.5], [467.0, 202.0], [478.0, 141.5], [485.0, 293.0], [481.0, 323.0], [484.0, 221.0], [487.0, 264.0], [489.0, 202.0], [486.0, 188.0], [488.0, 170.0], [497.0, 303.0], [507.0, 314.0], [503.0, 349.0], [511.0, 332.0], [500.0, 353.0], [510.0, 303.5], [506.0, 321.0], [538.0, 381.0], [531.0, 80.0], [518.0, 338.0], [541.0, 356.0], [528.0, 331.0], [529.0, 309.0], [539.0, 312.0], [540.0, 313.0], [535.0, 325.0], [537.0, 305.0], [520.0, 317.0], [524.0, 310.0], [525.0, 312.0], [513.0, 303.0], [512.0, 297.0], [514.0, 364.0], [517.0, 315.0], [515.0, 291.5], [516.0, 286.0], [532.0, 334.0], [568.0, 342.0], [573.0, 380.0], [575.0, 352.0], [572.0, 369.5], [556.0, 376.0], [570.0, 347.0], [550.0, 355.0], [548.0, 356.5], [552.0, 348.0], [555.0, 276.0], [567.0, 358.0], [565.0, 346.0], [592.0, 422.5], [598.0, 182.5], [607.0, 339.0], [604.0, 348.5], [597.0, 331.0], [581.0, 244.0], [583.0, 361.0], [578.0, 363.0], [576.0, 365.0], [577.0, 352.5], [579.0, 372.0], [600.0, 357.0], [596.0, 357.0], [588.0, 359.0], [584.0, 361.0], [585.0, 354.0], [591.0, 369.0], [595.0, 362.0], [593.0, 269.0], [633.0, 366.0], [623.0, 387.0], [638.0, 347.5], [639.0, 334.0], [628.0, 315.0], [626.0, 362.0], [614.0, 356.0], [610.0, 339.5], [608.0, 354.0], [619.0, 347.0], [632.0, 351.0], [615.0, 331.0], [629.0, 343.0], [652.0, 359.0], [669.0, 331.0], [658.0, 303.0], [648.0, 291.0], [649.0, 343.0], [646.0, 356.0], [643.0, 335.0], [647.0, 344.0], [664.0, 325.0], [665.0, 340.5], [654.0, 356.0], [653.0, 344.0], [642.0, 351.0], [650.0, 376.5], [663.0, 358.0], [662.0, 345.0], [651.0, 373.0], [656.0, 370.0], [678.0, 348.0], [695.0, 294.0], [689.0, 342.5], [699.0, 350.0], [698.0, 332.5], [688.0, 334.0], [700.0, 273.5], [679.0, 351.0], [697.0, 319.0], [690.0, 344.0], [693.0, 321.0], [694.0, 343.0], [672.0, 343.5], [674.0, 364.0], [676.0, 348.0], [677.0, 351.0], [673.0, 345.0], [683.0, 355.0], [686.0, 335.0], [687.0, 322.0], [684.0, 357.0], [680.0, 362.5], [682.0, 359.0], [725.0, 272.0], [704.0, 306.0], [724.0, 274.0], [705.0, 283.0], [716.0, 288.0], [711.0, 365.0], [710.0, 345.0], [764.0, 213.0], [748.0, 229.5], [750.0, 260.5], [779.0, 186.0], [787.0, 203.0], [814.0, 138.0], [816.0, 151.0], [826.0, 176.0], [806.0, 177.0], [800.0, 192.0], [838.0, 254.0], [869.0, 119.0], [886.0, 115.0], [891.0, 182.0], [949.0, 10.0], [1047.0, 12.0], [1033.0, 39.0], [1078.0, 73.0], [1076.0, 88.5], [1070.0, 96.0], [1122.0, 39.0], [1149.0, 57.0], [1140.0, 63.0], [1124.0, 68.0], [1098.0, 85.0], [1167.0, 15.0], [1188.0, 18.0], [1174.0, 28.0], [1204.0, 36.0], [1194.0, 39.0], [1166.0, 55.0], [1264.0, 22.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1264.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 10.0, "minX": 40.0, "maxY": 506.0, "series": [{"data": [[40.0, 10.0], [116.0, 12.0], [262.0, 11.0], [316.0, 255.0], [354.0, 332.0], [374.0, 506.0], [393.0, 443.0], [431.0, 431.0], [425.0, 49.0], [441.0, 367.0], [434.0, 86.5], [459.0, 412.0], [453.0, 169.0], [465.0, 275.5], [466.0, 344.0], [479.0, 298.0], [472.0, 275.5], [469.0, 184.5], [467.0, 202.0], [478.0, 141.0], [485.0, 292.5], [481.0, 323.0], [484.0, 221.0], [487.0, 264.0], [489.0, 202.0], [486.0, 188.0], [488.0, 170.0], [497.0, 303.0], [507.0, 314.0], [503.0, 349.0], [511.0, 331.0], [500.0, 353.0], [510.0, 303.0], [506.0, 321.0], [538.0, 381.0], [531.0, 80.0], [518.0, 337.0], [541.0, 356.0], [528.0, 331.0], [529.0, 309.0], [539.0, 312.0], [540.0, 313.0], [535.0, 324.0], [537.0, 305.0], [520.0, 316.5], [524.0, 310.0], [525.0, 311.0], [513.0, 303.0], [512.0, 297.0], [514.0, 364.0], [517.0, 315.0], [515.0, 291.5], [516.0, 286.0], [532.0, 334.0], [568.0, 342.0], [573.0, 380.0], [575.0, 352.0], [572.0, 369.5], [556.0, 376.0], [570.0, 347.0], [550.0, 355.0], [548.0, 356.5], [552.0, 348.0], [555.0, 276.0], [567.0, 358.0], [565.0, 345.0], [592.0, 422.5], [598.0, 182.0], [607.0, 339.0], [604.0, 348.5], [597.0, 330.5], [581.0, 243.0], [583.0, 361.0], [578.0, 363.0], [576.0, 364.5], [577.0, 352.5], [579.0, 372.0], [600.0, 357.0], [596.0, 357.0], [588.0, 358.0], [584.0, 361.0], [585.0, 354.0], [591.0, 369.0], [595.0, 362.0], [593.0, 269.0], [633.0, 366.0], [623.0, 387.0], [638.0, 347.5], [639.0, 334.0], [628.0, 314.0], [626.0, 362.0], [614.0, 355.5], [610.0, 338.5], [608.0, 354.0], [619.0, 347.0], [632.0, 351.0], [615.0, 331.0], [629.0, 342.5], [652.0, 359.0], [669.0, 330.0], [658.0, 302.5], [648.0, 291.0], [649.0, 343.0], [646.0, 356.0], [643.0, 335.0], [647.0, 344.0], [664.0, 325.0], [665.0, 340.0], [654.0, 356.0], [653.0, 344.0], [642.0, 351.0], [650.0, 376.5], [663.0, 358.0], [662.0, 345.0], [651.0, 373.0], [656.0, 370.0], [678.0, 348.0], [695.0, 294.0], [689.0, 342.0], [699.0, 350.0], [698.0, 332.5], [688.0, 333.0], [700.0, 273.5], [679.0, 351.0], [697.0, 318.5], [690.0, 343.0], [693.0, 321.0], [694.0, 343.0], [672.0, 343.5], [674.0, 364.0], [676.0, 347.5], [677.0, 351.0], [673.0, 345.0], [683.0, 355.0], [686.0, 335.0], [687.0, 322.0], [684.0, 357.0], [680.0, 362.0], [682.0, 359.0], [725.0, 272.0], [704.0, 306.0], [724.0, 273.0], [705.0, 283.0], [716.0, 288.0], [711.0, 365.0], [710.0, 345.0], [764.0, 213.0], [748.0, 229.0], [750.0, 260.5], [779.0, 186.0], [787.0, 203.0], [814.0, 138.0], [816.0, 151.0], [826.0, 176.0], [806.0, 177.0], [800.0, 192.0], [838.0, 254.0], [869.0, 119.0], [886.0, 115.0], [891.0, 182.0], [949.0, 10.0], [1047.0, 12.0], [1033.0, 38.0], [1078.0, 72.5], [1076.0, 88.0], [1070.0, 96.0], [1122.0, 38.0], [1149.0, 57.0], [1140.0, 63.0], [1124.0, 68.0], [1098.0, 84.0], [1167.0, 14.0], [1188.0, 18.0], [1174.0, 28.0], [1204.0, 36.0], [1194.0, 39.0], [1166.0, 55.0], [1264.0, 22.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1264.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 214.25, "minX": 1.73470686E12, "maxY": 670.9166666666666, "series": [{"data": [[1.73470704E12, 512.7166666666667], [1.73470692E12, 670.9166666666666], [1.7347071E12, 214.25], [1.73470698E12, 603.5], [1.73470686E12, 665.2833333333333]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7347071E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 216.23333333333332, "minX": 1.73470686E12, "maxY": 670.9, "series": [{"data": [[1.73470704E12, 513.4333333333333], [1.73470692E12, 670.9], [1.7347071E12, 216.23333333333332], [1.73470698E12, 603.8333333333334], [1.73470686E12, 662.2666666666667]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7347071E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 53.083333333333336, "minX": 1.73470686E12, "maxY": 168.36666666666667, "series": [{"data": [[1.73470704E12, 128.06666666666666], [1.73470692E12, 167.58333333333334], [1.7347071E12, 53.083333333333336], [1.73470698E12, 150.8], [1.73470686E12, 167.13333333333333]], "isOverall": false, "label": "GET thread name-success", "isController": false}, {"data": [[1.73470704E12, 128.75], [1.73470692E12, 167.55], [1.7347071E12, 55.06666666666667], [1.73470698E12, 151.15], [1.73470686E12, 164.15]], "isOverall": false, "label": "GET All employees-success", "isController": false}, {"data": [[1.73470704E12, 128.21666666666667], [1.73470692E12, 167.4], [1.7347071E12, 53.75], [1.73470698E12, 151.06666666666666], [1.73470686E12, 166.23333333333332]], "isOverall": false, "label": "POST employee-success", "isController": false}, {"data": [[1.73470704E12, 128.4], [1.73470692E12, 168.36666666666667], [1.7347071E12, 54.333333333333336], [1.73470698E12, 150.81666666666666], [1.73470686E12, 164.75]], "isOverall": false, "label": "GET employee by id-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7347071E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 216.23333333333332, "minX": 1.73470686E12, "maxY": 670.9, "series": [{"data": [[1.73470704E12, 513.4333333333333], [1.73470692E12, 670.9], [1.7347071E12, 216.23333333333332], [1.73470698E12, 603.8333333333334], [1.73470686E12, 662.2666666666667]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7347071E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

